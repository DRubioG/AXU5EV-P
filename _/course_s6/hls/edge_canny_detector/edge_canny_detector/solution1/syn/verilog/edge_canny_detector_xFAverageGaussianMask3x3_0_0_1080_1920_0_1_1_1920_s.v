// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        gray_img_src_4362_dout,
        gray_img_src_4362_empty_n,
        gray_img_src_4362_read,
        gaussian_mat_4364_din,
        gaussian_mat_4364_full_n,
        gaussian_mat_4364_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_state4 = 6'd4;
parameter    ap_ST_fsm_state5 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state11 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] gray_img_src_4362_dout;
input   gray_img_src_4362_empty_n;
output   gray_img_src_4362_read;
output  [7:0] gaussian_mat_4364_din;
input   gaussian_mat_4364_full_n;
output   gaussian_mat_4364_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg gray_img_src_4362_read;
reg[7:0] gaussian_mat_4364_din;
reg gaussian_mat_4364_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    gray_img_src_4362_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln882_reg_839;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln882_7_reg_885;
reg   [0:0] cmp_i_i362_i_reg_881;
reg    gaussian_mat_4364_blk_n;
reg    ap_enable_reg_pp1_iter4;
reg   [0:0] icmp_ln874_9_reg_918;
reg   [0:0] icmp_ln874_9_reg_918_pp1_iter3_reg;
wire    ap_CS_fsm_state11;
reg   [10:0] empty_reg_239;
reg   [10:0] empty_62_reg_274;
reg   [10:0] empty_62_reg_274_pp1_iter1_reg;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_predicate_op88_read_state7;
reg    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
wire    ap_block_state9_pp1_stage0_iter3;
reg    ap_block_state10_pp1_stage0_iter4;
reg    ap_block_pp1_stage0_11001;
reg   [7:0] arrayidx25_i_i494_load_01405_reg_286;
reg   [7:0] A01_reg_298;
reg   [7:0] arrayidx14_i_i538_load_01401_reg_311;
reg   [7:0] arrayidx10_i_i539_load_01399_reg_323;
reg   [7:0] i_op_assign_reg_336;
reg   [7:0] A00_reg_348;
reg   [9:0] A2_reg_361;
wire   [0:0] icmp_ln882_fu_409_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] add_ln695_fu_415_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln538_fu_421_p1;
reg   [63:0] zext_ln538_reg_848;
wire   [0:0] icmp_ln209_fu_426_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] cmp_i_i362_i_fu_507_p2;
wire   [0:0] icmp_ln882_7_fu_513_p2;
reg   [0:0] icmp_ln882_7_reg_885_pp1_iter1_reg;
reg   [0:0] icmp_ln882_7_reg_885_pp1_iter2_reg;
reg   [0:0] icmp_ln882_7_reg_885_pp1_iter3_reg;
wire   [10:0] add_ln695_11_fu_519_p2;
reg   [10:0] add_ln695_11_reg_889;
reg    ap_enable_reg_pp1_iter0;
reg   [1:0] p_load70_reg_894;
wire   [0:0] icmp_ln874_9_fu_546_p2;
wire   [7:0] src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_return;
reg   [7:0] src_buf1_V_2_reg_922;
reg    ap_enable_reg_pp1_iter3;
wire   [7:0] src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return;
reg   [7:0] src_buf2_V_2_reg_927;
wire   [7:0] call_ret_xfExtractPixels_1_1_0_s_fu_394_ap_return;
reg   [7:0] call_ret_reg_932;
reg   [7:0] trunc_ln304_1_reg_937;
wire   [9:0] phitmp4_fu_716_p3;
reg   [9:0] phitmp4_reg_942;
wire   [12:0] select_ln255_fu_825_p3;
wire   [10:0] add_ln695_10_fu_833_p2;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter2;
reg    ap_condition_pp1_exit_iter3_state9;
wire   [10:0] buf_0_V_address0;
reg    buf_0_V_ce0;
wire   [7:0] buf_0_V_q0;
reg   [10:0] buf_0_V_address1;
reg    buf_0_V_ce1;
reg    buf_0_V_we1;
reg   [7:0] buf_0_V_d1;
wire   [10:0] buf_1_V_address0;
reg    buf_1_V_ce0;
wire   [7:0] buf_1_V_q0;
reg   [10:0] buf_1_V_address1;
reg    buf_1_V_ce1;
reg    buf_1_V_we1;
reg   [7:0] buf_1_V_d1;
wire   [10:0] buf_2_V_address0;
reg    buf_2_V_ce0;
wire   [7:0] buf_2_V_q0;
reg   [10:0] buf_2_V_address1;
reg    buf_2_V_ce1;
reg    buf_2_V_we1;
reg   [7:0] buf_2_V_d1;
wire    src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_ready;
wire    src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_ready;
wire    call_ret_xfExtractPixels_1_1_0_s_fu_394_ap_ready;
reg   [10:0] empty_60_reg_250;
wire    ap_CS_fsm_state4;
wire   [12:0] ap_phi_mux_empty_61_phi_fu_266_p4;
reg   [12:0] empty_61_reg_262;
reg   [10:0] ap_phi_mux_empty_62_phi_fu_278_p4;
reg   [7:0] ap_phi_mux_arrayidx25_i_i494_load_01405_phi_fu_290_p4;
reg   [7:0] ap_phi_mux_A01_phi_fu_302_p4;
reg   [7:0] ap_phi_mux_arrayidx14_i_i538_load_01401_phi_fu_315_p4;
reg   [7:0] ap_phi_mux_arrayidx10_i_i539_load_01399_phi_fu_327_p4;
reg   [7:0] ap_phi_mux_i_op_assign_phi_fu_340_p4;
reg   [7:0] ap_phi_mux_A00_phi_fu_352_p4;
wire   [7:0] ap_phi_reg_pp1_iter0_buf2_V_reg_373;
reg   [7:0] ap_phi_reg_pp1_iter1_buf2_V_reg_373;
reg   [7:0] ap_phi_reg_pp1_iter2_buf2_V_reg_373;
reg   [7:0] ap_phi_reg_pp1_iter3_buf2_V_reg_373;
wire   [7:0] buf0_V_fu_552_p5;
wire   [7:0] buf1_V_fu_565_p5;
wire   [63:0] zext_ln538_6_fu_525_p1;
wire   [63:0] zext_ln538_5_fu_532_p1;
wire   [63:0] zext_ln324_fu_539_p1;
reg   [1:0] empty_57_fu_104;
wire   [1:0] select_ln221_fu_468_p3;
reg   [1:0] empty_58_fu_108;
wire   [1:0] select_ln221_1_fu_476_p3;
reg   [1:0] empty_59_fu_112;
wire   [1:0] select_ln221_2_fu_484_p3;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln874_fu_462_p2;
wire   [8:0] zext_ln46_fu_586_p1;
wire   [8:0] zext_ln45_fu_578_p1;
wire   [8:0] A00_2_fu_598_p2;
wire   [8:0] zext_ln1464_1_fu_590_p1;
wire   [8:0] zext_ln45_1_fu_582_p1;
wire   [8:0] add_ln49_fu_608_p2;
wire   [9:0] zext_ln46_1_fu_604_p1;
wire   [9:0] zext_ln49_fu_614_p1;
wire   [8:0] zext_ln47_fu_624_p1;
wire   [8:0] zext_ln48_fu_628_p1;
wire   [8:0] add_ln48_fu_636_p2;
wire   [8:0] zext_ln1464_2_fu_594_p1;
wire   [8:0] zext_ln48_1_fu_632_p1;
wire   [8:0] add_ln50_2_fu_646_p2;
wire   [9:0] zext_ln50_3_fu_642_p1;
wire   [9:0] zext_ln50_4_fu_652_p1;
wire   [9:0] add_ln50_3_fu_656_p2;
wire   [9:0] A0_1_fu_618_p2;
wire   [10:0] A1_1_fu_662_p3;
wire   [9:0] A2_1_fu_670_p3;
wire   [10:0] zext_ln52_4_fu_678_p1;
wire   [10:0] zext_ln52_6_fu_686_p1;
wire   [10:0] add_ln52_2_fu_690_p2;
wire   [11:0] zext_ln52_5_fu_682_p1;
wire   [11:0] zext_ln52_7_fu_696_p1;
wire   [11:0] add_ln52_3_fu_700_p2;
wire   [8:0] zext_ln1464_fu_732_p1;
wire   [8:0] zext_ln882_1_fu_728_p1;
wire   [8:0] zext_ln882_fu_724_p1;
wire   [8:0] zext_ln50_fu_742_p1;
wire   [8:0] add_ln50_fu_746_p2;
wire   [9:0] zext_ln50_2_fu_756_p1;
wire   [9:0] zext_ln50_1_fu_752_p1;
wire   [9:0] add_ln50_1_fu_760_p2;
wire   [8:0] A0_fu_736_p2;
wire   [10:0] A1_fu_766_p3;
wire   [10:0] zext_ln52_fu_774_p1;
wire   [10:0] zext_ln52_2_fu_782_p1;
wire   [10:0] add_ln52_fu_786_p2;
wire   [11:0] zext_ln52_3_fu_792_p1;
wire   [11:0] zext_ln52_1_fu_778_p1;
wire   [11:0] add_ln52_1_fu_796_p2;
wire   [12:0] add_ln695_9_fu_813_p2;
wire   [0:0] icmp_ln874_8_fu_819_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_180;
reg    ap_condition_187;
reg    ap_condition_721;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_V_address0),
    .ce0(buf_0_V_ce0),
    .q0(buf_0_V_q0),
    .address1(buf_0_V_address1),
    .ce1(buf_0_V_ce1),
    .we1(buf_0_V_we1),
    .d1(buf_0_V_d1)
);

edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_V_address0),
    .ce0(buf_1_V_ce0),
    .q0(buf_1_V_q0),
    .address1(buf_1_V_address1),
    .ce1(buf_1_V_ce1),
    .we1(buf_1_V_we1),
    .d1(buf_1_V_d1)
);

edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_V_address0),
    .ce0(buf_2_V_ce0),
    .q0(buf_2_V_q0),
    .address1(buf_2_V_address1),
    .ce1(buf_2_V_ce1),
    .we1(buf_2_V_we1),
    .d1(buf_2_V_d1)
);

edge_canny_detector_xfExtractPixels_1_1_0_s src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384(
    .ap_ready(src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_ready),
    .p_read1(buf0_V_fu_552_p5),
    .ap_return(src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_return)
);

edge_canny_detector_xfExtractPixels_1_1_0_s src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389(
    .ap_ready(src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_ready),
    .p_read1(buf1_V_fu_565_p5),
    .ap_return(src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return)
);

edge_canny_detector_xfExtractPixels_1_1_0_s call_ret_xfExtractPixels_1_1_0_s_fu_394(
    .ap_ready(call_ret_xfExtractPixels_1_1_0_s_fu_394_ap_ready),
    .p_read1(ap_phi_reg_pp1_iter3_buf2_V_reg_373),
    .ap_return(call_ret_xfExtractPixels_1_1_0_s_fu_394_ap_return)
);

edge_canny_detector_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U24(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(empty_59_fu_112),
    .dout(buf0_V_fu_552_p5)
);

edge_canny_detector_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U25(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(empty_58_fu_108),
    .dout(buf1_V_fu_565_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter3_state9)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0)))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter3_state9))) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
        A00_reg_348 <= i_op_assign_reg_336;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        A00_reg_348 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
        A01_reg_298 <= arrayidx25_i_i494_load_01405_reg_286;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        A01_reg_298 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
                A2_reg_361[9 : 2] <= phitmp4_reg_942[9 : 2];
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
                A2_reg_361[2] <= 1'b0;
        A2_reg_361[3] <= 1'b0;
        A2_reg_361[4] <= 1'b0;
        A2_reg_361[5] <= 1'b0;
        A2_reg_361[6] <= 1'b0;
        A2_reg_361[7] <= 1'b0;
        A2_reg_361[8] <= 1'b0;
        A2_reg_361[9] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_180)) begin
        if (((cmp_i_i362_i_reg_881 == 1'd0) & (icmp_ln882_7_fu_513_p2 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_buf2_V_reg_373 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_buf2_V_reg_373 <= ap_phi_reg_pp1_iter0_buf2_V_reg_373;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_187)) begin
        if (((cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_buf2_V_reg_373 <= gray_img_src_4362_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_buf2_V_reg_373 <= ap_phi_reg_pp1_iter1_buf2_V_reg_373;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
        arrayidx10_i_i539_load_01399_reg_323 <= arrayidx14_i_i538_load_01401_reg_311;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        arrayidx10_i_i539_load_01399_reg_323 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
        arrayidx14_i_i538_load_01401_reg_311 <= src_buf2_V_2_reg_927;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        arrayidx14_i_i538_load_01401_reg_311 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
        arrayidx25_i_i494_load_01405_reg_286 <= call_ret_reg_932;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        arrayidx25_i_i494_load_01405_reg_286 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        if ((~(ap_phi_mux_empty_61_phi_fu_266_p4 == 13'd2) & ~(ap_phi_mux_empty_61_phi_fu_266_p4 == 13'd0))) begin
            empty_57_fu_104 <= select_ln221_fu_468_p3;
        end else if ((ap_phi_mux_empty_61_phi_fu_266_p4 == 13'd2)) begin
            empty_57_fu_104 <= 2'd2;
        end else if ((ap_phi_mux_empty_61_phi_fu_266_p4 == 13'd0)) begin
            empty_57_fu_104 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        if ((~(ap_phi_mux_empty_61_phi_fu_266_p4 == 13'd2) & ~(ap_phi_mux_empty_61_phi_fu_266_p4 == 13'd0))) begin
            empty_58_fu_108 <= select_ln221_1_fu_476_p3;
        end else if ((ap_phi_mux_empty_61_phi_fu_266_p4 == 13'd2)) begin
            empty_58_fu_108 <= 2'd1;
        end else if ((ap_phi_mux_empty_61_phi_fu_266_p4 == 13'd0)) begin
            empty_58_fu_108 <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        if ((~(ap_phi_mux_empty_61_phi_fu_266_p4 == 13'd2) & ~(ap_phi_mux_empty_61_phi_fu_266_p4 == 13'd0))) begin
            empty_59_fu_112 <= select_ln221_2_fu_484_p3;
        end else if ((ap_phi_mux_empty_61_phi_fu_266_p4 == 13'd2)) begin
            empty_59_fu_112 <= 2'd0;
        end else if ((ap_phi_mux_empty_61_phi_fu_266_p4 == 13'd0)) begin
            empty_59_fu_112 <= 2'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_60_reg_250 <= 11'd1;
    end else if (((gaussian_mat_4364_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        empty_60_reg_250 <= add_ln695_10_fu_833_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_61_reg_262 <= 13'd2;
    end else if (((gaussian_mat_4364_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        empty_61_reg_262 <= select_ln255_fu_825_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_62_reg_274 <= add_ln695_11_reg_889;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        empty_62_reg_274 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln882_fu_409_p2 == 1'd0))) begin
        empty_reg_239 <= add_ln695_fu_415_p2;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_239 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
        i_op_assign_reg_336 <= src_buf1_V_2_reg_922;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        i_op_assign_reg_336 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln695_11_reg_889 <= add_ln695_11_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_buf2_V_reg_373 <= ap_phi_reg_pp1_iter2_buf2_V_reg_373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln882_7_reg_885_pp1_iter2_reg == 1'd0))) begin
        call_ret_reg_932 <= call_ret_xfExtractPixels_1_1_0_s_fu_394_ap_return;
        phitmp4_reg_942[9 : 2] <= phitmp4_fu_716_p3[9 : 2];
        src_buf1_V_2_reg_922 <= src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_return;
        src_buf2_V_2_reg_927 <= src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        cmp_i_i362_i_reg_881 <= cmp_i_i362_i_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_62_reg_274_pp1_iter1_reg <= empty_62_reg_274;
        icmp_ln882_7_reg_885 <= icmp_ln882_7_fu_513_p2;
        icmp_ln882_7_reg_885_pp1_iter1_reg <= icmp_ln882_7_reg_885;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_7_reg_885_pp1_iter1_reg == 1'd0))) begin
        icmp_ln874_9_reg_918 <= icmp_ln874_9_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln874_9_reg_918_pp1_iter3_reg <= icmp_ln874_9_reg_918;
        icmp_ln882_7_reg_885_pp1_iter2_reg <= icmp_ln882_7_reg_885_pp1_iter1_reg;
        icmp_ln882_7_reg_885_pp1_iter3_reg <= icmp_ln882_7_reg_885_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln882_reg_839 <= icmp_ln882_fu_409_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln882_7_fu_513_p2 == 1'd0))) begin
        p_load70_reg_894 <= empty_57_fu_104;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_7_reg_885_pp1_iter2_reg == 1'd0))) begin
        trunc_ln304_1_reg_937 <= {{add_ln52_3_fu_700_p2[11:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln882_fu_409_p2 == 1'd0))) begin
        zext_ln538_reg_848[10 : 0] <= zext_ln538_fu_421_p1[10 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln882_fu_409_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_condition_pp1_exit_iter3_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter3_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln882_7_fu_513_p2 == 1'd1))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_A00_phi_fu_352_p4 = i_op_assign_reg_336;
    end else begin
        ap_phi_mux_A00_phi_fu_352_p4 = A00_reg_348;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_A01_phi_fu_302_p4 = arrayidx25_i_i494_load_01405_reg_286;
    end else begin
        ap_phi_mux_A01_phi_fu_302_p4 = A01_reg_298;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_arrayidx10_i_i539_load_01399_phi_fu_327_p4 = arrayidx14_i_i538_load_01401_reg_311;
    end else begin
        ap_phi_mux_arrayidx10_i_i539_load_01399_phi_fu_327_p4 = arrayidx10_i_i539_load_01399_reg_323;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_arrayidx14_i_i538_load_01401_phi_fu_315_p4 = src_buf2_V_2_reg_927;
    end else begin
        ap_phi_mux_arrayidx14_i_i538_load_01401_phi_fu_315_p4 = arrayidx14_i_i538_load_01401_reg_311;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_arrayidx25_i_i494_load_01405_phi_fu_290_p4 = call_ret_reg_932;
    end else begin
        ap_phi_mux_arrayidx25_i_i494_load_01405_phi_fu_290_p4 = arrayidx25_i_i494_load_01405_reg_286;
    end
end

always @ (*) begin
    if (((icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_empty_62_phi_fu_278_p4 = add_ln695_11_reg_889;
    end else begin
        ap_phi_mux_empty_62_phi_fu_278_p4 = empty_62_reg_274;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln882_7_reg_885_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_i_op_assign_phi_fu_340_p4 = src_buf1_V_2_reg_922;
    end else begin
        ap_phi_mux_i_op_assign_phi_fu_340_p4 = i_op_assign_reg_336;
    end
end

always @ (*) begin
    if (((cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd0))) begin
        buf_0_V_address1 = zext_ln538_5_fu_532_p1;
    end else if (((cmp_i_i362_i_reg_881 == 1'd0) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd0))) begin
        buf_0_V_address1 = zext_ln538_6_fu_525_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_0_V_address1 = zext_ln538_fu_421_p1;
    end else begin
        buf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd0)) | ((cmp_i_i362_i_reg_881 == 1'd0) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        buf_0_V_ce1 = 1'b1;
    end else begin
        buf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd0))) begin
        buf_0_V_d1 = gray_img_src_4362_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((cmp_i_i362_i_reg_881 == 1'd0) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd0)))) begin
        buf_0_V_d1 = 8'd0;
    end else begin
        buf_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd0)) | ((cmp_i_i362_i_reg_881 == 1'd0) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln882_fu_409_p2 == 1'd0)))) begin
        buf_0_V_we1 = 1'b1;
    end else begin
        buf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd1))) begin
        buf_1_V_address1 = zext_ln538_5_fu_532_p1;
    end else if (((cmp_i_i362_i_reg_881 == 1'd0) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd1))) begin
        buf_1_V_address1 = zext_ln538_6_fu_525_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_1_V_address1 = zext_ln538_reg_848;
    end else begin
        buf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd1)) | ((cmp_i_i362_i_reg_881 == 1'd0) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_1_V_ce1 = 1'b1;
    end else begin
        buf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i362_i_reg_881 == 1'd0) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd1))) begin
        buf_1_V_d1 = 8'd0;
    end else if ((((cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_1_V_d1 = gray_img_src_4362_dout;
    end else begin
        buf_1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd1)) | ((icmp_ln882_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((cmp_i_i362_i_reg_881 == 1'd0) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load70_reg_894 == 2'd1)))) begin
        buf_1_V_we1 = 1'b1;
    end else begin
        buf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_721)) begin
        if ((cmp_i_i362_i_reg_881 == 1'd1)) begin
            buf_2_V_address1 = zext_ln538_5_fu_532_p1;
        end else if ((cmp_i_i362_i_reg_881 == 1'd0)) begin
            buf_2_V_address1 = zext_ln538_6_fu_525_p1;
        end else begin
            buf_2_V_address1 = 'bx;
        end
    end else begin
        buf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(p_load70_reg_894 == 2'd1) & ~(p_load70_reg_894 == 2'd0) & (cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(p_load70_reg_894 == 2'd1) & ~(p_load70_reg_894 == 2'd0) & (cmp_i_i362_i_reg_881 == 1'd0) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_2_V_ce1 = 1'b1;
    end else begin
        buf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_721)) begin
        if ((cmp_i_i362_i_reg_881 == 1'd1)) begin
            buf_2_V_d1 = gray_img_src_4362_dout;
        end else if ((cmp_i_i362_i_reg_881 == 1'd0)) begin
            buf_2_V_d1 = 8'd0;
        end else begin
            buf_2_V_d1 = 'bx;
        end
    end else begin
        buf_2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(p_load70_reg_894 == 2'd1) & ~(p_load70_reg_894 == 2'd0) & (cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(p_load70_reg_894 == 2'd1) & ~(p_load70_reg_894 == 2'd0) & (cmp_i_i362_i_reg_881 == 1'd0) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_2_V_we1 = 1'b1;
    end else begin
        buf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((icmp_ln874_9_reg_918_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0)))) begin
        gaussian_mat_4364_blk_n = gaussian_mat_4364_full_n;
    end else begin
        gaussian_mat_4364_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((gaussian_mat_4364_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        gaussian_mat_4364_din = {{add_ln52_1_fu_796_p2[11:4]}};
    end else if (((icmp_ln874_9_reg_918_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001))) begin
        gaussian_mat_4364_din = trunc_ln304_1_reg_937;
    end else begin
        gaussian_mat_4364_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln874_9_reg_918_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((gaussian_mat_4364_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        gaussian_mat_4364_write = 1'b1;
    end else begin
        gaussian_mat_4364_write = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln882_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gray_img_src_4362_blk_n = gray_img_src_4362_empty_n;
    end else begin
        gray_img_src_4362_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op88_read_state7 == 1'b1)) | ((icmp_ln882_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gray_img_src_4362_read = 1'b1;
    end else begin
        gray_img_src_4362_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln882_fu_409_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln882_fu_409_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((gaussian_mat_4364_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A00_2_fu_598_p2 = (zext_ln46_fu_586_p1 + zext_ln45_fu_578_p1);

assign A0_1_fu_618_p2 = (zext_ln46_1_fu_604_p1 + zext_ln49_fu_614_p1);

assign A0_fu_736_p2 = (zext_ln1464_fu_732_p1 + zext_ln882_1_fu_728_p1);

assign A1_1_fu_662_p3 = {{add_ln50_3_fu_656_p2}, {1'd0}};

assign A1_fu_766_p3 = {{add_ln50_1_fu_760_p2}, {1'd0}};

assign A2_1_fu_670_p3 = {{ap_phi_mux_arrayidx14_i_i538_load_01401_phi_fu_315_p4}, {2'd0}};

assign add_ln48_fu_636_p2 = (zext_ln47_fu_624_p1 + zext_ln48_fu_628_p1);

assign add_ln49_fu_608_p2 = (zext_ln1464_1_fu_590_p1 + zext_ln45_1_fu_582_p1);

assign add_ln50_1_fu_760_p2 = (zext_ln50_2_fu_756_p1 + zext_ln50_1_fu_752_p1);

assign add_ln50_2_fu_646_p2 = (zext_ln1464_2_fu_594_p1 + zext_ln48_1_fu_632_p1);

assign add_ln50_3_fu_656_p2 = (zext_ln50_3_fu_642_p1 + zext_ln50_4_fu_652_p1);

assign add_ln50_fu_746_p2 = (zext_ln882_fu_724_p1 + zext_ln50_fu_742_p1);

assign add_ln52_1_fu_796_p2 = (zext_ln52_3_fu_792_p1 + zext_ln52_1_fu_778_p1);

assign add_ln52_2_fu_690_p2 = (zext_ln52_4_fu_678_p1 + zext_ln52_6_fu_686_p1);

assign add_ln52_3_fu_700_p2 = (zext_ln52_5_fu_682_p1 + zext_ln52_7_fu_696_p1);

assign add_ln52_fu_786_p2 = (zext_ln52_fu_774_p1 + zext_ln52_2_fu_782_p1);

assign add_ln695_10_fu_833_p2 = (empty_60_reg_250 + 11'd1);

assign add_ln695_11_fu_519_p2 = (ap_phi_mux_empty_62_phi_fu_278_p4 + 11'd1);

assign add_ln695_9_fu_813_p2 = (empty_61_reg_262 + 13'd1);

assign add_ln695_fu_415_p2 = (empty_reg_239 + 11'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln882_reg_839 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (gray_img_src_4362_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln882_reg_839 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (gray_img_src_4362_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((icmp_ln874_9_reg_918_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (gaussian_mat_4364_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gray_img_src_4362_empty_n == 1'b0) & (ap_predicate_op88_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((icmp_ln874_9_reg_918_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (gaussian_mat_4364_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gray_img_src_4362_empty_n == 1'b0) & (ap_predicate_op88_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((icmp_ln874_9_reg_918_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (gaussian_mat_4364_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gray_img_src_4362_empty_n == 1'b0) & (ap_predicate_op88_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp1_stage0_iter4 = ((icmp_ln874_9_reg_918_pp1_iter3_reg == 1'd0) & (gaussian_mat_4364_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln882_reg_839 == 1'd0) & (gray_img_src_4362_empty_n == 1'b0));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = ((gray_img_src_4362_empty_n == 1'b0) & (ap_predicate_op88_read_state7 == 1'b1));
end

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_180 = ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_187 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_721 = (~(p_load70_reg_894 == 2'd1) & ~(p_load70_reg_894 == 2'd0) & (icmp_ln882_7_reg_885 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_empty_61_phi_fu_266_p4 = empty_61_reg_262;

assign ap_phi_reg_pp1_iter0_buf2_V_reg_373 = 'bx;

always @ (*) begin
    ap_predicate_op88_read_state7 = ((cmp_i_i362_i_reg_881 == 1'd1) & (icmp_ln882_7_reg_885 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign buf_0_V_address0 = zext_ln324_fu_539_p1;

assign buf_1_V_address0 = zext_ln324_fu_539_p1;

assign buf_2_V_address0 = zext_ln324_fu_539_p1;

assign cmp_i_i362_i_fu_507_p2 = ((empty_60_reg_250 < 11'd1080) ? 1'b1 : 1'b0);

assign icmp_ln209_fu_426_p2 = ((empty_60_reg_250 == 11'd1081) ? 1'b1 : 1'b0);

assign icmp_ln874_8_fu_819_p2 = ((add_ln695_9_fu_813_p2 == 13'd3) ? 1'b1 : 1'b0);

assign icmp_ln874_9_fu_546_p2 = ((empty_62_reg_274_pp1_iter1_reg == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_462_p2 = ((empty_61_reg_262 == 13'd1) ? 1'b1 : 1'b0);

assign icmp_ln882_7_fu_513_p2 = ((ap_phi_mux_empty_62_phi_fu_278_p4 == 11'd1920) ? 1'b1 : 1'b0);

assign icmp_ln882_fu_409_p2 = ((empty_reg_239 == 11'd1920) ? 1'b1 : 1'b0);

assign phitmp4_fu_716_p3 = {{src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return}, {2'd0}};

assign select_ln221_1_fu_476_p3 = ((icmp_ln874_fu_462_p2[0:0] === 1'b1) ? 2'd0 : empty_58_fu_108);

assign select_ln221_2_fu_484_p3 = ((icmp_ln874_fu_462_p2[0:0] === 1'b1) ? 2'd2 : empty_59_fu_112);

assign select_ln221_fu_468_p3 = ((icmp_ln874_fu_462_p2[0:0] === 1'b1) ? 2'd1 : empty_57_fu_104);

assign select_ln255_fu_825_p3 = ((icmp_ln874_8_fu_819_p2[0:0] === 1'b1) ? 13'd0 : add_ln695_9_fu_813_p2);

assign start_out = real_start;

assign zext_ln1464_1_fu_590_p1 = call_ret_xfExtractPixels_1_1_0_s_fu_394_ap_return;

assign zext_ln1464_2_fu_594_p1 = src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return;

assign zext_ln1464_fu_732_p1 = A01_reg_298;

assign zext_ln324_fu_539_p1 = empty_62_reg_274_pp1_iter1_reg;

assign zext_ln45_1_fu_582_p1 = src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_return;

assign zext_ln45_fu_578_p1 = ap_phi_mux_A00_phi_fu_352_p4;

assign zext_ln46_1_fu_604_p1 = A00_2_fu_598_p2;

assign zext_ln46_fu_586_p1 = ap_phi_mux_A01_phi_fu_302_p4;

assign zext_ln47_fu_624_p1 = ap_phi_mux_arrayidx10_i_i539_load_01399_phi_fu_327_p4;

assign zext_ln48_1_fu_632_p1 = ap_phi_mux_i_op_assign_phi_fu_340_p4;

assign zext_ln48_fu_628_p1 = ap_phi_mux_arrayidx25_i_i494_load_01405_phi_fu_290_p4;

assign zext_ln49_fu_614_p1 = add_ln49_fu_608_p2;

assign zext_ln50_1_fu_752_p1 = add_ln50_fu_746_p2;

assign zext_ln50_2_fu_756_p1 = arrayidx10_i_i539_load_01399_reg_323;

assign zext_ln50_3_fu_642_p1 = add_ln48_fu_636_p2;

assign zext_ln50_4_fu_652_p1 = add_ln50_2_fu_646_p2;

assign zext_ln50_fu_742_p1 = i_op_assign_reg_336;

assign zext_ln52_1_fu_778_p1 = A1_fu_766_p3;

assign zext_ln52_2_fu_782_p1 = A2_reg_361;

assign zext_ln52_3_fu_792_p1 = add_ln52_fu_786_p2;

assign zext_ln52_4_fu_678_p1 = A0_1_fu_618_p2;

assign zext_ln52_5_fu_682_p1 = A1_1_fu_662_p3;

assign zext_ln52_6_fu_686_p1 = A2_1_fu_670_p3;

assign zext_ln52_7_fu_696_p1 = add_ln52_2_fu_690_p2;

assign zext_ln52_fu_774_p1 = A0_fu_736_p2;

assign zext_ln538_5_fu_532_p1 = empty_62_reg_274;

assign zext_ln538_6_fu_525_p1 = empty_62_reg_274;

assign zext_ln538_fu_421_p1 = empty_reg_239;

assign zext_ln882_1_fu_728_p1 = A00_reg_348;

assign zext_ln882_fu_724_p1 = arrayidx25_i_i494_load_01405_reg_286;

always @ (posedge ap_clk) begin
    A2_reg_361[1:0] <= 2'b00;
    zext_ln538_reg_848[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    phitmp4_reg_942[1:0] <= 2'b00;
end

endmodule //edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s
