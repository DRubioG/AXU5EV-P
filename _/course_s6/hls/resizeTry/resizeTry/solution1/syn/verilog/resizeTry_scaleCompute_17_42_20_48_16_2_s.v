// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module resizeTry_scaleCompute_17_42_20_48_16_2_s (
        ap_ready,
        currindex,
        inscale,
        ap_return
);


output   ap_ready;
input  [19:0] currindex;
input  [33:0] inscale;
output  [41:0] ap_return;

wire   [41:0] lhs_V_fu_34_p3;
wire  signed [41:0] ret_V_fu_42_p2;
wire   [33:0] r_V_fu_56_p0;
wire   [73:0] r_V_fu_56_p2;
wire   [73:0] ret_V_1_fu_62_p2;
wire   [73:0] r_V_fu_56_p00;

resizeTry_mul_34ns_42s_74_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 42 ),
    .dout_WIDTH( 74 ))
mul_34ns_42s_74_1_1_U13(
    .din0(r_V_fu_56_p0),
    .din1(ret_V_fu_42_p2),
    .dout(r_V_fu_56_p2)
);

assign ap_ready = 1'b1;

assign ap_return = {{ret_V_1_fu_62_p2[73:32]}};

assign lhs_V_fu_34_p3 = {{currindex}, {22'd0}};

assign r_V_fu_56_p0 = r_V_fu_56_p00;

assign r_V_fu_56_p00 = inscale;

assign ret_V_1_fu_62_p2 = ($signed(r_V_fu_56_p2) + $signed(74'd18889456924279326113792));

assign ret_V_fu_42_p2 = (lhs_V_fu_34_p3 | 42'd2097152);

endmodule //resizeTry_scaleCompute_17_42_20_48_16_2_s
