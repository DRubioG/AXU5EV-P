-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity resizeTry_resizeNNBilinear_9_1080_1920_1_640_640_2_2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    img_src_4180_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    img_src_4180_empty_n : IN STD_LOGIC;
    img_src_4180_read : OUT STD_LOGIC;
    img_dst_4181_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    img_dst_4181_full_n : IN STD_LOGIC;
    img_dst_4181_write : OUT STD_LOGIC );
end;


architecture behav of resizeTry_resizeNNBilinear_9_1080_1920_1_640_640_2_2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv43_78000000000 : STD_LOGIC_VECTOR (42 downto 0) := "1111000000000000000000000000000000000000000";
    constant ap_const_lv43_43800000000 : STD_LOGIC_VECTOR (42 downto 0) := "1000011100000000000000000000000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv12_F00 : STD_LOGIC_VECTOR (11 downto 0) := "111100000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv42_10DC00000 : STD_LOGIC_VECTOR (41 downto 0) := "000000000100001101110000000000000000000000";
    constant ap_const_lv32_438 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000111000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_280 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000000";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv33_10DC00000 : STD_LOGIC_VECTOR (32 downto 0) := "100001101110000000000000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv11_280 : STD_LOGIC_VECTOR (10 downto 0) := "01010000000";
    constant ap_const_lv42_1DFC00000 : STD_LOGIC_VECTOR (41 downto 0) := "000000000111011111110000000000000000000000";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv33_1DFC00000 : STD_LOGIC_VECTOR (32 downto 0) := "111011111110000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv11_77F : STD_LOGIC_VECTOR (10 downto 0) := "11101111111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal img_src_4180_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln331_reg_1875 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln388_reg_2020 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp84_reg_1973 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_reg_2029 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_dst_4181_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal cmp282_reg_1988 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_1_reg_2044 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_1_reg_2044_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_359 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_reg_370 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_381 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_1_reg_439 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_1_reg_439_pp1_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state9_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op115_read_state10 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter7 : BOOLEAN;
    signal ap_predicate_op364_write_state17 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal flag_write_reg_451 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_xfUDivResize_fu_560_ap_return : STD_LOGIC_VECTOR (33 downto 0);
    signal Xscale64_reg_571 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal Yscale64_reg_577 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return : STD_LOGIC_VECTOR (41 downto 0);
    signal indexx_pre_comp_V_reg_594 : STD_LOGIC_VECTOR (41 downto 0);
    signal icmp_ln331_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln331_fu_615_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln331_fu_627_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln331_reg_1884 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln331_1_fu_641_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln331_1_reg_1889 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln331_fu_649_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln331_reg_1894 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln336_fu_653_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln1_reg_1923 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln703_fu_694_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal zext_ln703_reg_1928 : STD_LOGIC_VECTOR (42 downto 0);
    signal icmp_ln381_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln381_reg_1933 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal i_2_fu_704_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_2_reg_1937 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln230_fu_715_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln230_reg_1942 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal trunc_ln230_1_fu_719_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln230_1_reg_1947 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_fu_727_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_reg_1952 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Result_s_reg_1957 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1962 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_reg_1968 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp84_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal op2_assign_fu_760_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_reg_1980 : STD_LOGIC_VECTOR (31 downto 0);
    signal cmp282_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp286_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp286_reg_1993 : STD_LOGIC_VECTOR (0 downto 0);
    signal op2_assign_1_fu_778_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_1_reg_1999 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln851_3_fu_789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_3_reg_2005 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_794_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_2_reg_2010 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln1495_fu_804_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln1495_reg_2015 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln388_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln388_reg_2020_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln388_reg_2020_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln388_fu_817_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln388_reg_2024 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln886_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln728_fu_891_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln728_reg_2033 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln874_2_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_2_reg_2038 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_2_reg_2038_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_1_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_1_reg_2044_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_1_reg_2044_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_1_reg_2044_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_1_reg_2044_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_1_reg_2044_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_row_index_5_reg_403 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_buffer_V_1_0_addr_1_gep_fu_303_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_V_1_0_addr_2_gep_fu_310_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_V_2_0_addr_gep_fu_324_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_V_2_0_addr_1_gep_fu_331_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_V_0_0_addr_1_gep_fu_338_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_V_0_0_addr_2_gep_fu_345_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln6_fu_1083_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln6_reg_2108 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_1097_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_reg_2118 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_reg_2118_pp1_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln674_fu_1125_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_2128 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_2128_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_2128_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_2128_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_2128_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1351_fu_1177_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1351_reg_2133 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1351_reg_2133_pp1_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1351_1_fu_1183_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1351_1_reg_2138 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1118_fu_1199_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_1_fu_1202_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_reg_2155 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_reg_2155_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_reg_2155_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_reg_2155_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_reg_2155_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1351_3_fu_1278_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1351_3_reg_2160 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1351_3_reg_2160_pp1_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1351_4_fu_1284_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1351_4_reg_2165 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_9_fu_1300_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_reg_2175 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_reg_2175_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_reg_2175_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_reg_2175_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_reg_2175_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1351_6_fu_1376_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1351_6_reg_2180 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1351_6_reg_2180_pp1_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1351_7_fu_1382_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1351_7_reg_2185 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1118_1_fu_1401_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln708_2_fu_1419_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal output_rows_count_1_fu_1716_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal read_rows_count_2_fu_1770_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_4_fu_1785_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state9 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal line_buffer_V_0_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_V_0_0_ce0 : STD_LOGIC;
    signal line_buffer_V_0_0_we0 : STD_LOGIC;
    signal line_buffer_V_0_0_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_0_0_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_0_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_V_0_0_ce1 : STD_LOGIC;
    signal line_buffer_V_0_0_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_1_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_V_1_0_ce0 : STD_LOGIC;
    signal line_buffer_V_1_0_we0 : STD_LOGIC;
    signal line_buffer_V_1_0_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_1_0_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_1_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_V_1_0_ce1 : STD_LOGIC;
    signal line_buffer_V_1_0_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_2_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_V_2_0_ce0 : STD_LOGIC;
    signal line_buffer_V_2_0_we0 : STD_LOGIC;
    signal line_buffer_V_2_0_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_2_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_V_2_0_ce1 : STD_LOGIC;
    signal line_buffer_V_2_0_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_xfUDivResize_fu_560_ap_ready : STD_LOGIC;
    signal grp_xfUDivResize_fu_560_in_n : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_ready : STD_LOGIC;
    signal grp_scaleCompute_17_42_20_48_16_2_s_fu_581_currindex : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_scaleCompute_17_42_20_48_16_2_s_fu_581_inscale : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_phi_mux_i_phi_fu_374_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_1_reg_392 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_rows_count_reg_415 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_rows_count_reg_427 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_j_1_phi_fu_443_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_flag_write_phi_fu_456_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter0_flag_write_reg_451 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter1_flag_write_reg_451 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter2_flag_write_reg_451 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_0_V_4_reg_468 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_V_1_0_reg_491 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_V_0_0_reg_514 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_1_V_4_reg_537 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_fu_710_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln394_fu_866_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln336_fu_659_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln429_fu_1063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln430_fu_1073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_fu_942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_fu_186 : STD_LOGIC_VECTOR (23 downto 0);
    signal indexy_V_0_fu_190 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln445_fu_887_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal nextYScale_V_1_fu_194 : STD_LOGIC_VECTOR (16 downto 0);
    signal nextYScale_V_fu_845_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal icmp_ln336_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln331_1_fu_635_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal rhs_V_fu_674_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln230_fu_715_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln230_1_fu_719_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln703_6_fu_723_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln703_6_fu_723_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_5_fu_740_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal icmp_ln1494_fu_748_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal sub_ln851_fu_784_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln835_fu_800_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln850_3_i_fu_823_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln695_3_fu_832_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln850_3_fu_838_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln886_fu_852_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_871_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_5_fu_880_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln874_1_fu_900_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln874_3_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln486_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln488_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln728_3_fu_953_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_6_fu_979_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_965_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_1_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln255_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln255_fu_987_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln230_2_fu_949_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_3_fu_1001_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_3_fu_1019_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln397_fu_1037_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln_fu_1029_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_2_fu_1009_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal not_cmp_i_i175_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln427_fu_1053_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal idx_nxt_fu_1057_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln397_fu_1041_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln728_fu_960_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_s_fu_1118_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_4_fu_1111_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln674_3_fu_1137_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_1_fu_1145_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_fu_1141_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln674_1_fu_1129_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_2_fu_1133_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_3_fu_1159_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_2_fu_1155_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1350_fu_1149_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1350_1_fu_1163_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_4_fu_1169_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_5_fu_1173_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1351_2_fu_1189_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_4_fu_1232_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_6_fu_1242_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_7_fu_1246_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_2_fu_1212_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_fu_1222_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_8_fu_1256_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_9_fu_1260_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1350_2_fu_1250_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1350_3_fu_1264_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_10_fu_1270_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_11_fu_1274_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1351_5_fu_1290_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_11_fu_1330_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_12_fu_1340_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_13_fu_1344_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_s_31_fu_1310_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_10_fu_1320_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_14_fu_1354_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_15_fu_1358_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1350_4_fu_1348_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1350_5_fu_1362_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_16_fu_1368_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_17_fu_1372_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1351_8_fu_1388_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1793_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal lshr_ln708_1_fu_1410_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1800_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1807_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1814_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1821_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1830_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1839_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1848_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln1_fu_1450_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1192_fu_1460_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_1_fu_1457_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1192_2_fu_1464_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln851_fu_1488_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln_fu_1470_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln851_fu_1492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_fu_1498_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_13_fu_1480_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln850_fu_1504_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1857_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln728_1_fu_1520_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1192_1_fu_1530_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_3_fu_1527_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1192_5_fu_1534_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln851_1_fu_1558_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln850_1_fu_1540_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln851_1_fu_1562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_1_fu_1568_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_14_fu_1550_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln850_1_fu_1574_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1866_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln728_2_fu_1590_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1192_2_fu_1600_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_5_fu_1597_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1192_8_fu_1604_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln851_2_fu_1628_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln850_2_fu_1610_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln851_2_fu_1632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_2_fu_1638_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_15_fu_1620_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln850_2_fu_1644_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln850_8_fu_1652_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln850_7_fu_1582_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln850_6_fu_1512_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln874_fu_1677_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln874_fu_1681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_fu_1686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_1_fu_1691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln508_fu_1696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln510_fu_1702_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln508_fu_1708_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln886_1_fu_1723_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_fu_1732_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln521_fu_1738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_rows_count_1_fu_1752_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_1_fu_1727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln886_fu_1765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_1758_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_2_fu_1744_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_3_fu_1778_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1793_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1793_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1800_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1807_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1814_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1821_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1830_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1839_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1848_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1857_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1866_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1793_ce : STD_LOGIC;
    signal grp_fu_1800_ce : STD_LOGIC;
    signal grp_fu_1807_ce : STD_LOGIC;
    signal grp_fu_1814_ce : STD_LOGIC;
    signal grp_fu_1821_ce : STD_LOGIC;
    signal grp_fu_1830_ce : STD_LOGIC;
    signal grp_fu_1839_ce : STD_LOGIC;
    signal grp_fu_1848_ce : STD_LOGIC;
    signal grp_fu_1857_ce : STD_LOGIC;
    signal grp_fu_1866_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal grp_fu_1793_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1793_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_condition_91 : BOOLEAN;
    signal ap_condition_168 : BOOLEAN;
    signal ap_condition_1691 : BOOLEAN;
    signal ap_condition_1698 : BOOLEAN;

    component resizeTry_xfUDivResize IS
    port (
        ap_ready : OUT STD_LOGIC;
        in_n : IN STD_LOGIC_VECTOR (42 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component resizeTry_scaleCompute_17_42_20_48_16_2_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        currindex : IN STD_LOGIC_VECTOR (19 downto 0);
        inscale : IN STD_LOGIC_VECTOR (33 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component resizeTry_mul_mul_12ns_12ns_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component resizeTry_mul_mul_9s_12ns_21_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component resizeTry_mac_muladd_9s_12ns_21s_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component resizeTry_mac_muladd_10s_12ns_22s_23_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component resizeTry_resizeNNBilinear_9_1080_1920_1_640_640_2_2_s_line_buffer_V_0_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    line_buffer_V_0_0_U : component resizeTry_resizeNNBilinear_9_1080_1920_1_640_640_2_2_s_line_buffer_V_0_0
    generic map (
        DataWidth => 24,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_V_0_0_address0,
        ce0 => line_buffer_V_0_0_ce0,
        we0 => line_buffer_V_0_0_we0,
        d0 => line_buffer_V_0_0_d0,
        q0 => line_buffer_V_0_0_q0,
        address1 => line_buffer_V_0_0_address1,
        ce1 => line_buffer_V_0_0_ce1,
        q1 => line_buffer_V_0_0_q1);

    line_buffer_V_1_0_U : component resizeTry_resizeNNBilinear_9_1080_1920_1_640_640_2_2_s_line_buffer_V_0_0
    generic map (
        DataWidth => 24,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_V_1_0_address0,
        ce0 => line_buffer_V_1_0_ce0,
        we0 => line_buffer_V_1_0_we0,
        d0 => line_buffer_V_1_0_d0,
        q0 => line_buffer_V_1_0_q0,
        address1 => line_buffer_V_1_0_address1,
        ce1 => line_buffer_V_1_0_ce1,
        q1 => line_buffer_V_1_0_q1);

    line_buffer_V_2_0_U : component resizeTry_resizeNNBilinear_9_1080_1920_1_640_640_2_2_s_line_buffer_V_0_0
    generic map (
        DataWidth => 24,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_V_2_0_address0,
        ce0 => line_buffer_V_2_0_ce0,
        we0 => line_buffer_V_2_0_we0,
        d0 => tmp_V_fu_186,
        q0 => line_buffer_V_2_0_q0,
        address1 => line_buffer_V_2_0_address1,
        ce1 => line_buffer_V_2_0_ce1,
        q1 => line_buffer_V_2_0_q1);

    grp_xfUDivResize_fu_560 : component resizeTry_xfUDivResize
    port map (
        ap_ready => grp_xfUDivResize_fu_560_ap_ready,
        in_n => grp_xfUDivResize_fu_560_in_n,
        ap_return => grp_xfUDivResize_fu_560_ap_return);

    grp_scaleCompute_17_42_20_48_16_2_s_fu_581 : component resizeTry_scaleCompute_17_42_20_48_16_2_s
    port map (
        ap_ready => grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_ready,
        currindex => grp_scaleCompute_17_42_20_48_16_2_s_fu_581_currindex,
        inscale => grp_scaleCompute_17_42_20_48_16_2_s_fu_581_inscale,
        ap_return => grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return);

    mul_mul_12ns_12ns_22_4_1_U17 : component resizeTry_mul_mul_12ns_12ns_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1793_p0,
        din1 => grp_fu_1793_p1,
        ce => grp_fu_1793_ce,
        dout => grp_fu_1793_p2);

    mul_mul_9s_12ns_21_4_1_U18 : component resizeTry_mul_mul_9s_12ns_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 12,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln1351_2_fu_1189_p2,
        din1 => grp_fu_1800_p1,
        ce => grp_fu_1800_ce,
        dout => grp_fu_1800_p2);

    mul_mul_9s_12ns_21_4_1_U19 : component resizeTry_mul_mul_9s_12ns_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 12,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln1351_5_fu_1290_p2,
        din1 => grp_fu_1807_p1,
        ce => grp_fu_1807_ce,
        dout => grp_fu_1807_p2);

    mul_mul_9s_12ns_21_4_1_U20 : component resizeTry_mul_mul_9s_12ns_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 12,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln1351_8_fu_1388_p2,
        din1 => grp_fu_1814_p1,
        ce => grp_fu_1814_ce,
        dout => grp_fu_1814_p2);

    mac_muladd_9s_12ns_21s_22_4_1_U21 : component resizeTry_mac_muladd_9s_12ns_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 12,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln1351_1_reg_2138,
        din1 => grp_fu_1821_p1,
        din2 => grp_fu_1800_p2,
        ce => grp_fu_1821_ce,
        dout => grp_fu_1821_p3);

    mac_muladd_9s_12ns_21s_22_4_1_U22 : component resizeTry_mac_muladd_9s_12ns_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 12,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln1351_4_reg_2165,
        din1 => grp_fu_1830_p1,
        din2 => grp_fu_1807_p2,
        ce => grp_fu_1830_ce,
        dout => grp_fu_1830_p3);

    mac_muladd_9s_12ns_21s_22_4_1_U23 : component resizeTry_mac_muladd_9s_12ns_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 12,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln1351_7_reg_2185,
        din1 => grp_fu_1839_p1,
        din2 => grp_fu_1814_p2,
        ce => grp_fu_1839_ce,
        dout => grp_fu_1839_p3);

    mac_muladd_10s_12ns_22s_23_4_1_U24 : component resizeTry_mac_muladd_10s_12ns_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln1351_reg_2133_pp1_iter4_reg,
        din1 => grp_fu_1848_p1,
        din2 => grp_fu_1821_p3,
        ce => grp_fu_1848_ce,
        dout => grp_fu_1848_p3);

    mac_muladd_10s_12ns_22s_23_4_1_U25 : component resizeTry_mac_muladd_10s_12ns_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln1351_3_reg_2160_pp1_iter4_reg,
        din1 => grp_fu_1857_p1,
        din2 => grp_fu_1830_p3,
        ce => grp_fu_1857_ce,
        dout => grp_fu_1857_p3);

    mac_muladd_10s_12ns_22s_23_4_1_U26 : component resizeTry_mac_muladd_10s_12ns_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln1351_6_reg_2180_pp1_iter4_reg,
        din1 => grp_fu_1866_p1,
        din2 => grp_fu_1839_p3,
        ce => grp_fu_1866_ce,
        dout => grp_fu_1866_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln381_reg_1933 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state9);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter1_flag_write_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((cmp84_reg_1973 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln886_fu_856_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln388_fu_811_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((cmp84_reg_1973 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln388_fu_811_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
                ap_phi_reg_pp1_iter1_flag_write_reg_451 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                ap_phi_reg_pp1_iter1_flag_write_reg_451 <= ap_phi_reg_pp1_iter0_flag_write_reg_451;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_flag_write_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_168)) then
                if ((ap_const_boolean_1 = ap_condition_91)) then 
                    ap_phi_reg_pp1_iter2_flag_write_reg_451 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_flag_write_reg_451 <= ap_phi_reg_pp1_iter1_flag_write_reg_451;
                end if;
            end if; 
        end if;
    end process;

    first_row_index_5_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                first_row_index_5_reg_403 <= first_row_index_4_fu_1785_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                first_row_index_5_reg_403 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_1_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                i_1_reg_392 <= i_2_reg_1937;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_1_reg_392 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    i_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln331_reg_1875 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_370 <= select_ln331_1_reg_1889;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_370 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    indexy_V_0_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln388_reg_2020 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                                indexy_V_0_fu_190(10 downto 0) <= zext_ln445_fu_887_p1(10 downto 0);
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                indexy_V_0_fu_190(0) <= '0';
                indexy_V_0_fu_190(1) <= '0';
                indexy_V_0_fu_190(2) <= '0';
                indexy_V_0_fu_190(3) <= '0';
                indexy_V_0_fu_190(4) <= '0';
                indexy_V_0_fu_190(5) <= '0';
                indexy_V_0_fu_190(6) <= '0';
                indexy_V_0_fu_190(7) <= '0';
                indexy_V_0_fu_190(8) <= '0';
                indexy_V_0_fu_190(9) <= '0';
                indexy_V_0_fu_190(10) <= '0';
            end if; 
        end if;
    end process;

    indvar_flatten_reg_359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln331_fu_609_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_359 <= add_ln331_fu_615_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_359 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    j_1_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln388_reg_2020 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                j_1_reg_439 <= add_ln388_reg_2024;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                j_1_reg_439 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln331_fu_609_p2 = ap_const_lv1_0))) then 
                j_reg_381 <= add_ln336_fu_653_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_381 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    nextYScale_V_1_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln388_fu_811_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                nextYScale_V_1_fu_194 <= nextYScale_V_fu_845_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                nextYScale_V_1_fu_194 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    output_rows_count_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                output_rows_count_reg_415 <= output_rows_count_1_fu_1716_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                output_rows_count_reg_415 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    read_rows_count_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                read_rows_count_reg_427 <= read_rows_count_2_fu_1770_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                read_rows_count_reg_427 <= ap_const_lv32_2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                Xscale64_reg_571 <= grp_xfUDivResize_fu_560_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                Yscale64_reg_577 <= grp_xfUDivResize_fu_560_ap_return;
                trunc_ln1_reg_1923 <= grp_xfUDivResize_fu_560_ap_return(31 downto 10);
                    zext_ln703_reg_1928(23 downto 0) <= zext_ln703_fu_694_p1(23 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                add_ln388_reg_2024 <= add_ln388_fu_817_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp282_reg_1988 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                and_ln486_1_reg_2044 <= and_ln486_1_fu_931_p2;
                icmp_ln874_2_reg_2038 <= icmp_ln874_2_fu_904_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                and_ln486_1_reg_2044_pp1_iter2_reg <= and_ln486_1_reg_2044;
                and_ln486_1_reg_2044_pp1_iter3_reg <= and_ln486_1_reg_2044_pp1_iter2_reg;
                and_ln486_1_reg_2044_pp1_iter4_reg <= and_ln486_1_reg_2044_pp1_iter3_reg;
                and_ln486_1_reg_2044_pp1_iter5_reg <= and_ln486_1_reg_2044_pp1_iter4_reg;
                and_ln486_1_reg_2044_pp1_iter6_reg <= and_ln486_1_reg_2044_pp1_iter5_reg;
                and_ln486_1_reg_2044_pp1_iter7_reg <= and_ln486_1_reg_2044_pp1_iter6_reg;
                icmp_ln388_reg_2020_pp1_iter2_reg <= icmp_ln388_reg_2020_pp1_iter1_reg;
                icmp_ln874_2_reg_2038_pp1_iter2_reg <= icmp_ln874_2_reg_2038;
                p_Result_1_reg_2155_pp1_iter4_reg <= p_Result_1_reg_2155;
                p_Result_1_reg_2155_pp1_iter5_reg <= p_Result_1_reg_2155_pp1_iter4_reg;
                p_Result_1_reg_2155_pp1_iter6_reg <= p_Result_1_reg_2155_pp1_iter5_reg;
                p_Result_1_reg_2155_pp1_iter7_reg <= p_Result_1_reg_2155_pp1_iter6_reg;
                p_Result_9_reg_2175_pp1_iter4_reg <= p_Result_9_reg_2175;
                p_Result_9_reg_2175_pp1_iter5_reg <= p_Result_9_reg_2175_pp1_iter4_reg;
                p_Result_9_reg_2175_pp1_iter6_reg <= p_Result_9_reg_2175_pp1_iter5_reg;
                p_Result_9_reg_2175_pp1_iter7_reg <= p_Result_9_reg_2175_pp1_iter6_reg;
                sub_ln1351_3_reg_2160_pp1_iter4_reg <= sub_ln1351_3_reg_2160;
                sub_ln1351_6_reg_2180_pp1_iter4_reg <= sub_ln1351_6_reg_2180;
                sub_ln1351_reg_2133_pp1_iter4_reg <= sub_ln1351_reg_2133;
                tmp_4_reg_2118_pp1_iter3_reg <= tmp_4_reg_2118;
                trunc_ln674_reg_2128_pp1_iter4_reg <= trunc_ln674_reg_2128;
                trunc_ln674_reg_2128_pp1_iter5_reg <= trunc_ln674_reg_2128_pp1_iter4_reg;
                trunc_ln674_reg_2128_pp1_iter6_reg <= trunc_ln674_reg_2128_pp1_iter5_reg;
                trunc_ln674_reg_2128_pp1_iter7_reg <= trunc_ln674_reg_2128_pp1_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                cmp282_reg_1988 <= cmp282_fu_766_p2;
                cmp286_reg_1993 <= cmp286_fu_772_p2;
                cmp84_reg_1973 <= cmp84_fu_754_p2;
                op2_assign_1_reg_1999 <= op2_assign_1_fu_778_p2;
                op2_assign_reg_1980 <= op2_assign_fu_760_p2;
                p_Val2_2_reg_2010 <= p_Val2_2_fu_794_p3;
                select_ln1495_reg_2015 <= select_ln1495_fu_804_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then
                flag_write_reg_451 <= ap_phi_reg_pp1_iter2_flag_write_reg_451;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                i_2_reg_1937 <= i_2_fu_704_p2;
                icmp_ln381_reg_1933 <= icmp_ln381_fu_698_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln381_reg_1933 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                icmp_ln1494_reg_1968 <= icmp_ln1494_fu_748_p2;
                p_Result_s_reg_1957 <= ret_V_fu_727_p2(42 downto 42);
                ret_V_reg_1952 <= ret_V_fu_727_p2;
                tmp_5_reg_1962 <= tmp_5_fu_740_p1(41 downto 41);
                trunc_ln230_1_reg_1947 <= trunc_ln230_1_fu_719_p1;
                trunc_ln230_reg_1942 <= trunc_ln230_fu_715_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln331_reg_1875 <= icmp_ln331_fu_609_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln388_reg_2020 <= icmp_ln388_fu_811_p2;
                icmp_ln388_reg_2020_pp1_iter1_reg <= icmp_ln388_reg_2020;
                j_1_reg_439_pp1_iter1_reg <= j_1_reg_439;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_Result_s_reg_1957 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                icmp_ln851_3_reg_2005 <= icmp_ln851_3_fu_789_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp84_reg_1973 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln388_fu_811_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln886_reg_2029 <= icmp_ln886_fu_856_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln388_reg_2020 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                indexx_pre_comp_V_reg_594 <= grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp282_reg_1988 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln486_1_reg_2044_pp1_iter2_reg) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_Result_1_reg_2155 <= p_Val2_s_fu_1118_p3(15 downto 8);
                p_Result_9_reg_2175 <= p_Val2_s_fu_1118_p3(23 downto 16);
                sub_ln1351_1_reg_2138 <= sub_ln1351_1_fu_1183_p2;
                sub_ln1351_3_reg_2160 <= sub_ln1351_3_fu_1278_p2;
                sub_ln1351_4_reg_2165 <= sub_ln1351_4_fu_1284_p2;
                sub_ln1351_6_reg_2180 <= sub_ln1351_6_fu_1376_p2;
                sub_ln1351_7_reg_2185 <= sub_ln1351_7_fu_1382_p2;
                sub_ln1351_reg_2133 <= sub_ln1351_fu_1177_p2;
                trunc_ln674_reg_2128 <= trunc_ln674_fu_1125_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln331_fu_609_p2 = ap_const_lv1_0))) then
                select_ln331_1_reg_1889 <= select_ln331_1_fu_641_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln331_fu_609_p2 = ap_const_lv1_0))) then
                select_ln331_reg_1884 <= select_ln331_fu_627_p3;
                trunc_ln331_reg_1894 <= trunc_ln331_fu_649_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp282_reg_1988 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln486_1_reg_2044) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_4_reg_2118 <= sub_ln728_fu_960_p2(23 downto 12);
                trunc_ln6_reg_2108 <= sub_ln397_fu_1041_p2(23 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_reg_2029 = ap_const_lv1_0) and (cmp84_reg_1973 = ap_const_lv1_1) and (icmp_ln388_reg_2020 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                tmp_V_fu_186 <= img_src_4180_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln388_reg_2020 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                trunc_ln728_reg_2033 <= trunc_ln728_fu_891_p1;
            end if;
        end if;
    end process;
    zext_ln703_reg_1928(42 downto 24) <= "0000000000000000000";
    indexy_V_0_fu_190(16 downto 11) <= "000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, icmp_ln331_fu_609_p2, ap_enable_reg_pp0_iter0, icmp_ln381_reg_1933, ap_CS_fsm_state7, icmp_ln388_fu_811_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln331_fu_609_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln331_fu_609_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln381_reg_1933 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln388_fu_811_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln388_fu_811_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln1192_2_fu_1464_p2 <= std_logic_vector(unsigned(zext_ln1192_fu_1460_p1) + unsigned(sext_ln703_1_fu_1457_p1));
    add_ln1192_5_fu_1534_p2 <= std_logic_vector(unsigned(zext_ln1192_1_fu_1530_p1) + unsigned(sext_ln703_3_fu_1527_p1));
    add_ln1192_8_fu_1604_p2 <= std_logic_vector(unsigned(zext_ln1192_2_fu_1600_p1) + unsigned(sext_ln703_5_fu_1597_p1));
    add_ln1350_1_fu_1163_p2 <= std_logic_vector(unsigned(zext_ln215_3_fu_1159_p1) + unsigned(zext_ln215_2_fu_1155_p1));
    add_ln1350_2_fu_1250_p2 <= std_logic_vector(unsigned(zext_ln215_6_fu_1242_p1) + unsigned(zext_ln215_7_fu_1246_p1));
    add_ln1350_3_fu_1264_p2 <= std_logic_vector(unsigned(zext_ln215_8_fu_1256_p1) + unsigned(zext_ln215_9_fu_1260_p1));
    add_ln1350_4_fu_1348_p2 <= std_logic_vector(unsigned(zext_ln215_12_fu_1340_p1) + unsigned(zext_ln215_13_fu_1344_p1));
    add_ln1350_5_fu_1362_p2 <= std_logic_vector(unsigned(zext_ln215_14_fu_1354_p1) + unsigned(zext_ln215_15_fu_1358_p1));
    add_ln1350_fu_1149_p2 <= std_logic_vector(unsigned(zext_ln215_1_fu_1145_p1) + unsigned(zext_ln215_fu_1141_p1));
    add_ln331_1_fu_635_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ap_phi_mux_i_phi_fu_374_p4));
    add_ln331_fu_615_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_359) + unsigned(ap_const_lv12_1));
    add_ln336_fu_653_p2 <= std_logic_vector(unsigned(select_ln331_fu_627_p3) + unsigned(ap_const_lv11_1));
    add_ln388_fu_817_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_1_phi_fu_443_p4) + unsigned(ap_const_lv11_1));
    add_ln510_fu_1702_p2 <= std_logic_vector(unsigned(output_rows_count_reg_415) + unsigned(ap_const_lv32_1));
    add_ln695_1_fu_1568_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(trunc_ln850_1_fu_1540_p4));
    add_ln695_2_fu_1638_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(trunc_ln850_2_fu_1610_p4));
    add_ln695_3_fu_832_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(trunc_ln850_3_i_fu_823_p4));
    add_ln695_fu_1498_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(trunc_ln_fu_1470_p4));
    and_ln486_1_fu_931_p2 <= (or_ln486_fu_919_p2 and icmp_ln488_fu_925_p2);
    and_ln486_fu_909_p2 <= (icmp_ln874_2_fu_904_p2 and cmp286_reg_1993);
    and_ln508_fu_1686_p2 <= (icmp_ln874_fu_1681_p2 and cmp286_reg_1993);
    and_ln886_fu_1765_p2 <= (icmp_ln886_1_fu_1727_p2 and cmp84_reg_1973);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state18 <= ap_CS_fsm(8);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(img_src_4180_empty_n, ap_enable_reg_pp0_iter1, icmp_ln331_reg_1875)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln331_reg_1875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (img_src_4180_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(img_src_4180_empty_n, ap_enable_reg_pp0_iter1, icmp_ln331_reg_1875)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln331_reg_1875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (img_src_4180_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(img_src_4180_empty_n, img_dst_4181_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_predicate_op115_read_state10, ap_predicate_op364_write_state17)
    begin
                ap_block_pp1_stage0_01001 <= (((ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (img_dst_4181_full_n = ap_const_logic_0) and (ap_predicate_op364_write_state17 = ap_const_boolean_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (img_src_4180_empty_n = ap_const_logic_0) and (ap_predicate_op115_read_state10 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(img_src_4180_empty_n, img_dst_4181_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_predicate_op115_read_state10, ap_predicate_op364_write_state17)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (img_dst_4181_full_n = ap_const_logic_0) and (ap_predicate_op364_write_state17 = ap_const_boolean_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (img_src_4180_empty_n = ap_const_logic_0) and (ap_predicate_op115_read_state10 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(img_src_4180_empty_n, img_dst_4181_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_predicate_op115_read_state10, ap_predicate_op364_write_state17)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (img_dst_4181_full_n = ap_const_logic_0) and (ap_predicate_op364_write_state17 = ap_const_boolean_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (img_src_4180_empty_n = ap_const_logic_0) and (ap_predicate_op115_read_state10 = ap_const_boolean_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state10_pp1_stage0_iter1_assign_proc : process(img_src_4180_empty_n, ap_predicate_op115_read_state10)
    begin
                ap_block_state10_pp1_stage0_iter1 <= ((img_src_4180_empty_n = ap_const_logic_0) and (ap_predicate_op115_read_state10 = ap_const_boolean_1));
    end process;

        ap_block_state11_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state17_pp1_stage0_iter8_assign_proc : process(img_dst_4181_full_n, ap_predicate_op364_write_state17)
    begin
                ap_block_state17_pp1_stage0_iter8 <= ((img_dst_4181_full_n = ap_const_logic_0) and (ap_predicate_op364_write_state17 = ap_const_boolean_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(img_src_4180_empty_n, icmp_ln331_reg_1875)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln331_reg_1875 = ap_const_lv1_0) and (img_src_4180_empty_n = ap_const_logic_0));
    end process;

        ap_block_state9_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_168_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001)
    begin
                ap_condition_168 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_1691_assign_proc : process(ap_block_pp1_stage0, icmp_ln388_reg_2020_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
                ap_condition_1691 <= ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_1698_assign_proc : process(icmp_ln874_2_reg_2038, first_row_index_5_reg_403)
    begin
                ap_condition_1698 <= (not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (icmp_ln874_2_reg_2038 = ap_const_lv1_0));
    end process;


    ap_condition_91_assign_proc : process(icmp_ln388_reg_2020, cmp84_reg_1973, icmp_ln886_reg_2029)
    begin
                ap_condition_91 <= ((icmp_ln886_reg_2029 = ap_const_lv1_0) and (cmp84_reg_1973 = ap_const_lv1_1) and (icmp_ln388_reg_2020 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln331_fu_609_p2)
    begin
        if ((icmp_ln331_fu_609_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state9_assign_proc : process(icmp_ln388_fu_811_p2)
    begin
        if ((icmp_ln388_fu_811_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln381_reg_1933, ap_CS_fsm_state7)
    begin
        if (((icmp_ln381_reg_1933 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7)
    begin
        if (((ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12_assign_proc : process(flag_write_reg_451, icmp_ln388_reg_2020_pp1_iter2_reg, first_row_index_5_reg_403, line_buffer_V_0_0_q1, line_buffer_V_1_0_q1, line_buffer_V_2_0_q1, ap_phi_reg_pp1_iter3_P0Buf_0_V_4_reg_468)
    begin
        if ((((first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_0)) or ((first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_1)))) then 
            ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12 <= line_buffer_V_1_0_q1;
        elsif ((((first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_0)) or ((first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_1)))) then 
            ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12 <= line_buffer_V_2_0_q1;
        elsif (((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_0)) or (not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_1)))) then 
            ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12 <= line_buffer_V_0_0_q1;
        else 
            ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12 <= ap_phi_reg_pp1_iter3_P0Buf_0_V_4_reg_468;
        end if; 
    end process;


    ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12_assign_proc : process(flag_write_reg_451, icmp_ln388_reg_2020_pp1_iter2_reg, first_row_index_5_reg_403, line_buffer_V_0_0_q0, line_buffer_V_1_0_q0, line_buffer_V_2_0_q0, ap_phi_reg_pp1_iter3_P0Buf_1_V_4_reg_537)
    begin
        if ((((first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_0)) or ((first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_1)))) then 
            ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12 <= line_buffer_V_1_0_q0;
        elsif ((((first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_0)) or ((first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_1)))) then 
            ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12 <= line_buffer_V_2_0_q0;
        elsif (((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_0)) or (not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_1)))) then 
            ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12 <= line_buffer_V_0_0_q0;
        else 
            ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12 <= ap_phi_reg_pp1_iter3_P0Buf_1_V_4_reg_537;
        end if; 
    end process;


    ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12_assign_proc : process(flag_write_reg_451, icmp_ln388_reg_2020_pp1_iter2_reg, first_row_index_5_reg_403, line_buffer_V_0_0_q1, line_buffer_V_1_0_q1, line_buffer_V_2_0_q1, ap_phi_reg_pp1_iter3_P0Buf_V_0_0_reg_514)
    begin
        if ((((first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_0)) or ((first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_1)))) then 
            ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12 <= line_buffer_V_0_0_q1;
        elsif ((((first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_0)) or ((first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_1)))) then 
            ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12 <= line_buffer_V_1_0_q1;
        elsif (((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_0)) or (not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_1)))) then 
            ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12 <= line_buffer_V_2_0_q1;
        else 
            ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12 <= ap_phi_reg_pp1_iter3_P0Buf_V_0_0_reg_514;
        end if; 
    end process;


    ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12_assign_proc : process(flag_write_reg_451, icmp_ln388_reg_2020_pp1_iter2_reg, first_row_index_5_reg_403, line_buffer_V_0_0_q0, line_buffer_V_1_0_q0, line_buffer_V_2_0_q0, ap_phi_reg_pp1_iter3_P0Buf_V_1_0_reg_491)
    begin
        if ((((first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_0)) or ((first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_1)))) then 
            ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12 <= line_buffer_V_0_0_q0;
        elsif ((((first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_0)) or ((first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_1)))) then 
            ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12 <= line_buffer_V_1_0_q0;
        elsif (((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_0)) or (not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (icmp_ln388_reg_2020_pp1_iter2_reg = ap_const_lv1_0) and (flag_write_reg_451 = ap_const_lv1_1)))) then 
            ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12 <= line_buffer_V_2_0_q0;
        else 
            ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12 <= ap_phi_reg_pp1_iter3_P0Buf_V_1_0_reg_491;
        end if; 
    end process;

    ap_phi_mux_flag_write_phi_fu_456_p6 <= ap_phi_reg_pp1_iter2_flag_write_reg_451;

    ap_phi_mux_i_phi_fu_374_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln331_reg_1875, i_reg_370, select_ln331_1_reg_1889)
    begin
        if (((icmp_ln331_reg_1875 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_374_p4 <= select_ln331_1_reg_1889;
        else 
            ap_phi_mux_i_phi_fu_374_p4 <= i_reg_370;
        end if; 
    end process;


    ap_phi_mux_j_1_phi_fu_443_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln388_reg_2020, j_1_reg_439, add_ln388_reg_2024)
    begin
        if (((icmp_ln388_reg_2020 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_j_1_phi_fu_443_p4 <= add_ln388_reg_2024;
        else 
            ap_phi_mux_j_1_phi_fu_443_p4 <= j_1_reg_439;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_flag_write_reg_451 <= "X";
    ap_phi_reg_pp1_iter3_P0Buf_0_V_4_reg_468 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter3_P0Buf_1_V_4_reg_537 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter3_P0Buf_V_0_0_reg_514 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter3_P0Buf_V_1_0_reg_491 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op115_read_state10_assign_proc : process(icmp_ln388_reg_2020, cmp84_reg_1973, icmp_ln886_reg_2029)
    begin
                ap_predicate_op115_read_state10 <= ((icmp_ln886_reg_2029 = ap_const_lv1_0) and (cmp84_reg_1973 = ap_const_lv1_1) and (icmp_ln388_reg_2020 = ap_const_lv1_0));
    end process;


    ap_predicate_op364_write_state17_assign_proc : process(cmp282_reg_1988, and_ln486_1_reg_2044_pp1_iter7_reg)
    begin
                ap_predicate_op364_write_state17 <= ((cmp282_reg_1988 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln486_1_reg_2044_pp1_iter7_reg));
    end process;

    ap_ready <= internal_ap_ready;
    cmp282_fu_766_p2 <= "1" when (signed(output_rows_count_reg_415) < signed(ap_const_lv32_280)) else "0";
    cmp286_fu_772_p2 <= "1" when (read_rows_count_reg_427 = ap_const_lv32_438) else "0";
    cmp84_fu_754_p2 <= "0" when (read_rows_count_reg_427 = ap_const_lv32_438) else "1";
    empty_fu_710_p1 <= output_rows_count_reg_415(20 - 1 downto 0);
    first_row_index_2_fu_1744_p3 <= 
        ap_const_lv32_0 when (icmp_ln521_fu_1738_p2(0) = '1') else 
        first_row_index_fu_1732_p2;
    first_row_index_3_fu_1778_p3 <= 
        first_row_index_2_fu_1744_p3 when (cmp84_reg_1973(0) = '1') else 
        first_row_index_5_reg_403;
    first_row_index_4_fu_1785_p3 <= 
        first_row_index_5_reg_403 when (and_ln886_fu_1765_p2(0) = '1') else 
        first_row_index_3_fu_1778_p3;
    first_row_index_fu_1732_p2 <= std_logic_vector(unsigned(first_row_index_5_reg_403) + unsigned(ap_const_lv32_1));

    grp_fu_1793_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1793_ce <= ap_const_logic_1;
        else 
            grp_fu_1793_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1793_p0 <= grp_fu_1793_p00(12 - 1 downto 0);
    grp_fu_1793_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1097_p4),22));
    grp_fu_1793_p1 <= grp_fu_1793_p10(12 - 1 downto 0);
    grp_fu_1793_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln6_fu_1083_p4),22));

    grp_fu_1800_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1800_ce <= ap_const_logic_1;
        else 
            grp_fu_1800_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1800_p1 <= zext_ln1118_fu_1199_p1(12 - 1 downto 0);

    grp_fu_1807_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1807_ce <= ap_const_logic_1;
        else 
            grp_fu_1807_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1807_p1 <= zext_ln1118_fu_1199_p1(12 - 1 downto 0);

    grp_fu_1814_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1814_ce <= ap_const_logic_1;
        else 
            grp_fu_1814_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1814_p1 <= zext_ln1118_fu_1199_p1(12 - 1 downto 0);

    grp_fu_1821_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1821_ce <= ap_const_logic_1;
        else 
            grp_fu_1821_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1821_p1 <= zext_ln1118_1_fu_1401_p1(12 - 1 downto 0);

    grp_fu_1830_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1830_ce <= ap_const_logic_1;
        else 
            grp_fu_1830_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1830_p1 <= zext_ln1118_1_fu_1401_p1(12 - 1 downto 0);

    grp_fu_1839_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1839_ce <= ap_const_logic_1;
        else 
            grp_fu_1839_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1839_p1 <= zext_ln1118_1_fu_1401_p1(12 - 1 downto 0);

    grp_fu_1848_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1848_ce <= ap_const_logic_1;
        else 
            grp_fu_1848_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1848_p1 <= zext_ln708_2_fu_1419_p1(12 - 1 downto 0);

    grp_fu_1857_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1857_ce <= ap_const_logic_1;
        else 
            grp_fu_1857_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1857_p1 <= zext_ln708_2_fu_1419_p1(12 - 1 downto 0);

    grp_fu_1866_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_1866_ce <= ap_const_logic_1;
        else 
            grp_fu_1866_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1866_p1 <= zext_ln708_2_fu_1419_p1(12 - 1 downto 0);

    grp_scaleCompute_17_42_20_48_16_2_s_fu_581_currindex_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln388_reg_2020, icmp_ln381_reg_1933, ap_CS_fsm_state7, empty_fu_710_p1, zext_ln394_fu_866_p1)
    begin
        if (((icmp_ln388_reg_2020 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_scaleCompute_17_42_20_48_16_2_s_fu_581_currindex <= zext_ln394_fu_866_p1;
        elsif (((icmp_ln381_reg_1933 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_scaleCompute_17_42_20_48_16_2_s_fu_581_currindex <= empty_fu_710_p1;
        else 
            grp_scaleCompute_17_42_20_48_16_2_s_fu_581_currindex <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_scaleCompute_17_42_20_48_16_2_s_fu_581_inscale_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln388_reg_2020, Xscale64_reg_571, Yscale64_reg_577, icmp_ln381_reg_1933, ap_CS_fsm_state7)
    begin
        if (((icmp_ln388_reg_2020 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_scaleCompute_17_42_20_48_16_2_s_fu_581_inscale <= Xscale64_reg_571;
        elsif (((icmp_ln381_reg_1933 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_scaleCompute_17_42_20_48_16_2_s_fu_581_inscale <= Yscale64_reg_577;
        else 
            grp_scaleCompute_17_42_20_48_16_2_s_fu_581_inscale <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xfUDivResize_fu_560_in_n_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_xfUDivResize_fu_560_in_n <= ap_const_lv43_43800000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_xfUDivResize_fu_560_in_n <= ap_const_lv43_78000000000;
        else 
            grp_xfUDivResize_fu_560_in_n <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_2_fu_704_p2 <= std_logic_vector(unsigned(i_1_reg_392) + unsigned(ap_const_lv11_1));
    icmp_ln1494_1_fu_973_p2 <= "1" when (signed(indexx_pre_comp_V_reg_594) > signed(ap_const_lv42_1DFC00000)) else "0";
    icmp_ln1494_fu_748_p0 <= grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;
    icmp_ln1494_fu_748_p2 <= "1" when (signed(icmp_ln1494_fu_748_p0) > signed(ap_const_lv42_10DC00000)) else "0";
    icmp_ln331_fu_609_p2 <= "1" when (indvar_flatten_reg_359 = ap_const_lv12_F00) else "0";
    icmp_ln336_fu_621_p2 <= "1" when (j_reg_381 = ap_const_lv11_780) else "0";
    icmp_ln381_fu_698_p2 <= "1" when (i_1_reg_392 = ap_const_lv11_438) else "0";
    icmp_ln388_fu_811_p2 <= "1" when (ap_phi_mux_j_1_phi_fu_443_p4 = ap_const_lv11_780) else "0";
    icmp_ln488_fu_925_p2 <= "1" when (unsigned(j_1_reg_439) < unsigned(ap_const_lv11_280)) else "0";
    icmp_ln521_fu_1738_p2 <= "1" when (first_row_index_fu_1732_p2 = ap_const_lv32_3) else "0";
    icmp_ln851_1_fu_1562_p2 <= "1" when (trunc_ln851_1_fu_1558_p1 = ap_const_lv10_0) else "0";
    icmp_ln851_2_fu_1632_p2 <= "1" when (trunc_ln851_2_fu_1628_p1 = ap_const_lv10_0) else "0";
    icmp_ln851_3_fu_789_p2 <= "1" when (trunc_ln1_reg_1923 = sub_ln851_fu_784_p2) else "0";
    icmp_ln851_fu_1492_p2 <= "1" when (trunc_ln851_fu_1488_p1 = ap_const_lv10_0) else "0";
    icmp_ln874_1_fu_1691_p2 <= "1" when (zext_ln874_fu_1677_p1 = op2_assign_1_reg_1999) else "0";
    icmp_ln874_2_fu_904_p2 <= "1" when (zext_ln874_1_fu_900_p1 = op2_assign_reg_1980) else "0";
    icmp_ln874_3_fu_914_p2 <= "1" when (zext_ln874_1_fu_900_p1 = op2_assign_1_reg_1999) else "0";
    icmp_ln874_fu_1681_p2 <= "1" when (zext_ln874_fu_1677_p1 = op2_assign_reg_1980) else "0";
    icmp_ln886_1_fu_1727_p2 <= "1" when (signed(zext_ln886_1_fu_1723_p1) < signed(op2_assign_reg_1980)) else "0";
    icmp_ln886_fu_856_p2 <= "1" when (signed(zext_ln886_fu_852_p1) < signed(op2_assign_reg_1980)) else "0";
    idx_nxt_fu_1057_p2 <= std_logic_vector(unsigned(tmp_2_fu_1009_p4) + unsigned(zext_ln427_fu_1053_p1));

    img_dst_4181_blk_n_assign_proc : process(img_dst_4181_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter8, cmp282_reg_1988, and_ln486_1_reg_2044_pp1_iter7_reg)
    begin
        if (((cmp282_reg_1988 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln486_1_reg_2044_pp1_iter7_reg) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            img_dst_4181_blk_n <= img_dst_4181_full_n;
        else 
            img_dst_4181_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_dst_4181_din <= ((select_ln850_8_fu_1652_p3 & select_ln850_7_fu_1582_p3) & select_ln850_6_fu_1512_p3);

    img_dst_4181_write_assign_proc : process(ap_enable_reg_pp1_iter8, ap_predicate_op364_write_state17, ap_block_pp1_stage0_11001)
    begin
        if (((ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op364_write_state17 = ap_const_boolean_1))) then 
            img_dst_4181_write <= ap_const_logic_1;
        else 
            img_dst_4181_write <= ap_const_logic_0;
        end if; 
    end process;


    img_src_4180_blk_n_assign_proc : process(img_src_4180_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln331_reg_1875, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln388_reg_2020, cmp84_reg_1973, icmp_ln886_reg_2029)
    begin
        if ((((icmp_ln886_reg_2029 = ap_const_lv1_0) and (cmp84_reg_1973 = ap_const_lv1_1) and (icmp_ln388_reg_2020 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln331_reg_1875 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            img_src_4180_blk_n <= img_src_4180_empty_n;
        else 
            img_src_4180_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_src_4180_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln331_reg_1875, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op115_read_state10, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op115_read_state10 = ap_const_boolean_1)) or ((icmp_ln331_reg_1875 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            img_src_4180_read <= ap_const_logic_1;
        else 
            img_src_4180_read <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(icmp_ln381_reg_1933, ap_CS_fsm_state7)
    begin
        if (((icmp_ln381_reg_1933 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_0_0_addr_1_gep_fu_338_p3 <= zext_ln429_fu_1063_p1(11 - 1 downto 0);
    line_buffer_V_0_0_addr_2_gep_fu_345_p3 <= zext_ln430_fu_1073_p1(11 - 1 downto 0);

    line_buffer_V_0_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln388_reg_2020_pp1_iter1_reg, icmp_ln874_2_reg_2038, first_row_index_5_reg_403, line_buffer_V_0_0_addr_2_gep_fu_345_p3, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_phi_fu_456_p6, zext_ln336_fu_659_p1, zext_ln430_fu_1073_p1, zext_ln388_fu_942_p1)
    begin
        if ((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0))) then 
            line_buffer_V_0_0_address0 <= line_buffer_V_0_0_addr_2_gep_fu_345_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln874_2_reg_2038 = ap_const_lv1_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0))) then 
            line_buffer_V_0_0_address0 <= zext_ln430_fu_1073_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_phi_mux_flag_write_phi_fu_456_p6 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0))) then 
            line_buffer_V_0_0_address0 <= zext_ln388_fu_942_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_0_0_address0 <= zext_ln336_fu_659_p1(11 - 1 downto 0);
        else 
            line_buffer_V_0_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_0_0_address1_assign_proc : process(icmp_ln874_2_reg_2038, first_row_index_5_reg_403, line_buffer_V_0_0_addr_1_gep_fu_338_p3, zext_ln429_fu_1063_p1, ap_condition_1691)
    begin
        if ((ap_const_boolean_1 = ap_condition_1691)) then
            if ((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)))) then 
                line_buffer_V_0_0_address1 <= line_buffer_V_0_0_addr_1_gep_fu_338_p3;
            elsif (((first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln874_2_reg_2038 = ap_const_lv1_0))) then 
                line_buffer_V_0_0_address1 <= zext_ln429_fu_1063_p1(11 - 1 downto 0);
            else 
                line_buffer_V_0_0_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_0_0_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, icmp_ln388_reg_2020_pp1_iter1_reg, icmp_ln874_2_reg_2038, first_row_index_5_reg_403, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_phi_fu_456_p6)
    begin
        if (((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_456_p6 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln874_2_reg_2038 = ap_const_lv1_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)))) then 
            line_buffer_V_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_0_ce1_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln388_reg_2020_pp1_iter1_reg, icmp_ln874_2_reg_2038, first_row_index_5_reg_403, ap_enable_reg_pp1_iter2)
    begin
        if (((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln874_2_reg_2038 = ap_const_lv1_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)))) then 
            line_buffer_V_0_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_0_d0_assign_proc : process(img_src_4180_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln388_reg_2020_pp1_iter1_reg, first_row_index_5_reg_403, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_phi_fu_456_p6, tmp_V_fu_186)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_phi_mux_flag_write_phi_fu_456_p6 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0))) then 
            line_buffer_V_0_0_d0 <= tmp_V_fu_186;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_0_0_d0 <= img_src_4180_dout;
        else 
            line_buffer_V_0_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_0_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, trunc_ln331_reg_1894, icmp_ln388_reg_2020_pp1_iter1_reg, first_row_index_5_reg_403, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_phi_fu_456_p6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln331_reg_1894 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_456_p6 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)))) then 
            line_buffer_V_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_1_0_addr_1_gep_fu_303_p3 <= zext_ln429_fu_1063_p1(11 - 1 downto 0);
    line_buffer_V_1_0_addr_2_gep_fu_310_p3 <= zext_ln430_fu_1073_p1(11 - 1 downto 0);

    line_buffer_V_1_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln388_reg_2020_pp1_iter1_reg, icmp_ln874_2_reg_2038, first_row_index_5_reg_403, line_buffer_V_1_0_addr_2_gep_fu_310_p3, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_phi_fu_456_p6, zext_ln336_fu_659_p1, zext_ln430_fu_1073_p1, zext_ln388_fu_942_p1)
    begin
        if ((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_phi_mux_flag_write_phi_fu_456_p6 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0))) then 
            line_buffer_V_1_0_address0 <= zext_ln388_fu_942_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0))) then 
            line_buffer_V_1_0_address0 <= line_buffer_V_1_0_addr_2_gep_fu_310_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln874_2_reg_2038 = ap_const_lv1_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0))) then 
            line_buffer_V_1_0_address0 <= zext_ln430_fu_1073_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_1_0_address0 <= zext_ln336_fu_659_p1(11 - 1 downto 0);
        else 
            line_buffer_V_1_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_0_address1_assign_proc : process(icmp_ln874_2_reg_2038, first_row_index_5_reg_403, line_buffer_V_1_0_addr_1_gep_fu_303_p3, zext_ln429_fu_1063_p1, ap_condition_1691)
    begin
        if ((ap_const_boolean_1 = ap_condition_1691)) then
            if ((first_row_index_5_reg_403 = ap_const_lv32_0)) then 
                line_buffer_V_1_0_address1 <= line_buffer_V_1_0_addr_1_gep_fu_303_p3;
            elsif (((first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln874_2_reg_2038 = ap_const_lv1_0))) then 
                line_buffer_V_1_0_address1 <= zext_ln429_fu_1063_p1(11 - 1 downto 0);
            else 
                line_buffer_V_1_0_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_1_0_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, icmp_ln388_reg_2020_pp1_iter1_reg, icmp_ln874_2_reg_2038, first_row_index_5_reg_403, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_phi_fu_456_p6)
    begin
        if (((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_456_p6 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln874_2_reg_2038 = ap_const_lv1_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)))) then 
            line_buffer_V_1_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_0_ce1_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln388_reg_2020_pp1_iter1_reg, icmp_ln874_2_reg_2038, first_row_index_5_reg_403, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln874_2_reg_2038 = ap_const_lv1_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)))) then 
            line_buffer_V_1_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_0_d0_assign_proc : process(img_src_4180_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln388_reg_2020_pp1_iter1_reg, first_row_index_5_reg_403, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_phi_fu_456_p6, tmp_V_fu_186)
    begin
        if ((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_phi_mux_flag_write_phi_fu_456_p6 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0))) then 
            line_buffer_V_1_0_d0 <= tmp_V_fu_186;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_1_0_d0 <= img_src_4180_dout;
        else 
            line_buffer_V_1_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, trunc_ln331_reg_1894, icmp_ln388_reg_2020_pp1_iter1_reg, first_row_index_5_reg_403, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_phi_fu_456_p6)
    begin
        if (((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_456_p6 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln331_reg_1894 = ap_const_lv1_1)))) then 
            line_buffer_V_1_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_2_0_addr_1_gep_fu_331_p3 <= zext_ln430_fu_1073_p1(11 - 1 downto 0);
    line_buffer_V_2_0_addr_gep_fu_324_p3 <= zext_ln429_fu_1063_p1(11 - 1 downto 0);

    line_buffer_V_2_0_address0_assign_proc : process(first_row_index_5_reg_403, line_buffer_V_2_0_addr_1_gep_fu_331_p3, ap_phi_mux_flag_write_phi_fu_456_p6, zext_ln430_fu_1073_p1, zext_ln388_fu_942_p1, ap_condition_1691, ap_condition_1698)
    begin
        if ((ap_const_boolean_1 = ap_condition_1691)) then
            if ((ap_const_boolean_1 = ap_condition_1698)) then 
                line_buffer_V_2_0_address0 <= line_buffer_V_2_0_addr_1_gep_fu_331_p3;
            elsif (((ap_phi_mux_flag_write_phi_fu_456_p6 = ap_const_lv1_1) and (first_row_index_5_reg_403 = ap_const_lv32_0))) then 
                line_buffer_V_2_0_address0 <= zext_ln388_fu_942_p1(11 - 1 downto 0);
            elsif ((first_row_index_5_reg_403 = ap_const_lv32_1)) then 
                line_buffer_V_2_0_address0 <= zext_ln430_fu_1073_p1(11 - 1 downto 0);
            else 
                line_buffer_V_2_0_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_2_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_2_0_address1_assign_proc : process(first_row_index_5_reg_403, line_buffer_V_2_0_addr_gep_fu_324_p3, zext_ln429_fu_1063_p1, ap_condition_1691, ap_condition_1698)
    begin
        if ((ap_const_boolean_1 = ap_condition_1691)) then
            if ((ap_const_boolean_1 = ap_condition_1698)) then 
                line_buffer_V_2_0_address1 <= line_buffer_V_2_0_addr_gep_fu_324_p3;
            elsif ((first_row_index_5_reg_403 = ap_const_lv32_1)) then 
                line_buffer_V_2_0_address1 <= zext_ln429_fu_1063_p1(11 - 1 downto 0);
            else 
                line_buffer_V_2_0_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_2_0_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_2_0_ce0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln388_reg_2020_pp1_iter1_reg, icmp_ln874_2_reg_2038, first_row_index_5_reg_403, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_phi_fu_456_p6)
    begin
        if (((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln874_2_reg_2038 = ap_const_lv1_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_456_p6 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)))) then 
            line_buffer_V_2_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_0_ce1_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln388_reg_2020_pp1_iter1_reg, icmp_ln874_2_reg_2038, first_row_index_5_reg_403, ap_enable_reg_pp1_iter2)
    begin
        if (((not((first_row_index_5_reg_403 = ap_const_lv32_0)) and not((first_row_index_5_reg_403 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln874_2_reg_2038 = ap_const_lv1_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_1) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0)))) then 
            line_buffer_V_2_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_0_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln388_reg_2020_pp1_iter1_reg, first_row_index_5_reg_403, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_phi_fu_456_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_456_p6 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (first_row_index_5_reg_403 = ap_const_lv32_0) and (icmp_ln388_reg_2020_pp1_iter1_reg = ap_const_lv1_0))) then 
            line_buffer_V_2_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln708_1_fu_1410_p4 <= grp_fu_1793_p2(21 downto 10);
    nextYScale_V_fu_845_p3 <= 
        select_ln850_3_fu_838_p3 when (p_Result_s_reg_1957(0) = '1') else 
        trunc_ln850_3_i_fu_823_p4;
    not_cmp_i_i175_fu_1047_p2 <= "0" when (tmp_2_fu_1009_p4 = ap_const_lv11_77F) else "1";
    op2_assign_1_fu_778_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(read_rows_count_reg_427));
    op2_assign_fu_760_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(read_rows_count_reg_427));
    or_ln255_fu_995_p2 <= (tmp_fu_965_p3 or icmp_ln1494_1_fu_973_p2);
    or_ln486_fu_919_p2 <= (icmp_ln874_3_fu_914_p2 or and_ln486_fu_909_p2);
    or_ln508_fu_1696_p2 <= (icmp_ln874_1_fu_1691_p2 or and_ln508_fu_1686_p2);
    output_rows_count_1_fu_1716_p3 <= 
        select_ln508_fu_1708_p3 when (cmp282_reg_1988(0) = '1') else 
        output_rows_count_reg_415;
    p_Result_10_fu_1320_p4 <= p_Val2_4_fu_1111_p3(23 downto 16);
    p_Result_11_fu_1330_p4 <= ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12(23 downto 16);
    p_Result_13_fu_1480_p3 <= add_ln1192_2_fu_1464_p2(23 downto 23);
    p_Result_14_fu_1550_p3 <= add_ln1192_5_fu_1534_p2(23 downto 23);
    p_Result_15_fu_1620_p3 <= add_ln1192_8_fu_1604_p2(23 downto 23);
    p_Result_1_fu_1202_p4 <= p_Val2_s_fu_1118_p3(15 downto 8);
    p_Result_2_fu_1212_p4 <= ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12(15 downto 8);
    p_Result_3_fu_1222_p4 <= p_Val2_4_fu_1111_p3(15 downto 8);
    p_Result_4_fu_1232_p4 <= ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12(15 downto 8);
    p_Result_9_fu_1300_p4 <= p_Val2_s_fu_1118_p3(23 downto 16);
    p_Result_s_31_fu_1310_p4 <= ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12(23 downto 16);
    p_Val2_2_fu_794_p3 <= 
        ap_const_lv33_10DC00000 when (icmp_ln1494_reg_1968(0) = '1') else 
        trunc_ln230_reg_1942;
    p_Val2_3_fu_1001_p3 <= 
        select_ln255_fu_987_p3 when (or_ln255_fu_995_p2(0) = '1') else 
        trunc_ln230_2_fu_949_p1;
    p_Val2_4_fu_1111_p3 <= 
        ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12 when (icmp_ln874_2_reg_2038_pp1_iter2_reg(0) = '1') else 
        ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12;
    p_Val2_s_fu_1118_p3 <= 
        ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12 when (icmp_ln874_2_reg_2038_pp1_iter2_reg(0) = '1') else 
        ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12;
    read_rows_count_1_fu_1752_p2 <= std_logic_vector(unsigned(read_rows_count_reg_427) + unsigned(ap_const_lv32_1));
    read_rows_count_2_fu_1770_p3 <= 
        read_rows_count_reg_427 when (and_ln886_fu_1765_p2(0) = '1') else 
        sel_tmp1_fu_1758_p3;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_fu_727_p2 <= std_logic_vector(signed(sext_ln703_6_fu_723_p1) + signed(zext_ln703_reg_1928));
    rhs_V_fu_674_p4 <= grp_xfUDivResize_fu_560_ap_return(33 downto 10);
    sel_tmp1_fu_1758_p3 <= 
        read_rows_count_1_fu_1752_p2 when (cmp84_reg_1973(0) = '1') else 
        ap_const_lv32_438;
    select_ln1495_fu_804_p3 <= 
        ap_const_lv24_0 when (tmp_5_reg_1962(0) = '1') else 
        trunc_ln835_fu_800_p1;
    select_ln255_fu_987_p3 <= 
        ap_const_lv33_0 when (tmp_6_fu_979_p3(0) = '1') else 
        ap_const_lv33_1DFC00000;
    select_ln331_1_fu_641_p3 <= 
        add_ln331_1_fu_635_p2 when (icmp_ln336_fu_621_p2(0) = '1') else 
        ap_phi_mux_i_phi_fu_374_p4;
    select_ln331_fu_627_p3 <= 
        ap_const_lv11_0 when (icmp_ln336_fu_621_p2(0) = '1') else 
        j_reg_381;
    select_ln508_fu_1708_p3 <= 
        add_ln510_fu_1702_p2 when (or_ln508_fu_1696_p2(0) = '1') else 
        output_rows_count_reg_415;
    select_ln850_1_fu_1574_p3 <= 
        trunc_ln850_1_fu_1540_p4 when (icmp_ln851_1_fu_1562_p2(0) = '1') else 
        add_ln695_1_fu_1568_p2;
    select_ln850_2_fu_1644_p3 <= 
        trunc_ln850_2_fu_1610_p4 when (icmp_ln851_2_fu_1632_p2(0) = '1') else 
        add_ln695_2_fu_1638_p2;
    select_ln850_3_fu_838_p3 <= 
        trunc_ln850_3_i_fu_823_p4 when (icmp_ln851_3_reg_2005(0) = '1') else 
        add_ln695_3_fu_832_p2;
    select_ln850_6_fu_1512_p3 <= 
        select_ln850_fu_1504_p3 when (p_Result_13_fu_1480_p3(0) = '1') else 
        trunc_ln_fu_1470_p4;
    select_ln850_7_fu_1582_p3 <= 
        select_ln850_1_fu_1574_p3 when (p_Result_14_fu_1550_p3(0) = '1') else 
        trunc_ln850_1_fu_1540_p4;
    select_ln850_8_fu_1652_p3 <= 
        select_ln850_2_fu_1644_p3 when (p_Result_15_fu_1620_p3(0) = '1') else 
        trunc_ln850_2_fu_1610_p4;
    select_ln850_fu_1504_p3 <= 
        trunc_ln_fu_1470_p4 when (icmp_ln851_fu_1492_p2(0) = '1') else 
        add_ln695_fu_1498_p2;
        sext_ln703_1_fu_1457_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1848_p3),24));

        sext_ln703_3_fu_1527_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1857_p3),24));

        sext_ln703_5_fu_1597_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1866_p3),24));

    sext_ln703_6_fu_723_p0 <= grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;
        sext_ln703_6_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_6_fu_723_p0),43));

    shl_ln1_fu_1450_p3 <= (trunc_ln674_reg_2128_pp1_iter7_reg & ap_const_lv10_0);
    shl_ln728_1_fu_1520_p3 <= (p_Result_1_reg_2155_pp1_iter7_reg & ap_const_lv10_0);
    shl_ln728_2_fu_1590_p3 <= (p_Result_9_reg_2175_pp1_iter7_reg & ap_const_lv10_0);
    shl_ln728_3_fu_953_p3 <= (trunc_ln728_reg_2033 & ap_const_lv22_0);
    shl_ln_fu_1029_p3 <= (tmp_3_fu_1019_p4 & ap_const_lv22_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1351_1_fu_1183_p2 <= std_logic_vector(unsigned(zext_ln215_2_fu_1155_p1) - unsigned(zext_ln215_fu_1141_p1));
    sub_ln1351_2_fu_1189_p2 <= std_logic_vector(unsigned(zext_ln215_3_fu_1159_p1) - unsigned(zext_ln215_fu_1141_p1));
    sub_ln1351_3_fu_1278_p2 <= std_logic_vector(unsigned(zext_ln215_10_fu_1270_p1) - unsigned(zext_ln215_11_fu_1274_p1));
    sub_ln1351_4_fu_1284_p2 <= std_logic_vector(unsigned(zext_ln215_8_fu_1256_p1) - unsigned(zext_ln215_6_fu_1242_p1));
    sub_ln1351_5_fu_1290_p2 <= std_logic_vector(unsigned(zext_ln215_9_fu_1260_p1) - unsigned(zext_ln215_6_fu_1242_p1));
    sub_ln1351_6_fu_1376_p2 <= std_logic_vector(unsigned(zext_ln215_16_fu_1368_p1) - unsigned(zext_ln215_17_fu_1372_p1));
    sub_ln1351_7_fu_1382_p2 <= std_logic_vector(unsigned(zext_ln215_14_fu_1354_p1) - unsigned(zext_ln215_12_fu_1340_p1));
    sub_ln1351_8_fu_1388_p2 <= std_logic_vector(unsigned(zext_ln215_15_fu_1358_p1) - unsigned(zext_ln215_12_fu_1340_p1));
    sub_ln1351_fu_1177_p2 <= std_logic_vector(unsigned(zext_ln215_4_fu_1169_p1) - unsigned(zext_ln215_5_fu_1173_p1));
    sub_ln397_fu_1041_p2 <= std_logic_vector(unsigned(trunc_ln397_fu_1037_p1) - unsigned(shl_ln_fu_1029_p3));
    sub_ln728_fu_960_p2 <= std_logic_vector(unsigned(select_ln1495_reg_2015) - unsigned(shl_ln728_3_fu_953_p3));
    sub_ln851_fu_784_p2 <= std_logic_vector(unsigned(ap_const_lv22_0) - unsigned(trunc_ln230_1_reg_1947));
    tmp_1_fu_871_p4 <= p_Val2_2_reg_2010(32 downto 22);
    tmp_2_fu_1009_p4 <= p_Val2_3_fu_1001_p3(32 downto 22);
    tmp_3_fu_1019_p4 <= p_Val2_3_fu_1001_p3(23 downto 22);
    tmp_4_fu_1097_p4 <= sub_ln728_fu_960_p2(23 downto 12);
    tmp_5_fu_740_p1 <= grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;
    tmp_6_fu_979_p3 <= indexx_pre_comp_V_reg_594(41 downto 41);
    tmp_V_5_fu_880_p3 <= 
        ap_const_lv11_0 when (tmp_5_reg_1962(0) = '1') else 
        tmp_1_fu_871_p4;
    tmp_fu_965_p3 <= indexx_pre_comp_V_reg_594(41 downto 41);
    trunc_ln230_1_fu_719_p0 <= grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;
    trunc_ln230_1_fu_719_p1 <= trunc_ln230_1_fu_719_p0(22 - 1 downto 0);
    trunc_ln230_2_fu_949_p1 <= indexx_pre_comp_V_reg_594(33 - 1 downto 0);
    trunc_ln230_fu_715_p0 <= grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;
    trunc_ln230_fu_715_p1 <= trunc_ln230_fu_715_p0(33 - 1 downto 0);
    trunc_ln331_fu_649_p1 <= select_ln331_1_fu_641_p3(1 - 1 downto 0);
    trunc_ln397_fu_1037_p1 <= p_Val2_3_fu_1001_p3(24 - 1 downto 0);
    trunc_ln674_1_fu_1129_p1 <= ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12(8 - 1 downto 0);
    trunc_ln674_2_fu_1133_p1 <= p_Val2_4_fu_1111_p3(8 - 1 downto 0);
    trunc_ln674_3_fu_1137_p1 <= ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12(8 - 1 downto 0);
    trunc_ln674_fu_1125_p1 <= p_Val2_s_fu_1118_p3(8 - 1 downto 0);
    trunc_ln6_fu_1083_p4 <= sub_ln397_fu_1041_p2(23 downto 12);
    trunc_ln728_fu_891_p1 <= tmp_V_5_fu_880_p3(2 - 1 downto 0);
    trunc_ln835_fu_800_p1 <= p_Val2_2_fu_794_p3(24 - 1 downto 0);
    trunc_ln850_1_fu_1540_p4 <= add_ln1192_5_fu_1534_p2(17 downto 10);
    trunc_ln850_2_fu_1610_p4 <= add_ln1192_8_fu_1604_p2(17 downto 10);
    trunc_ln850_3_i_fu_823_p4 <= ret_V_reg_1952(38 downto 22);
    trunc_ln851_1_fu_1558_p1 <= add_ln1192_5_fu_1534_p2(10 - 1 downto 0);
    trunc_ln851_2_fu_1628_p1 <= add_ln1192_8_fu_1604_p2(10 - 1 downto 0);
    trunc_ln851_fu_1488_p1 <= add_ln1192_2_fu_1464_p2(10 - 1 downto 0);
    trunc_ln_fu_1470_p4 <= add_ln1192_2_fu_1464_p2(17 downto 10);
    zext_ln1118_1_fu_1401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_reg_2118_pp1_iter3_reg),21));
    zext_ln1118_fu_1199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln6_reg_2108),21));
    zext_ln1192_1_fu_1530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_1_fu_1520_p3),24));
    zext_ln1192_2_fu_1600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_2_fu_1590_p3),24));
    zext_ln1192_fu_1460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_1450_p3),24));
    zext_ln215_10_fu_1270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1350_2_fu_1250_p2),10));
    zext_ln215_11_fu_1274_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1350_3_fu_1264_p2),10));
    zext_ln215_12_fu_1340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_fu_1300_p4),9));
    zext_ln215_13_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_11_fu_1330_p4),9));
    zext_ln215_14_fu_1354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_31_fu_1310_p4),9));
    zext_ln215_15_fu_1358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_10_fu_1320_p4),9));
    zext_ln215_16_fu_1368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1350_4_fu_1348_p2),10));
    zext_ln215_17_fu_1372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1350_5_fu_1362_p2),10));
    zext_ln215_1_fu_1145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_3_fu_1137_p1),9));
    zext_ln215_2_fu_1155_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_1_fu_1129_p1),9));
    zext_ln215_3_fu_1159_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_2_fu_1133_p1),9));
    zext_ln215_4_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1350_fu_1149_p2),10));
    zext_ln215_5_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1350_1_fu_1163_p2),10));
    zext_ln215_6_fu_1242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_1202_p4),9));
    zext_ln215_7_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_fu_1232_p4),9));
    zext_ln215_8_fu_1256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_2_fu_1212_p4),9));
    zext_ln215_9_fu_1260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_3_fu_1222_p4),9));
    zext_ln215_fu_1141_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_fu_1125_p1),9));
    zext_ln336_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln331_reg_1884),64));
    zext_ln388_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_439_pp1_iter1_reg),64));
    zext_ln394_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_439),20));
    zext_ln427_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(not_cmp_i_i175_fu_1047_p2),11));
    zext_ln429_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_1009_p4),64));
    zext_ln430_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_nxt_fu_1057_p2),64));
    zext_ln445_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_5_fu_880_p3),17));
    zext_ln703_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_fu_674_p4),43));
    zext_ln708_2_fu_1419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln708_1_fu_1410_p4),22));
    zext_ln874_1_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_5_fu_880_p3),32));
    zext_ln874_fu_1677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indexy_V_0_fu_190),32));
    zext_ln886_1_fu_1723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nextYScale_V_1_fu_194),32));
    zext_ln886_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nextYScale_V_fu_845_p3),32));
end behav;
