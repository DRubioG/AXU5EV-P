// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module edge_canny_detector_xFMagnitudeKernel_2_2_1080_1920_3_3_1_5_5_1920_5760_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        gradx1_mat_4366_dout,
        gradx1_mat_4366_empty_n,
        gradx1_mat_4366_read,
        grady1_mat_4369_dout,
        grady1_mat_4369_empty_n,
        grady1_mat_4369_read,
        magnitude_mat_4371_din,
        magnitude_mat_4371_full_n,
        magnitude_mat_4371_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state13 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] gradx1_mat_4366_dout;
input   gradx1_mat_4366_empty_n;
output   gradx1_mat_4366_read;
input  [15:0] grady1_mat_4369_dout;
input   grady1_mat_4369_empty_n;
output   grady1_mat_4369_read;
output  [15:0] magnitude_mat_4371_din;
input   magnitude_mat_4371_full_n;
output   magnitude_mat_4371_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg gradx1_mat_4366_read;
reg grady1_mat_4369_read;
reg magnitude_mat_4371_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gradx1_mat_4366_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln79_reg_1822;
reg    grady1_mat_4369_blk_n;
reg    magnitude_mat_4371_blk_n;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] icmp_ln79_reg_1822_pp0_iter8_reg;
reg   [10:0] j_reg_280;
wire   [0:0] icmp_ln72_fu_291_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_1_fu_297_p2;
reg   [10:0] i_1_reg_1817;
wire   [0:0] icmp_ln79_fu_303_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
reg    ap_block_state12_pp0_stage0_iter9;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln79_reg_1822_pp0_iter1_reg;
reg   [0:0] icmp_ln79_reg_1822_pp0_iter2_reg;
reg   [0:0] icmp_ln79_reg_1822_pp0_iter3_reg;
reg   [0:0] icmp_ln79_reg_1822_pp0_iter4_reg;
reg   [0:0] icmp_ln79_reg_1822_pp0_iter5_reg;
reg   [0:0] icmp_ln79_reg_1822_pp0_iter6_reg;
reg   [0:0] icmp_ln79_reg_1822_pp0_iter7_reg;
wire   [10:0] j_1_fu_309_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [15:0] q_1_fu_351_p3;
reg   [15:0] q_1_reg_1831;
wire  signed [31:0] sext_ln105_fu_359_p1;
wire  signed [31:0] sext_ln106_fu_363_p1;
wire  signed [31:0] grp_fu_1782_p2;
wire   [1:0] trunc_ln67_fu_366_p1;
reg   [1:0] trunc_ln67_reg_1853;
reg   [1:0] trunc_ln67_reg_1853_pp0_iter6_reg;
reg   [1:0] trunc_ln67_reg_1853_pp0_iter7_reg;
reg   [1:0] trunc_ln67_reg_1853_pp0_iter8_reg;
wire   [0:0] icmp_ln3471_fu_378_p2;
reg   [0:0] icmp_ln3471_reg_1858;
reg   [0:0] icmp_ln3471_reg_1858_pp0_iter6_reg;
reg   [0:0] icmp_ln3471_reg_1858_pp0_iter7_reg;
reg   [0:0] icmp_ln3471_reg_1858_pp0_iter8_reg;
wire   [0:0] xor_ln3471_fu_498_p2;
reg   [0:0] xor_ln3471_reg_1875;
reg   [0:0] xor_ln3471_reg_1875_pp0_iter6_reg;
reg   [0:0] xor_ln3471_reg_1875_pp0_iter7_reg;
reg   [0:0] xor_ln3471_reg_1875_pp0_iter8_reg;
wire   [0:0] xor_ln3471_1_fu_583_p2;
reg   [0:0] xor_ln3471_1_reg_1892;
reg   [0:0] xor_ln3471_1_reg_1892_pp0_iter6_reg;
reg   [0:0] xor_ln3471_1_reg_1892_pp0_iter7_reg;
reg   [0:0] xor_ln3471_1_reg_1892_pp0_iter8_reg;
wire   [11:0] select_ln3450_2_fu_654_p3;
reg   [11:0] select_ln3450_2_reg_1909;
reg   [0:0] tmp_7_reg_1914;
reg   [1:0] tmp_4_cast_reg_1920;
reg   [1:0] tmp_5_cast_reg_1925;
reg   [1:0] tmp_6_cast_reg_1930;
reg   [1:0] tmp_7_cast_reg_1935;
reg   [1:0] tmp_8_cast_reg_1940;
reg   [1:0] tmp_8_cast_reg_1940_pp0_iter6_reg;
reg   [1:0] tmp_9_cast_reg_1945;
reg   [1:0] tmp_9_cast_reg_1945_pp0_iter6_reg;
reg   [1:0] tmp_10_cast_reg_1950;
reg   [1:0] tmp_10_cast_reg_1950_pp0_iter6_reg;
reg   [1:0] tmp_11_cast_reg_1955;
reg   [1:0] tmp_11_cast_reg_1955_pp0_iter6_reg;
reg   [1:0] tmp_11_cast_reg_1955_pp0_iter7_reg;
reg   [1:0] tmp_12_cast_reg_1960;
reg   [1:0] tmp_12_cast_reg_1960_pp0_iter6_reg;
reg   [1:0] tmp_12_cast_reg_1960_pp0_iter7_reg;
reg   [1:0] tmp_1313_cast_reg_1965;
reg   [1:0] tmp_1313_cast_reg_1965_pp0_iter6_reg;
reg   [1:0] tmp_1313_cast_reg_1965_pp0_iter7_reg;
reg   [1:0] tmp_14_cast_reg_1970;
reg   [1:0] tmp_14_cast_reg_1970_pp0_iter6_reg;
reg   [1:0] tmp_14_cast_reg_1970_pp0_iter7_reg;
reg   [1:0] tmp_14_cast_reg_1970_pp0_iter8_reg;
wire   [0:0] xor_ln3471_2_fu_769_p2;
reg   [0:0] xor_ln3471_2_reg_1975;
reg   [0:0] xor_ln3471_2_reg_1975_pp0_iter7_reg;
reg   [0:0] xor_ln3471_2_reg_1975_pp0_iter8_reg;
wire   [0:0] xor_ln3471_3_fu_842_p2;
reg   [0:0] xor_ln3471_3_reg_1988;
reg   [0:0] xor_ln3471_3_reg_1988_pp0_iter7_reg;
reg   [0:0] xor_ln3471_3_reg_1988_pp0_iter8_reg;
wire   [0:0] xor_ln3471_4_fu_920_p2;
reg   [0:0] xor_ln3471_4_reg_2001;
reg   [0:0] xor_ln3471_4_reg_2001_pp0_iter7_reg;
reg   [0:0] xor_ln3471_4_reg_2001_pp0_iter8_reg;
wire   [0:0] xor_ln3471_5_fu_1000_p2;
reg   [0:0] xor_ln3471_5_reg_2014;
reg   [0:0] xor_ln3471_5_reg_2014_pp0_iter7_reg;
reg   [0:0] xor_ln3471_5_reg_2014_pp0_iter8_reg;
wire   [23:0] select_ln3450_6_fu_1066_p3;
reg   [23:0] select_ln3450_6_reg_2027;
reg   [0:0] tmp_11_reg_2032;
wire   [0:0] xor_ln3471_6_fu_1082_p2;
reg   [0:0] xor_ln3471_6_reg_2038;
reg   [0:0] xor_ln3471_6_reg_2038_pp0_iter8_reg;
wire   [0:0] xor_ln3471_7_fu_1159_p2;
reg   [0:0] xor_ln3471_7_reg_2048;
reg   [0:0] xor_ln3471_7_reg_2048_pp0_iter8_reg;
wire   [0:0] xor_ln3471_8_fu_1241_p2;
reg   [0:0] xor_ln3471_8_reg_2058;
reg   [0:0] xor_ln3471_8_reg_2058_pp0_iter8_reg;
reg   [0:0] tmp_14_reg_2068;
wire   [29:0] empty_fu_1321_p1;
reg   [29:0] empty_reg_2074;
wire   [0:0] xor_ln3471_9_fu_1325_p2;
reg   [0:0] xor_ln3471_9_reg_2079;
wire   [0:0] xor_ln3471_10_fu_1401_p2;
reg   [0:0] xor_ln3471_10_reg_2086;
wire   [0:0] xor_ln3471_11_fu_1486_p2;
reg   [0:0] xor_ln3471_11_reg_2093;
reg   [0:0] tmp_17_reg_2100;
wire   [29:0] empty_55_fu_1573_p1;
reg   [29:0] empty_55_reg_2106;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg   [10:0] i_reg_269;
reg    ap_block_state1;
wire    ap_CS_fsm_state13;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] tmp_1_fu_315_p3;
wire   [15:0] sub_ln98_fu_323_p2;
wire   [0:0] tmp_3_fu_337_p3;
wire   [15:0] sub_ln99_fu_345_p2;
wire   [15:0] p_1_fu_329_p3;
wire  signed [31:0] grp_fu_1788_p3;
wire   [1:0] tmp_4_fu_369_p4;
wire   [1:0] tmp_2_fu_393_p4;
wire   [3:0] R_2_fu_402_p3;
wire   [4:0] R_2_0_cast_fu_410_p1;
wire   [4:0] tmpR_1_fu_414_p2;
wire   [2:0] tmp_fu_420_p4;
wire   [1:0] tmp_13_cast_fu_384_p4;
wire   [4:0] R_1_1_fu_430_p3;
wire   [2:0] tmpQ_s_fu_442_p3;
wire   [2:0] or_ln3457_fu_450_p2;
wire  signed [5:0] R_1_1_cast_fu_438_p1;
wire   [5:0] zext_ln3459_fu_456_p1;
wire   [2:0] or_ln3467_fu_466_p2;
wire   [5:0] zext_ln3469_fu_472_p1;
wire   [5:0] sub_ln3459_fu_460_p2;
wire   [5:0] add_ln3469_fu_476_p2;
wire   [5:0] select_ln3450_fu_482_p3;
wire   [0:0] tmp_5_fu_490_p3;
wire   [1:0] tmp_2_cast_fu_504_p4;
wire   [7:0] R_1_2_fu_513_p3;
wire   [3:0] tmpQ_1_fu_525_p4;
wire   [3:0] or_ln3457_1_fu_535_p2;
wire  signed [8:0] R_1_2_cast_fu_521_p1;
wire   [8:0] zext_ln3459_1_fu_541_p1;
wire   [3:0] or_ln3467_1_fu_551_p2;
wire   [8:0] zext_ln3469_1_fu_557_p1;
wire   [8:0] add_ln3469_1_fu_561_p2;
wire   [8:0] sub_ln3459_1_fu_545_p2;
wire   [8:0] select_ln3450_1_fu_567_p3;
wire   [0:0] tmp_6_fu_575_p3;
wire   [1:0] tmp_3_cast_fu_589_p4;
wire   [10:0] R_1_3_fu_598_p3;
wire   [4:0] tmpQ_3_fu_610_p5;
wire   [4:0] or_ln3457_2_fu_622_p2;
wire  signed [11:0] R_1_3_cast_fu_606_p1;
wire   [11:0] zext_ln3459_2_fu_628_p1;
wire   [4:0] or_ln3467_2_fu_638_p2;
wire   [11:0] zext_ln3469_2_fu_644_p1;
wire   [11:0] add_ln3469_2_fu_648_p2;
wire   [11:0] sub_ln3459_2_fu_632_p2;
wire   [13:0] R_1_4_fu_774_p3;
wire   [5:0] tmpQ_4_fu_784_p6;
wire   [5:0] or_ln3457_3_fu_795_p2;
wire  signed [14:0] R_1_4_cast_fu_780_p1;
wire   [14:0] zext_ln3459_3_fu_801_p1;
wire   [5:0] or_ln3467_3_fu_811_p2;
wire   [14:0] zext_ln3469_3_fu_817_p1;
wire   [14:0] add_ln3469_3_fu_821_p2;
wire   [14:0] sub_ln3459_3_fu_805_p2;
wire   [14:0] select_ln3450_3_fu_827_p3;
wire   [0:0] tmp_8_fu_834_p3;
wire   [16:0] R_1_5_fu_848_p3;
wire   [6:0] tmpQ_5_fu_859_p7;
wire   [6:0] or_ln3457_4_fu_872_p2;
wire  signed [17:0] R_1_5_cast_fu_855_p1;
wire   [17:0] zext_ln3459_4_fu_878_p1;
wire   [6:0] or_ln3467_4_fu_888_p2;
wire   [17:0] zext_ln3469_4_fu_894_p1;
wire   [17:0] add_ln3469_4_fu_898_p2;
wire   [17:0] sub_ln3459_4_fu_882_p2;
wire   [17:0] select_ln3450_4_fu_904_p3;
wire   [0:0] tmp_9_fu_912_p3;
wire   [19:0] R_1_6_fu_926_p3;
wire   [7:0] tmpQ_6_fu_937_p8;
wire   [7:0] or_ln3457_5_fu_952_p2;
wire  signed [20:0] R_1_6_cast_fu_933_p1;
wire   [20:0] zext_ln3459_5_fu_958_p1;
wire   [7:0] or_ln3467_5_fu_968_p2;
wire   [20:0] zext_ln3469_5_fu_974_p1;
wire   [20:0] add_ln3469_5_fu_978_p2;
wire   [20:0] sub_ln3459_5_fu_962_p2;
wire   [20:0] select_ln3450_5_fu_984_p3;
wire   [0:0] tmp_10_fu_992_p3;
wire   [22:0] R_1_7_fu_1006_p3;
wire   [8:0] tmpQ_7_fu_1017_p9;
wire   [8:0] or_ln3457_6_fu_1034_p2;
wire  signed [23:0] R_1_7_cast_fu_1013_p1;
wire   [23:0] zext_ln3459_6_fu_1040_p1;
wire   [8:0] or_ln3467_6_fu_1050_p2;
wire   [23:0] zext_ln3469_6_fu_1056_p1;
wire   [23:0] add_ln3469_6_fu_1060_p2;
wire   [23:0] sub_ln3459_6_fu_1044_p2;
wire   [25:0] R_1_8_fu_1087_p3;
wire   [9:0] tmpQ_8_fu_1097_p10;
wire   [9:0] or_ln3457_7_fu_1112_p2;
wire  signed [26:0] R_1_8_cast_fu_1093_p1;
wire   [26:0] zext_ln3459_7_fu_1118_p1;
wire   [9:0] or_ln3467_7_fu_1128_p2;
wire   [26:0] zext_ln3469_7_fu_1134_p1;
wire   [26:0] add_ln3469_7_fu_1138_p2;
wire   [26:0] sub_ln3459_7_fu_1122_p2;
wire   [26:0] select_ln3450_7_fu_1144_p3;
wire   [0:0] tmp_12_fu_1151_p3;
wire   [28:0] R_1_9_fu_1165_p3;
wire   [10:0] tmpQ_9_fu_1176_p11;
wire   [10:0] or_ln3457_8_fu_1193_p2;
wire  signed [29:0] R_1_9_cast_fu_1172_p1;
wire   [29:0] zext_ln3459_8_fu_1199_p1;
wire   [10:0] or_ln3467_8_fu_1209_p2;
wire   [29:0] zext_ln3469_8_fu_1215_p1;
wire   [29:0] add_ln3469_8_fu_1219_p2;
wire   [29:0] sub_ln3459_8_fu_1203_p2;
wire   [29:0] select_ln3450_8_fu_1225_p3;
wire   [0:0] tmp_13_fu_1233_p3;
wire   [11:0] tmpQ_2_fu_1254_p12;
wire   [11:0] or_ln3457_9_fu_1273_p2;
wire   [31:0] R_1_s_fu_1247_p3;
wire   [31:0] zext_ln3459_9_fu_1279_p1;
wire   [11:0] or_ln3467_9_fu_1289_p2;
wire   [31:0] zext_ln3469_9_fu_1295_p1;
wire   [31:0] add_ln3469_9_fu_1299_p2;
wire   [31:0] sub_ln3459_9_fu_1283_p2;
wire   [31:0] select_ln3450_9_fu_1305_p3;
wire   [12:0] tmpQ_10_fu_1336_p13;
wire   [12:0] or_ln3457_10_fu_1354_p2;
wire   [31:0] R_1_10_fu_1330_p3;
wire   [31:0] zext_ln3459_10_fu_1360_p1;
wire   [12:0] or_ln3467_10_fu_1370_p2;
wire   [31:0] zext_ln3469_10_fu_1376_p1;
wire   [31:0] add_ln3469_10_fu_1380_p2;
wire   [31:0] sub_ln3459_10_fu_1364_p2;
wire   [31:0] select_ln3450_10_fu_1386_p3;
wire   [0:0] tmp_15_fu_1393_p3;
wire   [29:0] empty_53_fu_1407_p1;
wire   [13:0] tmpQ_11_fu_1418_p14;
wire   [13:0] or_ln3457_11_fu_1438_p2;
wire   [31:0] R_1_11_fu_1411_p3;
wire   [31:0] zext_ln3459_11_fu_1444_p1;
wire   [13:0] or_ln3467_11_fu_1454_p2;
wire   [31:0] zext_ln3469_11_fu_1460_p1;
wire   [31:0] add_ln3469_11_fu_1464_p2;
wire   [31:0] sub_ln3459_11_fu_1448_p2;
wire   [31:0] select_ln3450_11_fu_1470_p3;
wire   [0:0] tmp_16_fu_1478_p3;
wire   [29:0] empty_54_fu_1492_p1;
wire   [14:0] tmpQ_12_fu_1503_p15;
wire   [14:0] or_ln3457_12_fu_1525_p2;
wire   [31:0] R_1_12_fu_1496_p3;
wire   [31:0] zext_ln3459_12_fu_1531_p1;
wire   [14:0] or_ln3467_12_fu_1541_p2;
wire   [31:0] zext_ln3469_12_fu_1547_p1;
wire   [31:0] add_ln3469_12_fu_1551_p2;
wire   [31:0] sub_ln3459_12_fu_1535_p2;
wire   [31:0] select_ln3450_12_fu_1557_p3;
wire   [0:0] xor_ln3471_12_fu_1577_p2;
wire   [15:0] tmpQ_13_fu_1588_p16;
wire   [15:0] or_ln3457_13_fu_1609_p2;
wire   [31:0] R_1_13_fu_1582_p3;
wire   [31:0] zext_ln3459_13_fu_1615_p1;
wire   [15:0] or_ln3467_13_fu_1625_p2;
wire   [31:0] zext_ln3469_13_fu_1631_p1;
wire   [31:0] add_ln3469_13_fu_1635_p2;
wire   [31:0] sub_ln3459_13_fu_1619_p2;
wire   [31:0] select_ln3450_13_fu_1641_p3;
wire   [0:0] tmp_18_fu_1648_p3;
wire   [29:0] empty_56_fu_1662_p1;
wire   [0:0] xor_ln3471_13_fu_1656_p2;
wire   [16:0] tmpQ_14_fu_1673_p17;
wire   [16:0] or_ln3457_14_fu_1696_p2;
wire   [31:0] R_1_14_fu_1666_p3;
wire   [31:0] zext_ln3459_14_fu_1702_p1;
wire   [16:0] or_ln3467_14_fu_1712_p2;
wire   [31:0] zext_ln3469_14_fu_1718_p1;
wire   [31:0] add_ln3469_14_fu_1722_p2;
wire   [31:0] sub_ln3459_14_fu_1706_p2;
wire   [0:0] tmp_19_fu_1728_p3;
wire   [0:0] tmp_20_fu_1736_p3;
wire   [0:0] select_ln3450_14_fu_1744_p3;
wire   [0:0] xor_ln3471_14_fu_1752_p2;
wire  signed [15:0] grp_fu_1782_p0;
wire  signed [15:0] grp_fu_1782_p1;
wire  signed [15:0] grp_fu_1788_p0;
wire  signed [15:0] grp_fu_1788_p1;
reg    grp_fu_1782_ce;
reg    grp_fu_1788_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
end

edge_canny_detector_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1782_p0),
    .din1(grp_fu_1782_p1),
    .ce(grp_fu_1782_ce),
    .dout(grp_fu_1782_p2)
);

edge_canny_detector_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1788_p0),
    .din1(grp_fu_1788_p1),
    .din2(grp_fu_1782_p2),
    .ce(grp_fu_1788_ce),
    .dout(grp_fu_1788_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln72_fu_291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln72_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end else if (((icmp_ln72_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_reg_269 <= i_1_reg_1817;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_269 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_303_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_280 <= j_1_fu_309_p2;
    end else if (((icmp_ln72_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_280 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1822_pp0_iter7_reg == 1'd0))) begin
        empty_55_reg_2106 <= empty_55_fu_1573_p1;
        tmp_17_reg_2100 <= select_ln3450_12_fu_1557_p3[32'd31];
        xor_ln3471_10_reg_2086 <= xor_ln3471_10_fu_1401_p2;
        xor_ln3471_11_reg_2093 <= xor_ln3471_11_fu_1486_p2;
        xor_ln3471_9_reg_2079 <= xor_ln3471_9_fu_1325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1822_pp0_iter6_reg == 1'd0))) begin
        empty_reg_2074 <= empty_fu_1321_p1;
        tmp_14_reg_2068 <= select_ln3450_9_fu_1305_p3[32'd31];
        xor_ln3471_6_reg_2038 <= xor_ln3471_6_fu_1082_p2;
        xor_ln3471_7_reg_2048 <= xor_ln3471_7_fu_1159_p2;
        xor_ln3471_8_reg_2058 <= xor_ln3471_8_fu_1241_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_1817 <= i_1_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1822_pp0_iter4_reg == 1'd0))) begin
        icmp_ln3471_reg_1858 <= icmp_ln3471_fu_378_p2;
        select_ln3450_2_reg_1909 <= select_ln3450_2_fu_654_p3;
        tmp_10_cast_reg_1950 <= {{grp_fu_1788_p3[11:10]}};
        tmp_11_cast_reg_1955 <= {{grp_fu_1788_p3[9:8]}};
        tmp_12_cast_reg_1960 <= {{grp_fu_1788_p3[7:6]}};
        tmp_1313_cast_reg_1965 <= {{grp_fu_1788_p3[5:4]}};
        tmp_14_cast_reg_1970 <= {{grp_fu_1788_p3[3:2]}};
        tmp_4_cast_reg_1920 <= {{grp_fu_1788_p3[23:22]}};
        tmp_5_cast_reg_1925 <= {{grp_fu_1788_p3[21:20]}};
        tmp_6_cast_reg_1930 <= {{grp_fu_1788_p3[19:18]}};
        tmp_7_cast_reg_1935 <= {{grp_fu_1788_p3[17:16]}};
        tmp_7_reg_1914 <= select_ln3450_2_fu_654_p3[32'd11];
        tmp_8_cast_reg_1940 <= {{grp_fu_1788_p3[15:14]}};
        tmp_9_cast_reg_1945 <= {{grp_fu_1788_p3[13:12]}};
        trunc_ln67_reg_1853 <= trunc_ln67_fu_366_p1;
        xor_ln3471_1_reg_1892 <= xor_ln3471_1_fu_583_p2;
        xor_ln3471_reg_1875 <= xor_ln3471_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln3471_reg_1858_pp0_iter6_reg <= icmp_ln3471_reg_1858;
        icmp_ln3471_reg_1858_pp0_iter7_reg <= icmp_ln3471_reg_1858_pp0_iter6_reg;
        icmp_ln3471_reg_1858_pp0_iter8_reg <= icmp_ln3471_reg_1858_pp0_iter7_reg;
        icmp_ln79_reg_1822_pp0_iter2_reg <= icmp_ln79_reg_1822_pp0_iter1_reg;
        icmp_ln79_reg_1822_pp0_iter3_reg <= icmp_ln79_reg_1822_pp0_iter2_reg;
        icmp_ln79_reg_1822_pp0_iter4_reg <= icmp_ln79_reg_1822_pp0_iter3_reg;
        icmp_ln79_reg_1822_pp0_iter5_reg <= icmp_ln79_reg_1822_pp0_iter4_reg;
        icmp_ln79_reg_1822_pp0_iter6_reg <= icmp_ln79_reg_1822_pp0_iter5_reg;
        icmp_ln79_reg_1822_pp0_iter7_reg <= icmp_ln79_reg_1822_pp0_iter6_reg;
        icmp_ln79_reg_1822_pp0_iter8_reg <= icmp_ln79_reg_1822_pp0_iter7_reg;
        tmp_10_cast_reg_1950_pp0_iter6_reg <= tmp_10_cast_reg_1950;
        tmp_11_cast_reg_1955_pp0_iter6_reg <= tmp_11_cast_reg_1955;
        tmp_11_cast_reg_1955_pp0_iter7_reg <= tmp_11_cast_reg_1955_pp0_iter6_reg;
        tmp_12_cast_reg_1960_pp0_iter6_reg <= tmp_12_cast_reg_1960;
        tmp_12_cast_reg_1960_pp0_iter7_reg <= tmp_12_cast_reg_1960_pp0_iter6_reg;
        tmp_1313_cast_reg_1965_pp0_iter6_reg <= tmp_1313_cast_reg_1965;
        tmp_1313_cast_reg_1965_pp0_iter7_reg <= tmp_1313_cast_reg_1965_pp0_iter6_reg;
        tmp_14_cast_reg_1970_pp0_iter6_reg <= tmp_14_cast_reg_1970;
        tmp_14_cast_reg_1970_pp0_iter7_reg <= tmp_14_cast_reg_1970_pp0_iter6_reg;
        tmp_14_cast_reg_1970_pp0_iter8_reg <= tmp_14_cast_reg_1970_pp0_iter7_reg;
        tmp_8_cast_reg_1940_pp0_iter6_reg <= tmp_8_cast_reg_1940;
        tmp_9_cast_reg_1945_pp0_iter6_reg <= tmp_9_cast_reg_1945;
        trunc_ln67_reg_1853_pp0_iter6_reg <= trunc_ln67_reg_1853;
        trunc_ln67_reg_1853_pp0_iter7_reg <= trunc_ln67_reg_1853_pp0_iter6_reg;
        trunc_ln67_reg_1853_pp0_iter8_reg <= trunc_ln67_reg_1853_pp0_iter7_reg;
        xor_ln3471_1_reg_1892_pp0_iter6_reg <= xor_ln3471_1_reg_1892;
        xor_ln3471_1_reg_1892_pp0_iter7_reg <= xor_ln3471_1_reg_1892_pp0_iter6_reg;
        xor_ln3471_1_reg_1892_pp0_iter8_reg <= xor_ln3471_1_reg_1892_pp0_iter7_reg;
        xor_ln3471_2_reg_1975_pp0_iter7_reg <= xor_ln3471_2_reg_1975;
        xor_ln3471_2_reg_1975_pp0_iter8_reg <= xor_ln3471_2_reg_1975_pp0_iter7_reg;
        xor_ln3471_3_reg_1988_pp0_iter7_reg <= xor_ln3471_3_reg_1988;
        xor_ln3471_3_reg_1988_pp0_iter8_reg <= xor_ln3471_3_reg_1988_pp0_iter7_reg;
        xor_ln3471_4_reg_2001_pp0_iter7_reg <= xor_ln3471_4_reg_2001;
        xor_ln3471_4_reg_2001_pp0_iter8_reg <= xor_ln3471_4_reg_2001_pp0_iter7_reg;
        xor_ln3471_5_reg_2014_pp0_iter7_reg <= xor_ln3471_5_reg_2014;
        xor_ln3471_5_reg_2014_pp0_iter8_reg <= xor_ln3471_5_reg_2014_pp0_iter7_reg;
        xor_ln3471_6_reg_2038_pp0_iter8_reg <= xor_ln3471_6_reg_2038;
        xor_ln3471_7_reg_2048_pp0_iter8_reg <= xor_ln3471_7_reg_2048;
        xor_ln3471_8_reg_2058_pp0_iter8_reg <= xor_ln3471_8_reg_2058;
        xor_ln3471_reg_1875_pp0_iter6_reg <= xor_ln3471_reg_1875;
        xor_ln3471_reg_1875_pp0_iter7_reg <= xor_ln3471_reg_1875_pp0_iter6_reg;
        xor_ln3471_reg_1875_pp0_iter8_reg <= xor_ln3471_reg_1875_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln79_reg_1822 <= icmp_ln79_fu_303_p2;
        icmp_ln79_reg_1822_pp0_iter1_reg <= icmp_ln79_reg_1822;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_reg_1822 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_1_reg_1831 <= q_1_fu_351_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1822_pp0_iter5_reg == 1'd0))) begin
        select_ln3450_6_reg_2027 <= select_ln3450_6_fu_1066_p3;
        tmp_11_reg_2032 <= select_ln3450_6_fu_1066_p3[32'd23];
        xor_ln3471_2_reg_1975 <= xor_ln3471_2_fu_769_p2;
        xor_ln3471_3_reg_1988 <= xor_ln3471_3_fu_842_p2;
        xor_ln3471_4_reg_2001 <= xor_ln3471_4_fu_920_p2;
        xor_ln3471_5_reg_2014 <= xor_ln3471_5_fu_1000_p2;
    end
end

always @ (*) begin
    if ((icmp_ln79_fu_303_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_fu_291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_fu_291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1822 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradx1_mat_4366_blk_n = gradx1_mat_4366_empty_n;
    end else begin
        gradx1_mat_4366_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1822 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradx1_mat_4366_read = 1'b1;
    end else begin
        gradx1_mat_4366_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1822 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grady1_mat_4369_blk_n = grady1_mat_4369_empty_n;
    end else begin
        grady1_mat_4369_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1822 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grady1_mat_4369_read = 1'b1;
    end else begin
        grady1_mat_4369_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1782_ce = 1'b1;
    end else begin
        grp_fu_1782_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1788_ce = 1'b1;
    end else begin
        grp_fu_1788_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1822_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        magnitude_mat_4371_blk_n = magnitude_mat_4371_full_n;
    end else begin
        magnitude_mat_4371_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1822_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        magnitude_mat_4371_write = 1'b1;
    end else begin
        magnitude_mat_4371_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln72_fu_291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln79_fu_303_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b0)) | ((icmp_ln79_fu_303_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign R_1_10_fu_1330_p3 = {{empty_reg_2074}, {tmp_11_cast_reg_1955_pp0_iter7_reg}};

assign R_1_11_fu_1411_p3 = {{empty_53_fu_1407_p1}, {tmp_12_cast_reg_1960_pp0_iter7_reg}};

assign R_1_12_fu_1496_p3 = {{empty_54_fu_1492_p1}, {tmp_1313_cast_reg_1965_pp0_iter7_reg}};

assign R_1_13_fu_1582_p3 = {{empty_55_reg_2106}, {tmp_14_cast_reg_1970_pp0_iter8_reg}};

assign R_1_14_fu_1666_p3 = {{empty_56_fu_1662_p1}, {trunc_ln67_reg_1853_pp0_iter8_reg}};

assign R_1_1_cast_fu_438_p1 = $signed(R_1_1_fu_430_p3);

assign R_1_1_fu_430_p3 = {{tmp_fu_420_p4}, {tmp_13_cast_fu_384_p4}};

assign R_1_2_cast_fu_521_p1 = $signed(R_1_2_fu_513_p3);

assign R_1_2_fu_513_p3 = {{select_ln3450_fu_482_p3}, {tmp_2_cast_fu_504_p4}};

assign R_1_3_cast_fu_606_p1 = $signed(R_1_3_fu_598_p3);

assign R_1_3_fu_598_p3 = {{select_ln3450_1_fu_567_p3}, {tmp_3_cast_fu_589_p4}};

assign R_1_4_cast_fu_780_p1 = $signed(R_1_4_fu_774_p3);

assign R_1_4_fu_774_p3 = {{select_ln3450_2_reg_1909}, {tmp_4_cast_reg_1920}};

assign R_1_5_cast_fu_855_p1 = $signed(R_1_5_fu_848_p3);

assign R_1_5_fu_848_p3 = {{select_ln3450_3_fu_827_p3}, {tmp_5_cast_reg_1925}};

assign R_1_6_cast_fu_933_p1 = $signed(R_1_6_fu_926_p3);

assign R_1_6_fu_926_p3 = {{select_ln3450_4_fu_904_p3}, {tmp_6_cast_reg_1930}};

assign R_1_7_cast_fu_1013_p1 = $signed(R_1_7_fu_1006_p3);

assign R_1_7_fu_1006_p3 = {{select_ln3450_5_fu_984_p3}, {tmp_7_cast_reg_1935}};

assign R_1_8_cast_fu_1093_p1 = $signed(R_1_8_fu_1087_p3);

assign R_1_8_fu_1087_p3 = {{select_ln3450_6_reg_2027}, {tmp_8_cast_reg_1940_pp0_iter6_reg}};

assign R_1_9_cast_fu_1172_p1 = $signed(R_1_9_fu_1165_p3);

assign R_1_9_fu_1165_p3 = {{select_ln3450_7_fu_1144_p3}, {tmp_9_cast_reg_1945_pp0_iter6_reg}};

assign R_1_s_fu_1247_p3 = {{select_ln3450_8_fu_1225_p3}, {tmp_10_cast_reg_1950_pp0_iter6_reg}};

assign R_2_0_cast_fu_410_p1 = R_2_fu_402_p3;

assign R_2_fu_402_p3 = {{tmp_2_fu_393_p4}, {2'd0}};

assign add_ln3469_10_fu_1380_p2 = (zext_ln3469_10_fu_1376_p1 + R_1_10_fu_1330_p3);

assign add_ln3469_11_fu_1464_p2 = (zext_ln3469_11_fu_1460_p1 + R_1_11_fu_1411_p3);

assign add_ln3469_12_fu_1551_p2 = (zext_ln3469_12_fu_1547_p1 + R_1_12_fu_1496_p3);

assign add_ln3469_13_fu_1635_p2 = (zext_ln3469_13_fu_1631_p1 + R_1_13_fu_1582_p3);

assign add_ln3469_14_fu_1722_p2 = (zext_ln3469_14_fu_1718_p1 + R_1_14_fu_1666_p3);

assign add_ln3469_1_fu_561_p2 = ($signed(zext_ln3469_1_fu_557_p1) + $signed(R_1_2_cast_fu_521_p1));

assign add_ln3469_2_fu_648_p2 = ($signed(zext_ln3469_2_fu_644_p1) + $signed(R_1_3_cast_fu_606_p1));

assign add_ln3469_3_fu_821_p2 = ($signed(zext_ln3469_3_fu_817_p1) + $signed(R_1_4_cast_fu_780_p1));

assign add_ln3469_4_fu_898_p2 = ($signed(zext_ln3469_4_fu_894_p1) + $signed(R_1_5_cast_fu_855_p1));

assign add_ln3469_5_fu_978_p2 = ($signed(zext_ln3469_5_fu_974_p1) + $signed(R_1_6_cast_fu_933_p1));

assign add_ln3469_6_fu_1060_p2 = ($signed(zext_ln3469_6_fu_1056_p1) + $signed(R_1_7_cast_fu_1013_p1));

assign add_ln3469_7_fu_1138_p2 = ($signed(zext_ln3469_7_fu_1134_p1) + $signed(R_1_8_cast_fu_1093_p1));

assign add_ln3469_8_fu_1219_p2 = ($signed(zext_ln3469_8_fu_1215_p1) + $signed(R_1_9_cast_fu_1172_p1));

assign add_ln3469_9_fu_1299_p2 = (zext_ln3469_9_fu_1295_p1 + R_1_s_fu_1247_p3);

assign add_ln3469_fu_476_p2 = ($signed(zext_ln3469_fu_472_p1) + $signed(R_1_1_cast_fu_438_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln79_reg_1822_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (magnitude_mat_4371_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln79_reg_1822 == 1'd0) & (grady1_mat_4369_empty_n == 1'b0)) | ((icmp_ln79_reg_1822 == 1'd0) & (gradx1_mat_4366_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln79_reg_1822_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (magnitude_mat_4371_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln79_reg_1822 == 1'd0) & (grady1_mat_4369_empty_n == 1'b0)) | ((icmp_ln79_reg_1822 == 1'd0) & (gradx1_mat_4366_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln79_reg_1822_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (magnitude_mat_4371_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln79_reg_1822 == 1'd0) & (grady1_mat_4369_empty_n == 1'b0)) | ((icmp_ln79_reg_1822 == 1'd0) & (gradx1_mat_4366_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter9 = ((icmp_ln79_reg_1822_pp0_iter8_reg == 1'd0) & (magnitude_mat_4371_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((icmp_ln79_reg_1822 == 1'd0) & (grady1_mat_4369_empty_n == 1'b0)) | ((icmp_ln79_reg_1822 == 1'd0) & (gradx1_mat_4366_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign empty_53_fu_1407_p1 = select_ln3450_10_fu_1386_p3[29:0];

assign empty_54_fu_1492_p1 = select_ln3450_11_fu_1470_p3[29:0];

assign empty_55_fu_1573_p1 = select_ln3450_12_fu_1557_p3[29:0];

assign empty_56_fu_1662_p1 = select_ln3450_13_fu_1641_p3[29:0];

assign empty_fu_1321_p1 = select_ln3450_9_fu_1305_p3[29:0];

assign grp_fu_1782_p0 = sext_ln105_fu_359_p1;

assign grp_fu_1782_p1 = sext_ln105_fu_359_p1;

assign grp_fu_1788_p0 = sext_ln106_fu_363_p1;

assign grp_fu_1788_p1 = sext_ln106_fu_363_p1;

assign i_1_fu_297_p2 = (i_reg_269 + 11'd1);

assign icmp_ln3471_fu_378_p2 = ((tmp_4_fu_369_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_291_p2 = ((i_reg_269 == 11'd1080) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_303_p2 = ((j_reg_280 == 11'd1920) ? 1'b1 : 1'b0);

assign j_1_fu_309_p2 = (j_reg_280 + 11'd1);

assign magnitude_mat_4371_din = {{{{{{{{{{{{{{{{icmp_ln3471_reg_1858_pp0_iter8_reg}, {xor_ln3471_reg_1875_pp0_iter8_reg}}, {xor_ln3471_1_reg_1892_pp0_iter8_reg}}, {xor_ln3471_2_reg_1975_pp0_iter8_reg}}, {xor_ln3471_3_reg_1988_pp0_iter8_reg}}, {xor_ln3471_4_reg_2001_pp0_iter8_reg}}, {xor_ln3471_5_reg_2014_pp0_iter8_reg}}, {xor_ln3471_6_reg_2038_pp0_iter8_reg}}, {xor_ln3471_7_reg_2048_pp0_iter8_reg}}, {xor_ln3471_8_reg_2058_pp0_iter8_reg}}, {xor_ln3471_9_reg_2079}}, {xor_ln3471_10_reg_2086}}, {xor_ln3471_11_reg_2093}}, {xor_ln3471_12_fu_1577_p2}}, {xor_ln3471_13_fu_1656_p2}}, {xor_ln3471_14_fu_1752_p2}};

assign or_ln3457_10_fu_1354_p2 = (tmpQ_10_fu_1336_p13 | 13'd1);

assign or_ln3457_11_fu_1438_p2 = (tmpQ_11_fu_1418_p14 | 14'd1);

assign or_ln3457_12_fu_1525_p2 = (tmpQ_12_fu_1503_p15 | 15'd1);

assign or_ln3457_13_fu_1609_p2 = (tmpQ_13_fu_1588_p16 | 16'd1);

assign or_ln3457_14_fu_1696_p2 = (tmpQ_14_fu_1673_p17 | 17'd1);

assign or_ln3457_1_fu_535_p2 = (tmpQ_1_fu_525_p4 | 4'd1);

assign or_ln3457_2_fu_622_p2 = (tmpQ_3_fu_610_p5 | 5'd1);

assign or_ln3457_3_fu_795_p2 = (tmpQ_4_fu_784_p6 | 6'd1);

assign or_ln3457_4_fu_872_p2 = (tmpQ_5_fu_859_p7 | 7'd1);

assign or_ln3457_5_fu_952_p2 = (tmpQ_6_fu_937_p8 | 8'd1);

assign or_ln3457_6_fu_1034_p2 = (tmpQ_7_fu_1017_p9 | 9'd1);

assign or_ln3457_7_fu_1112_p2 = (tmpQ_8_fu_1097_p10 | 10'd1);

assign or_ln3457_8_fu_1193_p2 = (tmpQ_9_fu_1176_p11 | 11'd1);

assign or_ln3457_9_fu_1273_p2 = (tmpQ_2_fu_1254_p12 | 12'd1);

assign or_ln3457_fu_450_p2 = (tmpQ_s_fu_442_p3 | 3'd1);

assign or_ln3467_10_fu_1370_p2 = (tmpQ_10_fu_1336_p13 | 13'd3);

assign or_ln3467_11_fu_1454_p2 = (tmpQ_11_fu_1418_p14 | 14'd3);

assign or_ln3467_12_fu_1541_p2 = (tmpQ_12_fu_1503_p15 | 15'd3);

assign or_ln3467_13_fu_1625_p2 = (tmpQ_13_fu_1588_p16 | 16'd3);

assign or_ln3467_14_fu_1712_p2 = (tmpQ_14_fu_1673_p17 | 17'd3);

assign or_ln3467_1_fu_551_p2 = (tmpQ_1_fu_525_p4 | 4'd3);

assign or_ln3467_2_fu_638_p2 = (tmpQ_3_fu_610_p5 | 5'd3);

assign or_ln3467_3_fu_811_p2 = (tmpQ_4_fu_784_p6 | 6'd3);

assign or_ln3467_4_fu_888_p2 = (tmpQ_5_fu_859_p7 | 7'd3);

assign or_ln3467_5_fu_968_p2 = (tmpQ_6_fu_937_p8 | 8'd3);

assign or_ln3467_6_fu_1050_p2 = (tmpQ_7_fu_1017_p9 | 9'd3);

assign or_ln3467_7_fu_1128_p2 = (tmpQ_8_fu_1097_p10 | 10'd3);

assign or_ln3467_8_fu_1209_p2 = (tmpQ_9_fu_1176_p11 | 11'd3);

assign or_ln3467_9_fu_1289_p2 = (tmpQ_2_fu_1254_p12 | 12'd3);

assign or_ln3467_fu_466_p2 = (tmpQ_s_fu_442_p3 | 3'd3);

assign p_1_fu_329_p3 = ((tmp_1_fu_315_p3[0:0] === 1'b1) ? sub_ln98_fu_323_p2 : gradx1_mat_4366_dout);

assign q_1_fu_351_p3 = ((tmp_3_fu_337_p3[0:0] === 1'b1) ? sub_ln99_fu_345_p2 : grady1_mat_4369_dout);

assign select_ln3450_10_fu_1386_p3 = ((tmp_14_reg_2068[0:0] === 1'b1) ? add_ln3469_10_fu_1380_p2 : sub_ln3459_10_fu_1364_p2);

assign select_ln3450_11_fu_1470_p3 = ((tmp_15_fu_1393_p3[0:0] === 1'b1) ? add_ln3469_11_fu_1464_p2 : sub_ln3459_11_fu_1448_p2);

assign select_ln3450_12_fu_1557_p3 = ((tmp_16_fu_1478_p3[0:0] === 1'b1) ? add_ln3469_12_fu_1551_p2 : sub_ln3459_12_fu_1535_p2);

assign select_ln3450_13_fu_1641_p3 = ((tmp_17_reg_2100[0:0] === 1'b1) ? add_ln3469_13_fu_1635_p2 : sub_ln3459_13_fu_1619_p2);

assign select_ln3450_14_fu_1744_p3 = ((tmp_18_fu_1648_p3[0:0] === 1'b1) ? tmp_19_fu_1728_p3 : tmp_20_fu_1736_p3);

assign select_ln3450_1_fu_567_p3 = ((tmp_5_fu_490_p3[0:0] === 1'b1) ? add_ln3469_1_fu_561_p2 : sub_ln3459_1_fu_545_p2);

assign select_ln3450_2_fu_654_p3 = ((tmp_6_fu_575_p3[0:0] === 1'b1) ? add_ln3469_2_fu_648_p2 : sub_ln3459_2_fu_632_p2);

assign select_ln3450_3_fu_827_p3 = ((tmp_7_reg_1914[0:0] === 1'b1) ? add_ln3469_3_fu_821_p2 : sub_ln3459_3_fu_805_p2);

assign select_ln3450_4_fu_904_p3 = ((tmp_8_fu_834_p3[0:0] === 1'b1) ? add_ln3469_4_fu_898_p2 : sub_ln3459_4_fu_882_p2);

assign select_ln3450_5_fu_984_p3 = ((tmp_9_fu_912_p3[0:0] === 1'b1) ? add_ln3469_5_fu_978_p2 : sub_ln3459_5_fu_962_p2);

assign select_ln3450_6_fu_1066_p3 = ((tmp_10_fu_992_p3[0:0] === 1'b1) ? add_ln3469_6_fu_1060_p2 : sub_ln3459_6_fu_1044_p2);

assign select_ln3450_7_fu_1144_p3 = ((tmp_11_reg_2032[0:0] === 1'b1) ? add_ln3469_7_fu_1138_p2 : sub_ln3459_7_fu_1122_p2);

assign select_ln3450_8_fu_1225_p3 = ((tmp_12_fu_1151_p3[0:0] === 1'b1) ? add_ln3469_8_fu_1219_p2 : sub_ln3459_8_fu_1203_p2);

assign select_ln3450_9_fu_1305_p3 = ((tmp_13_fu_1233_p3[0:0] === 1'b1) ? add_ln3469_9_fu_1299_p2 : sub_ln3459_9_fu_1283_p2);

assign select_ln3450_fu_482_p3 = ((icmp_ln3471_fu_378_p2[0:0] === 1'b1) ? sub_ln3459_fu_460_p2 : add_ln3469_fu_476_p2);

assign sext_ln105_fu_359_p1 = $signed(p_1_fu_329_p3);

assign sext_ln106_fu_363_p1 = $signed(q_1_reg_1831);

assign sub_ln3459_10_fu_1364_p2 = (R_1_10_fu_1330_p3 - zext_ln3459_10_fu_1360_p1);

assign sub_ln3459_11_fu_1448_p2 = (R_1_11_fu_1411_p3 - zext_ln3459_11_fu_1444_p1);

assign sub_ln3459_12_fu_1535_p2 = (R_1_12_fu_1496_p3 - zext_ln3459_12_fu_1531_p1);

assign sub_ln3459_13_fu_1619_p2 = (R_1_13_fu_1582_p3 - zext_ln3459_13_fu_1615_p1);

assign sub_ln3459_14_fu_1706_p2 = (R_1_14_fu_1666_p3 - zext_ln3459_14_fu_1702_p1);

assign sub_ln3459_1_fu_545_p2 = ($signed(R_1_2_cast_fu_521_p1) - $signed(zext_ln3459_1_fu_541_p1));

assign sub_ln3459_2_fu_632_p2 = ($signed(R_1_3_cast_fu_606_p1) - $signed(zext_ln3459_2_fu_628_p1));

assign sub_ln3459_3_fu_805_p2 = ($signed(R_1_4_cast_fu_780_p1) - $signed(zext_ln3459_3_fu_801_p1));

assign sub_ln3459_4_fu_882_p2 = ($signed(R_1_5_cast_fu_855_p1) - $signed(zext_ln3459_4_fu_878_p1));

assign sub_ln3459_5_fu_962_p2 = ($signed(R_1_6_cast_fu_933_p1) - $signed(zext_ln3459_5_fu_958_p1));

assign sub_ln3459_6_fu_1044_p2 = ($signed(R_1_7_cast_fu_1013_p1) - $signed(zext_ln3459_6_fu_1040_p1));

assign sub_ln3459_7_fu_1122_p2 = ($signed(R_1_8_cast_fu_1093_p1) - $signed(zext_ln3459_7_fu_1118_p1));

assign sub_ln3459_8_fu_1203_p2 = ($signed(R_1_9_cast_fu_1172_p1) - $signed(zext_ln3459_8_fu_1199_p1));

assign sub_ln3459_9_fu_1283_p2 = (R_1_s_fu_1247_p3 - zext_ln3459_9_fu_1279_p1);

assign sub_ln3459_fu_460_p2 = ($signed(R_1_1_cast_fu_438_p1) - $signed(zext_ln3459_fu_456_p1));

assign sub_ln98_fu_323_p2 = (16'd0 - gradx1_mat_4366_dout);

assign sub_ln99_fu_345_p2 = (16'd0 - grady1_mat_4369_dout);

assign tmpQ_10_fu_1336_p13 = {{{{{{{{{{{{icmp_ln3471_reg_1858_pp0_iter7_reg}, {xor_ln3471_reg_1875_pp0_iter7_reg}}, {xor_ln3471_1_reg_1892_pp0_iter7_reg}}, {xor_ln3471_2_reg_1975_pp0_iter7_reg}}, {xor_ln3471_3_reg_1988_pp0_iter7_reg}}, {xor_ln3471_4_reg_2001_pp0_iter7_reg}}, {xor_ln3471_5_reg_2014_pp0_iter7_reg}}, {xor_ln3471_6_reg_2038}}, {xor_ln3471_7_reg_2048}}, {xor_ln3471_8_reg_2058}}, {xor_ln3471_9_fu_1325_p2}}, {2'd0}};

assign tmpQ_11_fu_1418_p14 = {{{{{{{{{{{{{icmp_ln3471_reg_1858_pp0_iter7_reg}, {xor_ln3471_reg_1875_pp0_iter7_reg}}, {xor_ln3471_1_reg_1892_pp0_iter7_reg}}, {xor_ln3471_2_reg_1975_pp0_iter7_reg}}, {xor_ln3471_3_reg_1988_pp0_iter7_reg}}, {xor_ln3471_4_reg_2001_pp0_iter7_reg}}, {xor_ln3471_5_reg_2014_pp0_iter7_reg}}, {xor_ln3471_6_reg_2038}}, {xor_ln3471_7_reg_2048}}, {xor_ln3471_8_reg_2058}}, {xor_ln3471_9_fu_1325_p2}}, {xor_ln3471_10_fu_1401_p2}}, {2'd0}};

assign tmpQ_12_fu_1503_p15 = {{{{{{{{{{{{{{icmp_ln3471_reg_1858_pp0_iter7_reg}, {xor_ln3471_reg_1875_pp0_iter7_reg}}, {xor_ln3471_1_reg_1892_pp0_iter7_reg}}, {xor_ln3471_2_reg_1975_pp0_iter7_reg}}, {xor_ln3471_3_reg_1988_pp0_iter7_reg}}, {xor_ln3471_4_reg_2001_pp0_iter7_reg}}, {xor_ln3471_5_reg_2014_pp0_iter7_reg}}, {xor_ln3471_6_reg_2038}}, {xor_ln3471_7_reg_2048}}, {xor_ln3471_8_reg_2058}}, {xor_ln3471_9_fu_1325_p2}}, {xor_ln3471_10_fu_1401_p2}}, {xor_ln3471_11_fu_1486_p2}}, {2'd0}};

assign tmpQ_13_fu_1588_p16 = {{{{{{{{{{{{{{{icmp_ln3471_reg_1858_pp0_iter8_reg}, {xor_ln3471_reg_1875_pp0_iter8_reg}}, {xor_ln3471_1_reg_1892_pp0_iter8_reg}}, {xor_ln3471_2_reg_1975_pp0_iter8_reg}}, {xor_ln3471_3_reg_1988_pp0_iter8_reg}}, {xor_ln3471_4_reg_2001_pp0_iter8_reg}}, {xor_ln3471_5_reg_2014_pp0_iter8_reg}}, {xor_ln3471_6_reg_2038_pp0_iter8_reg}}, {xor_ln3471_7_reg_2048_pp0_iter8_reg}}, {xor_ln3471_8_reg_2058_pp0_iter8_reg}}, {xor_ln3471_9_reg_2079}}, {xor_ln3471_10_reg_2086}}, {xor_ln3471_11_reg_2093}}, {xor_ln3471_12_fu_1577_p2}}, {2'd0}};

assign tmpQ_14_fu_1673_p17 = {{{{{{{{{{{{{{{{icmp_ln3471_reg_1858_pp0_iter8_reg}, {xor_ln3471_reg_1875_pp0_iter8_reg}}, {xor_ln3471_1_reg_1892_pp0_iter8_reg}}, {xor_ln3471_2_reg_1975_pp0_iter8_reg}}, {xor_ln3471_3_reg_1988_pp0_iter8_reg}}, {xor_ln3471_4_reg_2001_pp0_iter8_reg}}, {xor_ln3471_5_reg_2014_pp0_iter8_reg}}, {xor_ln3471_6_reg_2038_pp0_iter8_reg}}, {xor_ln3471_7_reg_2048_pp0_iter8_reg}}, {xor_ln3471_8_reg_2058_pp0_iter8_reg}}, {xor_ln3471_9_reg_2079}}, {xor_ln3471_10_reg_2086}}, {xor_ln3471_11_reg_2093}}, {xor_ln3471_12_fu_1577_p2}}, {xor_ln3471_13_fu_1656_p2}}, {2'd0}};

assign tmpQ_1_fu_525_p4 = {{{icmp_ln3471_fu_378_p2}, {xor_ln3471_fu_498_p2}}, {2'd0}};

assign tmpQ_2_fu_1254_p12 = {{{{{{{{{{{icmp_ln3471_reg_1858_pp0_iter6_reg}, {xor_ln3471_reg_1875_pp0_iter6_reg}}, {xor_ln3471_1_reg_1892_pp0_iter6_reg}}, {xor_ln3471_2_reg_1975}}, {xor_ln3471_3_reg_1988}}, {xor_ln3471_4_reg_2001}}, {xor_ln3471_5_reg_2014}}, {xor_ln3471_6_fu_1082_p2}}, {xor_ln3471_7_fu_1159_p2}}, {xor_ln3471_8_fu_1241_p2}}, {2'd0}};

assign tmpQ_3_fu_610_p5 = {{{{icmp_ln3471_fu_378_p2}, {xor_ln3471_fu_498_p2}}, {xor_ln3471_1_fu_583_p2}}, {2'd0}};

assign tmpQ_4_fu_784_p6 = {{{{{icmp_ln3471_reg_1858}, {xor_ln3471_reg_1875}}, {xor_ln3471_1_reg_1892}}, {xor_ln3471_2_fu_769_p2}}, {2'd0}};

assign tmpQ_5_fu_859_p7 = {{{{{{icmp_ln3471_reg_1858}, {xor_ln3471_reg_1875}}, {xor_ln3471_1_reg_1892}}, {xor_ln3471_2_fu_769_p2}}, {xor_ln3471_3_fu_842_p2}}, {2'd0}};

assign tmpQ_6_fu_937_p8 = {{{{{{{icmp_ln3471_reg_1858}, {xor_ln3471_reg_1875}}, {xor_ln3471_1_reg_1892}}, {xor_ln3471_2_fu_769_p2}}, {xor_ln3471_3_fu_842_p2}}, {xor_ln3471_4_fu_920_p2}}, {2'd0}};

assign tmpQ_7_fu_1017_p9 = {{{{{{{{icmp_ln3471_reg_1858}, {xor_ln3471_reg_1875}}, {xor_ln3471_1_reg_1892}}, {xor_ln3471_2_fu_769_p2}}, {xor_ln3471_3_fu_842_p2}}, {xor_ln3471_4_fu_920_p2}}, {xor_ln3471_5_fu_1000_p2}}, {2'd0}};

assign tmpQ_8_fu_1097_p10 = {{{{{{{{{icmp_ln3471_reg_1858_pp0_iter6_reg}, {xor_ln3471_reg_1875_pp0_iter6_reg}}, {xor_ln3471_1_reg_1892_pp0_iter6_reg}}, {xor_ln3471_2_reg_1975}}, {xor_ln3471_3_reg_1988}}, {xor_ln3471_4_reg_2001}}, {xor_ln3471_5_reg_2014}}, {xor_ln3471_6_fu_1082_p2}}, {2'd0}};

assign tmpQ_9_fu_1176_p11 = {{{{{{{{{{icmp_ln3471_reg_1858_pp0_iter6_reg}, {xor_ln3471_reg_1875_pp0_iter6_reg}}, {xor_ln3471_1_reg_1892_pp0_iter6_reg}}, {xor_ln3471_2_reg_1975}}, {xor_ln3471_3_reg_1988}}, {xor_ln3471_4_reg_2001}}, {xor_ln3471_5_reg_2014}}, {xor_ln3471_6_fu_1082_p2}}, {xor_ln3471_7_fu_1159_p2}}, {2'd0}};

assign tmpQ_s_fu_442_p3 = {{icmp_ln3471_fu_378_p2}, {2'd0}};

assign tmpR_1_fu_414_p2 = ($signed(5'd28) + $signed(R_2_0_cast_fu_410_p1));

assign tmp_10_fu_992_p3 = select_ln3450_5_fu_984_p3[32'd20];

assign tmp_12_fu_1151_p3 = select_ln3450_7_fu_1144_p3[32'd26];

assign tmp_13_cast_fu_384_p4 = {{grp_fu_1788_p3[29:28]}};

assign tmp_13_fu_1233_p3 = select_ln3450_8_fu_1225_p3[32'd29];

assign tmp_15_fu_1393_p3 = select_ln3450_10_fu_1386_p3[32'd31];

assign tmp_16_fu_1478_p3 = select_ln3450_11_fu_1470_p3[32'd31];

assign tmp_18_fu_1648_p3 = select_ln3450_13_fu_1641_p3[32'd31];

assign tmp_19_fu_1728_p3 = add_ln3469_14_fu_1722_p2[32'd31];

assign tmp_1_fu_315_p3 = gradx1_mat_4366_dout[32'd15];

assign tmp_20_fu_1736_p3 = sub_ln3459_14_fu_1706_p2[32'd31];

assign tmp_2_cast_fu_504_p4 = {{grp_fu_1788_p3[27:26]}};

assign tmp_2_fu_393_p4 = {{grp_fu_1788_p3[31:30]}};

assign tmp_3_cast_fu_589_p4 = {{grp_fu_1788_p3[25:24]}};

assign tmp_3_fu_337_p3 = grady1_mat_4369_dout[32'd15];

assign tmp_4_fu_369_p4 = {{grp_fu_1788_p3[31:30]}};

assign tmp_5_fu_490_p3 = select_ln3450_fu_482_p3[32'd5];

assign tmp_6_fu_575_p3 = select_ln3450_1_fu_567_p3[32'd8];

assign tmp_8_fu_834_p3 = select_ln3450_3_fu_827_p3[32'd14];

assign tmp_9_fu_912_p3 = select_ln3450_4_fu_904_p3[32'd17];

assign tmp_fu_420_p4 = {{tmpR_1_fu_414_p2[4:2]}};

assign trunc_ln67_fu_366_p1 = grp_fu_1788_p3[1:0];

assign xor_ln3471_10_fu_1401_p2 = (tmp_15_fu_1393_p3 ^ 1'd1);

assign xor_ln3471_11_fu_1486_p2 = (tmp_16_fu_1478_p3 ^ 1'd1);

assign xor_ln3471_12_fu_1577_p2 = (tmp_17_reg_2100 ^ 1'd1);

assign xor_ln3471_13_fu_1656_p2 = (tmp_18_fu_1648_p3 ^ 1'd1);

assign xor_ln3471_14_fu_1752_p2 = (select_ln3450_14_fu_1744_p3 ^ 1'd1);

assign xor_ln3471_1_fu_583_p2 = (tmp_6_fu_575_p3 ^ 1'd1);

assign xor_ln3471_2_fu_769_p2 = (tmp_7_reg_1914 ^ 1'd1);

assign xor_ln3471_3_fu_842_p2 = (tmp_8_fu_834_p3 ^ 1'd1);

assign xor_ln3471_4_fu_920_p2 = (tmp_9_fu_912_p3 ^ 1'd1);

assign xor_ln3471_5_fu_1000_p2 = (tmp_10_fu_992_p3 ^ 1'd1);

assign xor_ln3471_6_fu_1082_p2 = (tmp_11_reg_2032 ^ 1'd1);

assign xor_ln3471_7_fu_1159_p2 = (tmp_12_fu_1151_p3 ^ 1'd1);

assign xor_ln3471_8_fu_1241_p2 = (tmp_13_fu_1233_p3 ^ 1'd1);

assign xor_ln3471_9_fu_1325_p2 = (tmp_14_reg_2068 ^ 1'd1);

assign xor_ln3471_fu_498_p2 = (tmp_5_fu_490_p3 ^ 1'd1);

assign zext_ln3459_10_fu_1360_p1 = or_ln3457_10_fu_1354_p2;

assign zext_ln3459_11_fu_1444_p1 = or_ln3457_11_fu_1438_p2;

assign zext_ln3459_12_fu_1531_p1 = or_ln3457_12_fu_1525_p2;

assign zext_ln3459_13_fu_1615_p1 = or_ln3457_13_fu_1609_p2;

assign zext_ln3459_14_fu_1702_p1 = or_ln3457_14_fu_1696_p2;

assign zext_ln3459_1_fu_541_p1 = or_ln3457_1_fu_535_p2;

assign zext_ln3459_2_fu_628_p1 = or_ln3457_2_fu_622_p2;

assign zext_ln3459_3_fu_801_p1 = or_ln3457_3_fu_795_p2;

assign zext_ln3459_4_fu_878_p1 = or_ln3457_4_fu_872_p2;

assign zext_ln3459_5_fu_958_p1 = or_ln3457_5_fu_952_p2;

assign zext_ln3459_6_fu_1040_p1 = or_ln3457_6_fu_1034_p2;

assign zext_ln3459_7_fu_1118_p1 = or_ln3457_7_fu_1112_p2;

assign zext_ln3459_8_fu_1199_p1 = or_ln3457_8_fu_1193_p2;

assign zext_ln3459_9_fu_1279_p1 = or_ln3457_9_fu_1273_p2;

assign zext_ln3459_fu_456_p1 = or_ln3457_fu_450_p2;

assign zext_ln3469_10_fu_1376_p1 = or_ln3467_10_fu_1370_p2;

assign zext_ln3469_11_fu_1460_p1 = or_ln3467_11_fu_1454_p2;

assign zext_ln3469_12_fu_1547_p1 = or_ln3467_12_fu_1541_p2;

assign zext_ln3469_13_fu_1631_p1 = or_ln3467_13_fu_1625_p2;

assign zext_ln3469_14_fu_1718_p1 = or_ln3467_14_fu_1712_p2;

assign zext_ln3469_1_fu_557_p1 = or_ln3467_1_fu_551_p2;

assign zext_ln3469_2_fu_644_p1 = or_ln3467_2_fu_638_p2;

assign zext_ln3469_3_fu_817_p1 = or_ln3467_3_fu_811_p2;

assign zext_ln3469_4_fu_894_p1 = or_ln3467_4_fu_888_p2;

assign zext_ln3469_5_fu_974_p1 = or_ln3467_5_fu_968_p2;

assign zext_ln3469_6_fu_1056_p1 = or_ln3467_6_fu_1050_p2;

assign zext_ln3469_7_fu_1134_p1 = or_ln3467_7_fu_1128_p2;

assign zext_ln3469_8_fu_1215_p1 = or_ln3467_8_fu_1209_p2;

assign zext_ln3469_9_fu_1295_p1 = or_ln3467_9_fu_1289_p2;

assign zext_ln3469_fu_472_p1 = or_ln3467_fu_466_p2;

endmodule //edge_canny_detector_xFMagnitudeKernel_2_2_1080_1920_3_3_1_5_5_1920_5760_s
