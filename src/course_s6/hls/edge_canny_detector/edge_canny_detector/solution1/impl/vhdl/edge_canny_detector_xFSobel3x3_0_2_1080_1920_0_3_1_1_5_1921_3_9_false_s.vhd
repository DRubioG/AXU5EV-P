-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity edge_canny_detector_xFSobel3x3_0_2_1080_1920_0_3_1_1_5_1921_3_9_false_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    gaussian_mat_4364_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    gaussian_mat_4364_empty_n : IN STD_LOGIC;
    gaussian_mat_4364_read : OUT STD_LOGIC;
    gradx_mat_4365_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    gradx_mat_4365_full_n : IN STD_LOGIC;
    gradx_mat_4365_write : OUT STD_LOGIC;
    grady_mat_4368_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    grady_mat_4368_full_n : IN STD_LOGIC;
    grady_mat_4368_write : OUT STD_LOGIC );
end;


architecture behav of edge_canny_detector_xFSobel3x3_0_2_1080_1920_0_3_1_1_5_1921_3_9_false_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv11_439 : STD_LOGIC_VECTOR (10 downto 0) := "10000111001";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv11_437 : STD_LOGIC_VECTOR (10 downto 0) := "10000110111";
    constant ap_const_lv12_BC9 : STD_LOGIC_VECTOR (11 downto 0) := "101111001001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv11_781 : STD_LOGIC_VECTOR (10 downto 0) := "11110000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gaussian_mat_4364_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal icmp_ln882_5_reg_1071 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln203_reg_1087 : STD_LOGIC_VECTOR (0 downto 0);
    signal gradx_mat_4365_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal icmp_ln882_5_reg_1071_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_reg_1109 : STD_LOGIC_VECTOR (0 downto 0);
    signal grady_mat_4368_blk_n : STD_LOGIC;
    signal empty_reg_275 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_46_reg_287 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_49_reg_343 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_49_reg_343_pp3_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state12_pp3_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op133_read_state13 : BOOLEAN;
    signal ap_block_state13_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state14_pp3_stage0_iter2 : BOOLEAN;
    signal ap_predicate_op205_write_state15 : BOOLEAN;
    signal ap_predicate_op206_write_state15 : BOOLEAN;
    signal ap_block_state15_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal src_buf_V_2_0_reg_355 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_0_0_reg_366 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_2_3_reg_377 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_0_0_reg_388 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_2_3_reg_399 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_0_0_reg_410 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_ind_V_0_0_load_reg_954 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_ind_V_1_0_load_reg_959 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_2_0_load_reg_966 : STD_LOGIC_VECTOR (12 downto 0);
    signal init_row_ind_fu_472_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln538_fu_497_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal wide_trip_count_fu_500_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal wide_trip_count_reg_985 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln882_2_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln324_fu_508_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln324_reg_994 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln324_1_fu_512_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln324_1_reg_998 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln882_3_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_3_reg_1003 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal add_ln695_fu_521_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln695_reg_1007 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal add_ln456_fu_534_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln882_4_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_4_reg_1017 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state8_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal add_ln695_6_fu_546_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal buf_0_V_addr_1_reg_1026 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln485_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal cmp_i_i326_i_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i326_i_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_i239_i_fu_603_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_i239_i_reg_1051 : STD_LOGIC_VECTOR (1 downto 0);
    signal spec_select971_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal spec_select971_reg_1056 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln324_2_fu_621_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln324_2_reg_1061 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln324_3_fu_625_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln324_3_reg_1066 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln882_5_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_5_reg_1071_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_8_fu_635_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln695_8_reg_1075 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal icmp_ln882_6_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_6_reg_1080 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_6_reg_1080_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_6_reg_1080_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln203_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_V_1_1_fu_748_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_1_fu_756_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_2_0_2_fu_764_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln695_7_fu_930_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state5 : STD_LOGIC;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_ind_V_0_2_reg_254 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln882_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal init_buf_reg_265 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_empty_phi_fu_279_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_ind_V_2_reg_319 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_1_1_reg_298 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal row_ind_V_0_reg_308 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_47_reg_331 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_empty_49_phi_fu_347_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_449_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_V_1_0_1_phi_fu_425_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_V_0_0_11_phi_fu_437_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_421 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter3_src_buf_V_0_0_11_reg_433 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp3_iter3_storemerge_reg_445 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln538_3_fu_527_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i101_fu_552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal zext_ln538_4_fu_652_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i180_i_fu_663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal row_ind_V_0_0_fu_96 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln304_fu_478_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_1_0_fu_100 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_2_0_fu_104 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal empty_50_fu_659_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_559_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast_fu_589_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_48_fu_593_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_i_i256_i_fu_597_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal cmp_i_i282_i_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i227_i_2_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_698_p5 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_fu_713_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_729_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_713_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_729_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_1_2_fu_687_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_V_0_2_fu_676_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_52_fu_741_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_772_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1501_1_fu_784_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1350_1_fu_800_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1350_fu_796_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1350_3_fu_814_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1350_2_fu_810_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1350_fu_804_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1350_1_fu_818_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_fu_792_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln79_fu_780_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln69_fu_832_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln69_fu_838_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln69_fu_824_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln69_fu_842_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln69_1_fu_828_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln69_1_fu_848_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1501_2_fu_859_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1501_3_fu_871_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1350_2_fu_883_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1350_3_fu_889_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln69_2_fu_895_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln69_3_fu_899_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln69_2_fu_903_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln69_1_fu_909_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln79_1_fu_867_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln69_3_fu_913_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1350_4_fu_879_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln69_1_fu_919_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;

    component edge_canny_detector_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component edge_canny_detector_mux_32_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => gaussian_mat_4364_dout);

    buf_2_V_U : component edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => gaussian_mat_4364_dout);

    mux_32_8_1_1_U30 : component edge_canny_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln324_1_reg_998,
        dout => tmp_fu_559_p5);

    mux_32_8_1_1_U31 : component edge_canny_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln324_2_reg_1061,
        dout => src_buf_V_0_2_fu_676_p5);

    mux_32_8_1_1_U32 : component edge_canny_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln324_3_reg_1066,
        dout => src_buf_V_1_2_fu_687_p5);

    mux_32_13_1_1_U33 : component edge_canny_detector_mux_32_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 13,
        din3_WIDTH => 2,
        dout_WIDTH => 13)
    port map (
        din0 => row_ind_V_2_reg_319,
        din1 => row_ind_V_0_reg_308,
        din2 => row_ind_V_1_1_reg_298,
        din3 => sub_i239_i_reg_1051,
        dout => tmp_s_fu_698_p5);

    mux_32_8_1_1_U34 : component edge_canny_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => tmp_1_fu_713_p4,
        dout => tmp_1_fu_713_p5);

    mux_32_8_1_1_U35 : component edge_canny_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => tmp_2_fu_729_p4,
        dout => tmp_2_fu_729_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_2_fu_503_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state5);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_2_fu_503_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_2_fu_503_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state8);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_2_fu_503_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp3_flush_enable)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln485_fu_571_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                elsif (((icmp_ln485_fu_571_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_46_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_2_fu_503_p2 = ap_const_lv1_0))) then 
                empty_46_reg_287 <= ap_const_lv11_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln882_4_fu_540_p2 = ap_const_lv1_0))) then 
                empty_46_reg_287 <= add_ln695_6_fu_546_p2;
            end if; 
        end if;
    end process;

    empty_47_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                empty_47_reg_331 <= ap_const_lv11_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                empty_47_reg_331 <= add_ln695_7_fu_930_p2;
            end if; 
        end if;
    end process;

    empty_49_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_5_reg_1071 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                empty_49_reg_343 <= add_ln695_8_reg_1075;
            elsif (((icmp_ln485_fu_571_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                empty_49_reg_343 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    empty_reg_275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln882_3_reg_1003 = ap_const_lv1_0))) then 
                empty_reg_275 <= add_ln695_reg_1007;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_2_fu_503_p2 = ap_const_lv1_1))) then 
                empty_reg_275 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    init_buf_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                init_buf_reg_265 <= zext_ln538_fu_497_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                init_buf_reg_265 <= add_ln456_fu_534_p2;
            end if; 
        end if;
    end process;

    row_ind_V_0_2_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_fu_466_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                row_ind_V_0_2_reg_254 <= init_row_ind_fu_472_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                row_ind_V_0_2_reg_254 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    row_ind_V_0_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                row_ind_V_0_reg_308 <= row_ind_V_1_0_load_reg_959;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                row_ind_V_0_reg_308 <= row_ind_V_1_1_reg_298;
            end if; 
        end if;
    end process;

    row_ind_V_1_1_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                row_ind_V_1_1_reg_298 <= row_ind_V_2_0_load_reg_966;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                row_ind_V_1_1_reg_298 <= row_ind_V_2_reg_319;
            end if; 
        end if;
    end process;

    row_ind_V_2_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                row_ind_V_2_reg_319 <= row_ind_V_0_0_load_reg_954;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                row_ind_V_2_reg_319 <= row_ind_V_0_reg_308;
            end if; 
        end if;
    end process;

    src_buf_V_0_0_0_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                src_buf_V_0_0_0_reg_410 <= ap_phi_mux_src_buf_V_0_0_11_phi_fu_437_p4;
            elsif (((icmp_ln485_fu_571_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                src_buf_V_0_0_0_reg_410 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_V_0_2_3_reg_399_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                src_buf_V_0_2_3_reg_399 <= src_buf_V_0_1_fu_756_p3;
            elsif (((icmp_ln485_fu_571_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                src_buf_V_0_2_3_reg_399 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_V_1_0_0_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                src_buf_V_1_0_0_reg_388 <= ap_phi_mux_src_buf_V_1_0_1_phi_fu_425_p4;
            elsif (((icmp_ln485_fu_571_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                src_buf_V_1_0_0_reg_388 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_V_1_2_3_reg_377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                src_buf_V_1_2_3_reg_377 <= src_buf_V_1_1_fu_748_p3;
            elsif (((icmp_ln485_fu_571_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                src_buf_V_1_2_3_reg_377 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_V_2_0_0_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                src_buf_V_2_0_0_reg_366 <= ap_phi_mux_storemerge_phi_fu_449_p4;
            elsif (((icmp_ln485_fu_571_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                src_buf_V_2_0_0_reg_366 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_V_2_0_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                src_buf_V_2_0_reg_355 <= src_buf_V_2_0_2_fu_764_p3;
            elsif (((icmp_ln485_fu_571_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                src_buf_V_2_0_reg_355 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                add_ln695_8_reg_1075 <= add_ln695_8_fu_635_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                add_ln695_reg_1007 <= add_ln695_fu_521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln882_5_fu_629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                and_ln203_reg_1087 <= and_ln203_fu_647_p2;
                icmp_ln882_6_reg_1080 <= icmp_ln882_6_fu_641_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln882_4_fu_540_p2 = ap_const_lv1_0))) then
                buf_0_V_addr_1_reg_1026 <= conv_i101_fu_552_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln485_fu_571_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                cmp_i_i326_i_reg_1046 <= cmp_i_i326_i_fu_577_p2;
                spec_select971_reg_1056 <= spec_select971_fu_615_p2;
                sub_i239_i_reg_1051 <= sub_i239_i_fu_603_p2;
                trunc_ln324_2_reg_1061 <= trunc_ln324_2_fu_621_p1;
                trunc_ln324_3_reg_1066 <= trunc_ln324_3_fu_625_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                empty_49_reg_343_pp3_iter1_reg <= empty_49_reg_343;
                icmp_ln882_5_reg_1071 <= icmp_ln882_5_fu_629_p2;
                icmp_ln882_5_reg_1071_pp3_iter1_reg <= icmp_ln882_5_reg_1071;
                icmp_ln882_6_reg_1080_pp3_iter1_reg <= icmp_ln882_6_reg_1080;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln882_3_reg_1003 <= icmp_ln882_3_fu_515_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln882_4_reg_1017 <= icmp_ln882_4_fu_540_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                icmp_ln882_5_reg_1071_pp3_iter2_reg <= icmp_ln882_5_reg_1071_pp3_iter1_reg;
                icmp_ln882_6_reg_1080_pp3_iter2_reg <= icmp_ln882_6_reg_1080_pp3_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln882_5_reg_1071_pp3_iter1_reg = ap_const_lv1_0))) then
                icmp_ln886_reg_1109 <= icmp_ln886_fu_670_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_fu_466_p2 = ap_const_lv1_0) and (ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_V_0_0_fu_96(1 downto 0) <= zext_ln304_fu_478_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    row_ind_V_0_0_load_reg_954(1 downto 0) <= row_ind_V_0_0_fu_96(1 downto 0);
                    row_ind_V_1_0_load_reg_959(1 downto 0) <= row_ind_V_1_0_fu_100(1 downto 0);
                    row_ind_V_2_0_load_reg_966(1 downto 0) <= row_ind_V_2_0_fu_104(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_fu_466_p2 = ap_const_lv1_0) and (ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_V_1_0_fu_100(1 downto 0) <= zext_ln304_fu_478_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 = ap_const_lv2_1)) and not((ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 = ap_const_lv2_0)) and (icmp_ln882_fu_466_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_V_2_0_fu_104(1 downto 0) <= zext_ln304_fu_478_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_2_fu_503_p2 = ap_const_lv1_0))) then
                trunc_ln324_1_reg_998 <= trunc_ln324_1_fu_512_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_2_fu_503_p2 = ap_const_lv1_1))) then
                trunc_ln324_reg_994 <= trunc_ln324_fu_508_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    wide_trip_count_reg_985(1 downto 0) <= wide_trip_count_fu_500_p1(1 downto 0);
            end if;
        end if;
    end process;
    row_ind_V_0_0_load_reg_954(12 downto 2) <= "00000000000";
    row_ind_V_1_0_load_reg_959(12 downto 2) <= "00000000000";
    row_ind_V_2_0_load_reg_966(12 downto 2) <= "00000000000";
    wide_trip_count_reg_985(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    row_ind_V_0_0_fu_96(12 downto 2) <= "00000000000";
    row_ind_V_1_0_fu_100(12 downto 2) <= "00000000000";
    row_ind_V_2_0_fu_104(12 downto 2) <= "00000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp3_iter3, ap_CS_fsm_state2, icmp_ln882_2_fu_503_p2, ap_CS_fsm_state4, icmp_ln882_3_fu_515_p2, ap_enable_reg_pp1_iter0, icmp_ln882_4_fu_540_p2, ap_enable_reg_pp2_iter0, icmp_ln485_fu_571_p2, ap_CS_fsm_state11, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter2, icmp_ln882_fu_466_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln882_fu_466_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln882_2_fu_503_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln882_3_fu_515_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln882_3_fu_515_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln882_4_fu_540_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln882_4_fu_540_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln485_fu_571_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln1350_1_fu_818_p2 <= std_logic_vector(unsigned(zext_ln1350_3_fu_814_p1) + unsigned(zext_ln1350_2_fu_810_p1));
    add_ln1350_2_fu_883_p2 <= std_logic_vector(unsigned(zext_ln1350_3_fu_814_p1) + unsigned(zext_ln1350_1_fu_800_p1));
    add_ln1350_3_fu_889_p2 <= std_logic_vector(unsigned(zext_ln1350_2_fu_810_p1) + unsigned(zext_ln1350_fu_796_p1));
    add_ln1350_fu_804_p2 <= std_logic_vector(unsigned(zext_ln1350_1_fu_800_p1) + unsigned(zext_ln1350_fu_796_p1));
    add_ln456_fu_534_p2 <= std_logic_vector(unsigned(init_buf_reg_265) + unsigned(ap_const_lv64_1));
    add_ln695_6_fu_546_p2 <= std_logic_vector(unsigned(empty_46_reg_287) + unsigned(ap_const_lv11_1));
    add_ln695_7_fu_930_p2 <= std_logic_vector(unsigned(empty_47_reg_331) + unsigned(ap_const_lv11_1));
    add_ln695_8_fu_635_p2 <= std_logic_vector(unsigned(ap_phi_mux_empty_49_phi_fu_347_p4) + unsigned(ap_const_lv11_1));
    add_ln695_fu_521_p2 <= std_logic_vector(unsigned(ap_phi_mux_empty_phi_fu_279_p4) + unsigned(ap_const_lv11_1));
    add_ln69_1_fu_919_p2 <= std_logic_vector(unsigned(sub_ln69_3_fu_913_p2) + unsigned(zext_ln1350_4_fu_879_p1));
    add_ln69_fu_842_p2 <= std_logic_vector(signed(sext_ln69_fu_838_p1) + signed(zext_ln69_fu_824_p1));
    and_ln203_fu_647_p2 <= (icmp_ln882_6_fu_641_p2 and cmp_i_i326_i_reg_1046);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(7);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state16 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(gaussian_mat_4364_empty_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (gaussian_mat_4364_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(gaussian_mat_4364_empty_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (gaussian_mat_4364_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(gaussian_mat_4364_empty_n, gradx_mat_4365_full_n, grady_mat_4368_full_n, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, ap_predicate_op133_read_state13, ap_predicate_op205_write_state15, ap_predicate_op206_write_state15)
    begin
                ap_block_pp3_stage0_01001 <= (((ap_predicate_op133_read_state13 = ap_const_boolean_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (gaussian_mat_4364_empty_n = ap_const_logic_0)) or ((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (((grady_mat_4368_full_n = ap_const_logic_0) and (ap_predicate_op206_write_state15 = ap_const_boolean_1)) or ((gradx_mat_4365_full_n = ap_const_logic_0) and (ap_predicate_op205_write_state15 = ap_const_boolean_1)))));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(gaussian_mat_4364_empty_n, gradx_mat_4365_full_n, grady_mat_4368_full_n, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, ap_predicate_op133_read_state13, ap_predicate_op205_write_state15, ap_predicate_op206_write_state15)
    begin
                ap_block_pp3_stage0_11001 <= (((ap_predicate_op133_read_state13 = ap_const_boolean_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (gaussian_mat_4364_empty_n = ap_const_logic_0)) or ((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (((grady_mat_4368_full_n = ap_const_logic_0) and (ap_predicate_op206_write_state15 = ap_const_boolean_1)) or ((gradx_mat_4365_full_n = ap_const_logic_0) and (ap_predicate_op205_write_state15 = ap_const_boolean_1)))));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(gaussian_mat_4364_empty_n, gradx_mat_4365_full_n, grady_mat_4368_full_n, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, ap_predicate_op133_read_state13, ap_predicate_op205_write_state15, ap_predicate_op206_write_state15)
    begin
                ap_block_pp3_stage0_subdone <= (((ap_predicate_op133_read_state13 = ap_const_boolean_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (gaussian_mat_4364_empty_n = ap_const_logic_0)) or ((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (((grady_mat_4368_full_n = ap_const_logic_0) and (ap_predicate_op206_write_state15 = ap_const_boolean_1)) or ((gradx_mat_4365_full_n = ap_const_logic_0) and (ap_predicate_op205_write_state15 = ap_const_boolean_1)))));
    end process;

        ap_block_state12_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp3_stage0_iter1_assign_proc : process(gaussian_mat_4364_empty_n, ap_predicate_op133_read_state13)
    begin
                ap_block_state13_pp3_stage0_iter1 <= ((ap_predicate_op133_read_state13 = ap_const_boolean_1) and (gaussian_mat_4364_empty_n = ap_const_logic_0));
    end process;

        ap_block_state14_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_pp3_stage0_iter3_assign_proc : process(gradx_mat_4365_full_n, grady_mat_4368_full_n, ap_predicate_op205_write_state15, ap_predicate_op206_write_state15)
    begin
                ap_block_state15_pp3_stage0_iter3 <= (((grady_mat_4368_full_n = ap_const_logic_0) and (ap_predicate_op206_write_state15 = ap_const_boolean_1)) or ((gradx_mat_4365_full_n = ap_const_logic_0) and (ap_predicate_op205_write_state15 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp1_stage0_iter1_assign_proc : process(gaussian_mat_4364_empty_n)
    begin
                ap_block_state6_pp1_stage0_iter1 <= (gaussian_mat_4364_empty_n = ap_const_logic_0);
    end process;

        ap_block_state8_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state5_assign_proc : process(icmp_ln882_3_fu_515_p2)
    begin
        if ((icmp_ln882_3_fu_515_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state8_assign_proc : process(icmp_ln882_4_fu_540_p2)
    begin
        if ((icmp_ln882_4_fu_540_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_flush_enable_assign_proc : process(ap_CS_fsm_pp3_stage0, icmp_ln882_5_fu_629_p2, ap_block_pp3_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln882_5_fu_629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_condition_pp3_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp3_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln485_fu_571_p2, ap_CS_fsm_state11)
    begin
        if ((((icmp_ln485_fu_571_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_empty_49_phi_fu_347_p4_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, icmp_ln882_5_reg_1071, empty_49_reg_343, add_ln695_8_reg_1075)
    begin
        if (((icmp_ln882_5_reg_1071 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_phi_mux_empty_49_phi_fu_347_p4 <= add_ln695_8_reg_1075;
        else 
            ap_phi_mux_empty_49_phi_fu_347_p4 <= empty_49_reg_343;
        end if; 
    end process;


    ap_phi_mux_empty_phi_fu_279_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, empty_reg_275, icmp_ln882_3_reg_1003, add_ln695_reg_1007)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln882_3_reg_1003 = ap_const_lv1_0))) then 
            ap_phi_mux_empty_phi_fu_279_p4 <= add_ln695_reg_1007;
        else 
            ap_phi_mux_empty_phi_fu_279_p4 <= empty_reg_275;
        end if; 
    end process;

    ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 <= row_ind_V_0_2_reg_254;

    ap_phi_mux_src_buf_V_0_0_11_phi_fu_437_p4_assign_proc : process(icmp_ln882_5_reg_1071_pp3_iter2_reg, icmp_ln886_reg_1109, src_buf_V_0_2_3_reg_399, src_buf_V_0_1_fu_756_p3, ap_phi_reg_pp3_iter3_src_buf_V_0_0_11_reg_433)
    begin
        if ((icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0)) then
            if ((icmp_ln886_reg_1109 = ap_const_lv1_1)) then 
                ap_phi_mux_src_buf_V_0_0_11_phi_fu_437_p4 <= src_buf_V_0_1_fu_756_p3;
            elsif ((icmp_ln886_reg_1109 = ap_const_lv1_0)) then 
                ap_phi_mux_src_buf_V_0_0_11_phi_fu_437_p4 <= src_buf_V_0_2_3_reg_399;
            else 
                ap_phi_mux_src_buf_V_0_0_11_phi_fu_437_p4 <= ap_phi_reg_pp3_iter3_src_buf_V_0_0_11_reg_433;
            end if;
        else 
            ap_phi_mux_src_buf_V_0_0_11_phi_fu_437_p4 <= ap_phi_reg_pp3_iter3_src_buf_V_0_0_11_reg_433;
        end if; 
    end process;


    ap_phi_mux_src_buf_V_1_0_1_phi_fu_425_p4_assign_proc : process(icmp_ln882_5_reg_1071_pp3_iter2_reg, icmp_ln886_reg_1109, src_buf_V_1_2_3_reg_377, src_buf_V_1_1_fu_748_p3, ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_421)
    begin
        if ((icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0)) then
            if ((icmp_ln886_reg_1109 = ap_const_lv1_1)) then 
                ap_phi_mux_src_buf_V_1_0_1_phi_fu_425_p4 <= src_buf_V_1_1_fu_748_p3;
            elsif ((icmp_ln886_reg_1109 = ap_const_lv1_0)) then 
                ap_phi_mux_src_buf_V_1_0_1_phi_fu_425_p4 <= src_buf_V_1_2_3_reg_377;
            else 
                ap_phi_mux_src_buf_V_1_0_1_phi_fu_425_p4 <= ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_421;
            end if;
        else 
            ap_phi_mux_src_buf_V_1_0_1_phi_fu_425_p4 <= ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_421;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_449_p4_assign_proc : process(icmp_ln882_5_reg_1071_pp3_iter2_reg, icmp_ln886_reg_1109, src_buf_V_2_0_reg_355, src_buf_V_2_0_2_fu_764_p3, ap_phi_reg_pp3_iter3_storemerge_reg_445)
    begin
        if ((icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0)) then
            if ((icmp_ln886_reg_1109 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_phi_fu_449_p4 <= src_buf_V_2_0_2_fu_764_p3;
            elsif ((icmp_ln886_reg_1109 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_phi_fu_449_p4 <= src_buf_V_2_0_reg_355;
            else 
                ap_phi_mux_storemerge_phi_fu_449_p4 <= ap_phi_reg_pp3_iter3_storemerge_reg_445;
            end if;
        else 
            ap_phi_mux_storemerge_phi_fu_449_p4 <= ap_phi_reg_pp3_iter3_storemerge_reg_445;
        end if; 
    end process;

    ap_phi_reg_pp3_iter3_src_buf_V_0_0_11_reg_433 <= "XXXXXXXX";
    ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_421 <= "XXXXXXXX";
    ap_phi_reg_pp3_iter3_storemerge_reg_445 <= "XXXXXXXX";

    ap_predicate_op133_read_state13_assign_proc : process(icmp_ln882_5_reg_1071, and_ln203_reg_1087)
    begin
                ap_predicate_op133_read_state13 <= ((ap_const_lv1_1 = and_ln203_reg_1087) and (icmp_ln882_5_reg_1071 = ap_const_lv1_0));
    end process;


    ap_predicate_op205_write_state15_assign_proc : process(icmp_ln882_5_reg_1071_pp3_iter2_reg, icmp_ln886_reg_1109)
    begin
                ap_predicate_op205_write_state15 <= ((icmp_ln886_reg_1109 = ap_const_lv1_0) and (icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op206_write_state15_assign_proc : process(icmp_ln882_5_reg_1071_pp3_iter2_reg, icmp_ln886_reg_1109)
    begin
                ap_predicate_op206_write_state15 <= ((icmp_ln886_reg_1109 = ap_const_lv1_0) and (icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(icmp_ln485_fu_571_p2, ap_CS_fsm_state11)
    begin
        if (((icmp_ln485_fu_571_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, conv_i101_fu_552_p1, ap_block_pp2_stage0, conv_i180_i_fu_663_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            buf_0_V_address0 <= conv_i180_i_fu_663_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_0_V_address0 <= conv_i101_fu_552_p1(11 - 1 downto 0);
        else 
            buf_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, buf_0_V_addr_1_reg_1026, ap_enable_reg_pp2_iter1, zext_ln538_3_fu_527_p1, ap_block_pp2_stage0, zext_ln538_4_fu_652_p1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_0_V_address1 <= zext_ln538_4_fu_652_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_0_V_address1 <= buf_0_V_addr_1_reg_1026;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_address1 <= zext_ln538_3_fu_527_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(gaussian_mat_4364_dout, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, tmp_fu_559_p5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_0_V_d1 <= tmp_fu_559_p5;
        elsif ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_0_V_d1 <= gaussian_mat_4364_dout;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, icmp_ln882_5_reg_1071, and_ln203_reg_1087, ap_block_pp3_stage0_11001, trunc_ln324_reg_994, ap_block_pp1_stage0_11001, icmp_ln882_4_reg_1017, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1, empty_50_fu_659_p1)
    begin
        if ((((ap_const_lv1_1 = and_ln203_reg_1087) and (icmp_ln882_5_reg_1071 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (empty_50_fu_659_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln882_4_reg_1017 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_994 = ap_const_lv2_0)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, conv_i101_fu_552_p1, ap_block_pp2_stage0, conv_i180_i_fu_663_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            buf_1_V_address0 <= conv_i180_i_fu_663_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_1_V_address0 <= conv_i101_fu_552_p1(11 - 1 downto 0);
        else 
            buf_1_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, zext_ln538_3_fu_527_p1, zext_ln538_4_fu_652_p1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_1_V_address1 <= zext_ln538_4_fu_652_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_address1 <= zext_ln538_3_fu_527_p1(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, icmp_ln882_5_reg_1071, and_ln203_reg_1087, ap_block_pp3_stage0_11001, trunc_ln324_reg_994, ap_block_pp1_stage0_11001, empty_50_fu_659_p1)
    begin
        if ((((ap_const_lv1_1 = and_ln203_reg_1087) and (icmp_ln882_5_reg_1071 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (empty_50_fu_659_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_994 = ap_const_lv2_1)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, conv_i101_fu_552_p1, ap_block_pp2_stage0, conv_i180_i_fu_663_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            buf_2_V_address0 <= conv_i180_i_fu_663_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            buf_2_V_address0 <= conv_i101_fu_552_p1(11 - 1 downto 0);
        else 
            buf_2_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, zext_ln538_3_fu_527_p1, zext_ln538_4_fu_652_p1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            buf_2_V_address1 <= zext_ln538_4_fu_652_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_2_V_address1 <= zext_ln538_3_fu_527_p1(11 - 1 downto 0);
        else 
            buf_2_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, icmp_ln882_5_reg_1071, and_ln203_reg_1087, ap_block_pp3_stage0_11001, trunc_ln324_reg_994, ap_block_pp1_stage0_11001, empty_50_fu_659_p1)
    begin
        if (((not((empty_50_fu_659_p1 = ap_const_lv2_0)) and not((empty_50_fu_659_p1 = ap_const_lv2_1)) and (ap_const_lv1_1 = and_ln203_reg_1087) and (icmp_ln882_5_reg_1071 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or (not((trunc_ln324_reg_994 = ap_const_lv2_0)) and not((trunc_ln324_reg_994 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i227_i_2_fu_609_p2 <= "1" when (signed(sub_i_i256_i_fu_597_p2) > signed(ap_const_lv12_0)) else "0";
    cmp_i_i282_i_fu_583_p2 <= "1" when (unsigned(empty_47_reg_331) > unsigned(ap_const_lv11_437)) else "0";
    cmp_i_i326_i_fu_577_p2 <= "1" when (unsigned(empty_47_reg_331) < unsigned(ap_const_lv11_438)) else "0";
    conv_i101_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_46_reg_287),64));
    conv_i180_i_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_49_reg_343_pp3_iter1_reg),64));
    empty_48_fu_593_p1 <= empty_47_reg_331(2 - 1 downto 0);
    empty_50_fu_659_p1 <= row_ind_V_1_1_reg_298(2 - 1 downto 0);
    empty_52_fu_741_p3 <= 
        tmp_1_fu_713_p5 when (spec_select971_reg_1056(0) = '1') else 
        tmp_2_fu_729_p5;

    gaussian_mat_4364_blk_n_assign_proc : process(gaussian_mat_4364_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, icmp_ln882_5_reg_1071, and_ln203_reg_1087)
    begin
        if ((((ap_const_lv1_1 = and_ln203_reg_1087) and (icmp_ln882_5_reg_1071 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            gaussian_mat_4364_blk_n <= gaussian_mat_4364_empty_n;
        else 
            gaussian_mat_4364_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gaussian_mat_4364_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_predicate_op133_read_state13, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_predicate_op133_read_state13 = ap_const_boolean_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            gaussian_mat_4364_read <= ap_const_logic_1;
        else 
            gaussian_mat_4364_read <= ap_const_logic_0;
        end if; 
    end process;


    gradx_mat_4365_blk_n_assign_proc : process(gradx_mat_4365_full_n, ap_block_pp3_stage0, ap_enable_reg_pp3_iter3, icmp_ln882_5_reg_1071_pp3_iter2_reg, icmp_ln886_reg_1109)
    begin
        if (((icmp_ln886_reg_1109 = ap_const_lv1_0) and (icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            gradx_mat_4365_blk_n <= gradx_mat_4365_full_n;
        else 
            gradx_mat_4365_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        gradx_mat_4365_din <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln69_1_fu_848_p2),16));


    gradx_mat_4365_write_assign_proc : process(ap_enable_reg_pp3_iter3, ap_predicate_op205_write_state15, ap_block_pp3_stage0_11001)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_predicate_op205_write_state15 = ap_const_boolean_1))) then 
            gradx_mat_4365_write <= ap_const_logic_1;
        else 
            gradx_mat_4365_write <= ap_const_logic_0;
        end if; 
    end process;


    grady_mat_4368_blk_n_assign_proc : process(grady_mat_4368_full_n, ap_block_pp3_stage0, ap_enable_reg_pp3_iter3, icmp_ln882_5_reg_1071_pp3_iter2_reg, icmp_ln886_reg_1109)
    begin
        if (((icmp_ln886_reg_1109 = ap_const_lv1_0) and (icmp_ln882_5_reg_1071_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            grady_mat_4368_blk_n <= grady_mat_4368_full_n;
        else 
            grady_mat_4368_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        grady_mat_4368_din <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln69_1_fu_919_p2),16));


    grady_mat_4368_write_assign_proc : process(ap_enable_reg_pp3_iter3, ap_predicate_op206_write_state15, ap_block_pp3_stage0_11001)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_predicate_op206_write_state15 = ap_const_boolean_1))) then 
            grady_mat_4368_write <= ap_const_logic_1;
        else 
            grady_mat_4368_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln485_fu_571_p2 <= "1" when (empty_47_reg_331 = ap_const_lv11_439) else "0";
    icmp_ln882_2_fu_503_p2 <= "1" when (unsigned(init_buf_reg_265) < unsigned(wide_trip_count_reg_985)) else "0";
    icmp_ln882_3_fu_515_p2 <= "1" when (ap_phi_mux_empty_phi_fu_279_p4 = ap_const_lv11_780) else "0";
    icmp_ln882_4_fu_540_p2 <= "1" when (empty_46_reg_287 = ap_const_lv11_780) else "0";
    icmp_ln882_5_fu_629_p2 <= "1" when (ap_phi_mux_empty_49_phi_fu_347_p4 = ap_const_lv11_781) else "0";
    icmp_ln882_6_fu_641_p2 <= "1" when (unsigned(ap_phi_mux_empty_49_phi_fu_347_p4) < unsigned(ap_const_lv11_780)) else "0";
    icmp_ln882_fu_466_p2 <= "1" when (row_ind_V_0_2_reg_254 = ap_const_lv2_3) else "0";
    icmp_ln886_fu_670_p2 <= "1" when (empty_49_reg_343_pp3_iter1_reg = ap_const_lv11_0) else "0";
    init_row_ind_fu_472_p2 <= std_logic_vector(unsigned(row_ind_V_0_2_reg_254) + unsigned(ap_const_lv2_1));
    p_cast_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_47_reg_331),12));
        sext_ln69_1_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln69_2_fu_903_p2),11));

        sext_ln69_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln69_fu_832_p2),11));

    shl_ln1501_1_fu_784_p3 <= (src_buf_V_1_1_fu_748_p3 & ap_const_lv1_0);
    shl_ln1501_2_fu_859_p3 <= (src_buf_V_0_2_3_reg_399 & ap_const_lv1_0);
    shl_ln1501_3_fu_871_p3 <= (src_buf_V_2_0_reg_355 & ap_const_lv1_0);
    shl_ln_fu_772_p3 <= (src_buf_V_1_0_0_reg_388 & ap_const_lv1_0);
    spec_select971_fu_615_p2 <= (cmp_i_i282_i_fu_583_p2 and cmp_i_i227_i_2_fu_609_p2);
    src_buf_V_0_1_fu_756_p3 <= 
        src_buf_V_0_2_fu_676_p5 when (icmp_ln882_6_reg_1080_pp3_iter2_reg(0) = '1') else 
        src_buf_V_0_2_3_reg_399;
    src_buf_V_1_1_fu_748_p3 <= 
        src_buf_V_1_2_fu_687_p5 when (icmp_ln882_6_reg_1080_pp3_iter2_reg(0) = '1') else 
        src_buf_V_1_2_3_reg_377;
    src_buf_V_2_0_2_fu_764_p3 <= 
        empty_52_fu_741_p3 when (icmp_ln882_6_reg_1080_pp3_iter2_reg(0) = '1') else 
        src_buf_V_2_0_reg_355;
    sub_i239_i_fu_603_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) - unsigned(empty_48_fu_593_p1));
    sub_i_i256_i_fu_597_p2 <= std_logic_vector(signed(ap_const_lv12_BC9) + signed(p_cast_fu_589_p1));
    sub_ln69_1_fu_848_p2 <= std_logic_vector(unsigned(add_ln69_fu_842_p2) - unsigned(zext_ln69_1_fu_828_p1));
    sub_ln69_2_fu_903_p2 <= std_logic_vector(unsigned(zext_ln69_2_fu_895_p1) - unsigned(zext_ln69_3_fu_899_p1));
    sub_ln69_3_fu_913_p2 <= std_logic_vector(signed(sext_ln69_1_fu_909_p1) - signed(zext_ln79_1_fu_867_p1));
    sub_ln69_fu_832_p2 <= std_logic_vector(unsigned(zext_ln215_fu_792_p1) - unsigned(zext_ln79_fu_780_p1));
    tmp_1_fu_713_p4 <= tmp_s_fu_698_p5(2 - 1 downto 0);
    tmp_2_fu_729_p4 <= row_ind_V_1_1_reg_298(2 - 1 downto 0);
    trunc_ln324_1_fu_512_p1 <= row_ind_V_1_0_load_reg_959(2 - 1 downto 0);
    trunc_ln324_2_fu_621_p1 <= row_ind_V_2_reg_319(2 - 1 downto 0);
    trunc_ln324_3_fu_625_p1 <= row_ind_V_0_reg_308(2 - 1 downto 0);
    trunc_ln324_fu_508_p1 <= init_buf_reg_265(2 - 1 downto 0);
    wide_trip_count_fu_500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_V_2_0_load_reg_966),64));
    zext_ln1350_1_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_2_0_2_fu_764_p3),9));
    zext_ln1350_2_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_0_0_0_reg_410),9));
    zext_ln1350_3_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_2_0_0_reg_366),9));
    zext_ln1350_4_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1501_3_fu_871_p3),11));
    zext_ln1350_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_V_0_1_fu_756_p3),9));
    zext_ln215_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1501_1_fu_784_p3),10));
    zext_ln304_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_V_0_2_reg_254),13));
    zext_ln538_3_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_275),64));
    zext_ln538_4_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_49_reg_343),64));
    zext_ln538_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_V_1_0_load_reg_959),64));
    zext_ln69_1_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1350_1_fu_818_p2),11));
    zext_ln69_2_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1350_2_fu_883_p2),10));
    zext_ln69_3_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1350_3_fu_889_p2),10));
    zext_ln69_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1350_fu_804_p2),11));
    zext_ln79_1_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1501_2_fu_859_p3),11));
    zext_ln79_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_772_p3),10));
end behav;
