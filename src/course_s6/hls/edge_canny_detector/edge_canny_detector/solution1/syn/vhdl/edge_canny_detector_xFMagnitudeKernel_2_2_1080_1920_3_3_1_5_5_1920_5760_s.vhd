-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity edge_canny_detector_xFMagnitudeKernel_2_2_1080_1920_3_3_1_5_5_1920_5760_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    gradx1_mat_4366_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    gradx1_mat_4366_empty_n : IN STD_LOGIC;
    gradx1_mat_4366_read : OUT STD_LOGIC;
    grady1_mat_4369_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    grady1_mat_4369_empty_n : IN STD_LOGIC;
    grady1_mat_4369_read : OUT STD_LOGIC;
    magnitude_mat_4371_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    magnitude_mat_4371_full_n : IN STD_LOGIC;
    magnitude_mat_4371_write : OUT STD_LOGIC );
end;


architecture behav of edge_canny_detector_xFMagnitudeKernel_2_2_1080_1920_3_3_1_5_5_1920_5760_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000011";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv15_3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000011";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv17_3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000011";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gradx1_mat_4366_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln79_reg_1822 : STD_LOGIC_VECTOR (0 downto 0);
    signal grady1_mat_4369_blk_n : STD_LOGIC;
    signal magnitude_mat_4371_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal icmp_ln79_reg_1822_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_reg_280 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln72_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_1_fu_297_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_1_reg_1817 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln79_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln79_reg_1822_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1822_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1822_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1822_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1822_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1822_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1822_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_309_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal q_1_fu_351_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal q_1_reg_1831 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln105_fu_359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln106_fu_363_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1782_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln67_fu_366_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln67_reg_1853 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln67_reg_1853_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln67_reg_1853_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln67_reg_1853_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln3471_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3471_reg_1858 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3471_reg_1858_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3471_reg_1858_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3471_reg_1858_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_reg_1875 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_reg_1875_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_reg_1875_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_reg_1875_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_1_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_1_reg_1892 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_1_reg_1892_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_1_reg_1892_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_1_reg_1892_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln3450_2_fu_654_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln3450_2_reg_1909 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_reg_1914 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_cast_reg_1920 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_cast_reg_1925 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_cast_reg_1930 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_cast_reg_1935 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_cast_reg_1940 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_cast_reg_1940_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_cast_reg_1945 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_cast_reg_1945_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_cast_reg_1950 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_cast_reg_1950_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_cast_reg_1955 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_cast_reg_1955_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_cast_reg_1955_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_cast_reg_1960 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_cast_reg_1960_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_cast_reg_1960_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1313_cast_reg_1965 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1313_cast_reg_1965_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1313_cast_reg_1965_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_cast_reg_1970 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_cast_reg_1970_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_cast_reg_1970_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_cast_reg_1970_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln3471_2_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_2_reg_1975 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_2_reg_1975_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_2_reg_1975_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_3_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_3_reg_1988 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_3_reg_1988_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_3_reg_1988_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_4_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_4_reg_2001 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_4_reg_2001_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_4_reg_2001_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_5_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_5_reg_2014 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_5_reg_2014_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_5_reg_2014_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln3450_6_fu_1066_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln3450_6_reg_2027 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_11_reg_2032 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_6_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_6_reg_2038 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_6_reg_2038_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_7_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_7_reg_2048 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_7_reg_2048_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_8_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_8_reg_2058 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_8_reg_2058_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2068 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_1321_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_reg_2074 : STD_LOGIC_VECTOR (29 downto 0);
    signal xor_ln3471_9_fu_1325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_9_reg_2079 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_10_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_10_reg_2086 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_11_fu_1486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_11_reg_2093 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_2100 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_55_fu_1573_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_55_reg_2106 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal i_reg_269 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_1_fu_315_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln98_fu_323_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_337_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln99_fu_345_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_fu_329_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1788_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_369_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_393_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_2_fu_402_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal R_2_0_cast_fu_410_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmpR_1_fu_414_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_420_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_cast_fu_384_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_1_1_fu_430_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmpQ_s_fu_442_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln3457_fu_450_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal R_1_1_cast_fu_438_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln3459_fu_456_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln3467_fu_466_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln3469_fu_472_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln3459_fu_460_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln3469_fu_476_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln3450_fu_482_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_fu_490_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_cast_fu_504_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_1_2_fu_513_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmpQ_1_fu_525_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln3457_1_fu_535_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal R_1_2_cast_fu_521_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln3459_1_fu_541_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln3467_1_fu_551_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln3469_1_fu_557_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln3469_1_fu_561_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln3459_1_fu_545_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln3450_1_fu_567_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_fu_575_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_cast_fu_589_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal R_1_3_fu_598_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmpQ_3_fu_610_p5 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln3457_2_fu_622_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal R_1_3_cast_fu_606_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln3459_2_fu_628_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln3467_2_fu_638_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln3469_2_fu_644_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln3469_2_fu_648_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln3459_2_fu_632_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal R_1_4_fu_774_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmpQ_4_fu_784_p6 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln3457_3_fu_795_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal R_1_4_cast_fu_780_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln3459_3_fu_801_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln3467_3_fu_811_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln3469_3_fu_817_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln3469_3_fu_821_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln3459_3_fu_805_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln3450_3_fu_827_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_fu_834_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal R_1_5_fu_848_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmpQ_5_fu_859_p7 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln3457_4_fu_872_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal R_1_5_cast_fu_855_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln3459_4_fu_878_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal or_ln3467_4_fu_888_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln3469_4_fu_894_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln3469_4_fu_898_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln3459_4_fu_882_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln3450_4_fu_904_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_fu_912_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal R_1_6_fu_926_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmpQ_6_fu_937_p8 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln3457_5_fu_952_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_1_6_cast_fu_933_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln3459_5_fu_958_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal or_ln3467_5_fu_968_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln3469_5_fu_974_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln3469_5_fu_978_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln3459_5_fu_962_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln3450_5_fu_984_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_10_fu_992_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal R_1_7_fu_1006_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmpQ_7_fu_1017_p9 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln3457_6_fu_1034_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal R_1_7_cast_fu_1013_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln3459_6_fu_1040_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln3467_6_fu_1050_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln3469_6_fu_1056_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln3469_6_fu_1060_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln3459_6_fu_1044_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal R_1_8_fu_1087_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmpQ_8_fu_1097_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln3457_7_fu_1112_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal R_1_8_cast_fu_1093_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln3459_7_fu_1118_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal or_ln3467_7_fu_1128_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln3469_7_fu_1134_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln3469_7_fu_1138_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln3459_7_fu_1122_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal select_ln3450_7_fu_1144_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_12_fu_1151_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal R_1_9_fu_1165_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmpQ_9_fu_1176_p11 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln3457_8_fu_1193_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal R_1_9_cast_fu_1172_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln3459_8_fu_1199_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal or_ln3467_8_fu_1209_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln3469_8_fu_1215_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln3469_8_fu_1219_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal sub_ln3459_8_fu_1203_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln3450_8_fu_1225_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_13_fu_1233_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpQ_2_fu_1254_p12 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln3457_9_fu_1273_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal R_1_s_fu_1247_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3459_9_fu_1279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3467_9_fu_1289_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln3469_9_fu_1295_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3469_9_fu_1299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln3459_9_fu_1283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln3450_9_fu_1305_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpQ_10_fu_1336_p13 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln3457_10_fu_1354_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal R_1_10_fu_1330_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3459_10_fu_1360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3467_10_fu_1370_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln3469_10_fu_1376_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3469_10_fu_1380_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln3459_10_fu_1364_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln3450_10_fu_1386_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1393_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_53_fu_1407_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmpQ_11_fu_1418_p14 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln3457_11_fu_1438_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal R_1_11_fu_1411_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3459_11_fu_1444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3467_11_fu_1454_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln3469_11_fu_1460_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3469_11_fu_1464_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln3459_11_fu_1448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln3450_11_fu_1470_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1478_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_54_fu_1492_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmpQ_12_fu_1503_p15 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln3457_12_fu_1525_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal R_1_12_fu_1496_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3459_12_fu_1531_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3467_12_fu_1541_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln3469_12_fu_1547_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3469_12_fu_1551_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln3459_12_fu_1535_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln3450_12_fu_1557_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln3471_12_fu_1577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpQ_13_fu_1588_p16 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln3457_13_fu_1609_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal R_1_13_fu_1582_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3459_13_fu_1615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3467_13_fu_1625_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln3469_13_fu_1631_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3469_13_fu_1635_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln3459_13_fu_1619_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln3450_13_fu_1641_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_1648_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_56_fu_1662_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal xor_ln3471_13_fu_1656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpQ_14_fu_1673_p17 : STD_LOGIC_VECTOR (16 downto 0);
    signal or_ln3457_14_fu_1696_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal R_1_14_fu_1666_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3459_14_fu_1702_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3467_14_fu_1712_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln3469_14_fu_1718_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln3469_14_fu_1722_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln3459_14_fu_1706_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1728_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1736_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln3450_14_fu_1744_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3471_14_fu_1752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1782_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1782_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1788_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1788_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1782_ce : STD_LOGIC;
    signal grp_fu_1788_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component edge_canny_detector_mul_mul_16s_16s_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component edge_canny_detector_mac_muladd_16s_16s_32s_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mul_mul_16s_16s_32_4_1_U49 : component edge_canny_detector_mul_mul_16s_16s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1782_p0,
        din1 => grp_fu_1782_p1,
        ce => grp_fu_1782_ce,
        dout => grp_fu_1782_p2);

    mac_muladd_16s_16s_32s_32_4_1_U50 : component edge_canny_detector_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1788_p0,
        din1 => grp_fu_1788_p1,
        din2 => grp_fu_1782_p2,
        ce => grp_fu_1788_ce,
        dout => grp_fu_1788_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln72_fu_291_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln72_fu_291_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                elsif (((icmp_ln72_fu_291_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i_reg_269 <= i_1_reg_1817;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_269 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_303_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                j_reg_280 <= j_1_fu_309_p2;
            elsif (((icmp_ln72_fu_291_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_reg_280 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_1822_pp0_iter7_reg = ap_const_lv1_0))) then
                empty_55_reg_2106 <= empty_55_fu_1573_p1;
                tmp_17_reg_2100 <= select_ln3450_12_fu_1557_p3(31 downto 31);
                xor_ln3471_10_reg_2086 <= xor_ln3471_10_fu_1401_p2;
                xor_ln3471_11_reg_2093 <= xor_ln3471_11_fu_1486_p2;
                xor_ln3471_9_reg_2079 <= xor_ln3471_9_fu_1325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_1822_pp0_iter6_reg = ap_const_lv1_0))) then
                empty_reg_2074 <= empty_fu_1321_p1;
                tmp_14_reg_2068 <= select_ln3450_9_fu_1305_p3(31 downto 31);
                xor_ln3471_6_reg_2038 <= xor_ln3471_6_fu_1082_p2;
                xor_ln3471_7_reg_2048 <= xor_ln3471_7_fu_1159_p2;
                xor_ln3471_8_reg_2058 <= xor_ln3471_8_fu_1241_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_1_reg_1817 <= i_1_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_1822_pp0_iter4_reg = ap_const_lv1_0))) then
                icmp_ln3471_reg_1858 <= icmp_ln3471_fu_378_p2;
                select_ln3450_2_reg_1909 <= select_ln3450_2_fu_654_p3;
                tmp_10_cast_reg_1950 <= grp_fu_1788_p3(11 downto 10);
                tmp_11_cast_reg_1955 <= grp_fu_1788_p3(9 downto 8);
                tmp_12_cast_reg_1960 <= grp_fu_1788_p3(7 downto 6);
                tmp_1313_cast_reg_1965 <= grp_fu_1788_p3(5 downto 4);
                tmp_14_cast_reg_1970 <= grp_fu_1788_p3(3 downto 2);
                tmp_4_cast_reg_1920 <= grp_fu_1788_p3(23 downto 22);
                tmp_5_cast_reg_1925 <= grp_fu_1788_p3(21 downto 20);
                tmp_6_cast_reg_1930 <= grp_fu_1788_p3(19 downto 18);
                tmp_7_cast_reg_1935 <= grp_fu_1788_p3(17 downto 16);
                tmp_7_reg_1914 <= select_ln3450_2_fu_654_p3(11 downto 11);
                tmp_8_cast_reg_1940 <= grp_fu_1788_p3(15 downto 14);
                tmp_9_cast_reg_1945 <= grp_fu_1788_p3(13 downto 12);
                trunc_ln67_reg_1853 <= trunc_ln67_fu_366_p1;
                xor_ln3471_1_reg_1892 <= xor_ln3471_1_fu_583_p2;
                xor_ln3471_reg_1875 <= xor_ln3471_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln3471_reg_1858_pp0_iter6_reg <= icmp_ln3471_reg_1858;
                icmp_ln3471_reg_1858_pp0_iter7_reg <= icmp_ln3471_reg_1858_pp0_iter6_reg;
                icmp_ln3471_reg_1858_pp0_iter8_reg <= icmp_ln3471_reg_1858_pp0_iter7_reg;
                icmp_ln79_reg_1822_pp0_iter2_reg <= icmp_ln79_reg_1822_pp0_iter1_reg;
                icmp_ln79_reg_1822_pp0_iter3_reg <= icmp_ln79_reg_1822_pp0_iter2_reg;
                icmp_ln79_reg_1822_pp0_iter4_reg <= icmp_ln79_reg_1822_pp0_iter3_reg;
                icmp_ln79_reg_1822_pp0_iter5_reg <= icmp_ln79_reg_1822_pp0_iter4_reg;
                icmp_ln79_reg_1822_pp0_iter6_reg <= icmp_ln79_reg_1822_pp0_iter5_reg;
                icmp_ln79_reg_1822_pp0_iter7_reg <= icmp_ln79_reg_1822_pp0_iter6_reg;
                icmp_ln79_reg_1822_pp0_iter8_reg <= icmp_ln79_reg_1822_pp0_iter7_reg;
                tmp_10_cast_reg_1950_pp0_iter6_reg <= tmp_10_cast_reg_1950;
                tmp_11_cast_reg_1955_pp0_iter6_reg <= tmp_11_cast_reg_1955;
                tmp_11_cast_reg_1955_pp0_iter7_reg <= tmp_11_cast_reg_1955_pp0_iter6_reg;
                tmp_12_cast_reg_1960_pp0_iter6_reg <= tmp_12_cast_reg_1960;
                tmp_12_cast_reg_1960_pp0_iter7_reg <= tmp_12_cast_reg_1960_pp0_iter6_reg;
                tmp_1313_cast_reg_1965_pp0_iter6_reg <= tmp_1313_cast_reg_1965;
                tmp_1313_cast_reg_1965_pp0_iter7_reg <= tmp_1313_cast_reg_1965_pp0_iter6_reg;
                tmp_14_cast_reg_1970_pp0_iter6_reg <= tmp_14_cast_reg_1970;
                tmp_14_cast_reg_1970_pp0_iter7_reg <= tmp_14_cast_reg_1970_pp0_iter6_reg;
                tmp_14_cast_reg_1970_pp0_iter8_reg <= tmp_14_cast_reg_1970_pp0_iter7_reg;
                tmp_8_cast_reg_1940_pp0_iter6_reg <= tmp_8_cast_reg_1940;
                tmp_9_cast_reg_1945_pp0_iter6_reg <= tmp_9_cast_reg_1945;
                trunc_ln67_reg_1853_pp0_iter6_reg <= trunc_ln67_reg_1853;
                trunc_ln67_reg_1853_pp0_iter7_reg <= trunc_ln67_reg_1853_pp0_iter6_reg;
                trunc_ln67_reg_1853_pp0_iter8_reg <= trunc_ln67_reg_1853_pp0_iter7_reg;
                xor_ln3471_1_reg_1892_pp0_iter6_reg <= xor_ln3471_1_reg_1892;
                xor_ln3471_1_reg_1892_pp0_iter7_reg <= xor_ln3471_1_reg_1892_pp0_iter6_reg;
                xor_ln3471_1_reg_1892_pp0_iter8_reg <= xor_ln3471_1_reg_1892_pp0_iter7_reg;
                xor_ln3471_2_reg_1975_pp0_iter7_reg <= xor_ln3471_2_reg_1975;
                xor_ln3471_2_reg_1975_pp0_iter8_reg <= xor_ln3471_2_reg_1975_pp0_iter7_reg;
                xor_ln3471_3_reg_1988_pp0_iter7_reg <= xor_ln3471_3_reg_1988;
                xor_ln3471_3_reg_1988_pp0_iter8_reg <= xor_ln3471_3_reg_1988_pp0_iter7_reg;
                xor_ln3471_4_reg_2001_pp0_iter7_reg <= xor_ln3471_4_reg_2001;
                xor_ln3471_4_reg_2001_pp0_iter8_reg <= xor_ln3471_4_reg_2001_pp0_iter7_reg;
                xor_ln3471_5_reg_2014_pp0_iter7_reg <= xor_ln3471_5_reg_2014;
                xor_ln3471_5_reg_2014_pp0_iter8_reg <= xor_ln3471_5_reg_2014_pp0_iter7_reg;
                xor_ln3471_6_reg_2038_pp0_iter8_reg <= xor_ln3471_6_reg_2038;
                xor_ln3471_7_reg_2048_pp0_iter8_reg <= xor_ln3471_7_reg_2048;
                xor_ln3471_8_reg_2058_pp0_iter8_reg <= xor_ln3471_8_reg_2058;
                xor_ln3471_reg_1875_pp0_iter6_reg <= xor_ln3471_reg_1875;
                xor_ln3471_reg_1875_pp0_iter7_reg <= xor_ln3471_reg_1875_pp0_iter6_reg;
                xor_ln3471_reg_1875_pp0_iter8_reg <= xor_ln3471_reg_1875_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln79_reg_1822 <= icmp_ln79_fu_303_p2;
                icmp_ln79_reg_1822_pp0_iter1_reg <= icmp_ln79_reg_1822;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_reg_1822 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                q_1_reg_1831 <= q_1_fu_351_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_1822_pp0_iter5_reg = ap_const_lv1_0))) then
                select_ln3450_6_reg_2027 <= select_ln3450_6_fu_1066_p3;
                tmp_11_reg_2032 <= select_ln3450_6_fu_1066_p3(23 downto 23);
                xor_ln3471_2_reg_1975 <= xor_ln3471_2_fu_769_p2;
                xor_ln3471_3_reg_1988 <= xor_ln3471_3_fu_842_p2;
                xor_ln3471_4_reg_2001 <= xor_ln3471_4_fu_920_p2;
                xor_ln3471_5_reg_2014 <= xor_ln3471_5_fu_1000_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, icmp_ln72_fu_291_p2, ap_CS_fsm_state2, icmp_ln79_fu_303_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln72_fu_291_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln79_fu_303_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0)) or ((icmp_ln79_fu_303_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    R_1_10_fu_1330_p3 <= (empty_reg_2074 & tmp_11_cast_reg_1955_pp0_iter7_reg);
    R_1_11_fu_1411_p3 <= (empty_53_fu_1407_p1 & tmp_12_cast_reg_1960_pp0_iter7_reg);
    R_1_12_fu_1496_p3 <= (empty_54_fu_1492_p1 & tmp_1313_cast_reg_1965_pp0_iter7_reg);
    R_1_13_fu_1582_p3 <= (empty_55_reg_2106 & tmp_14_cast_reg_1970_pp0_iter8_reg);
    R_1_14_fu_1666_p3 <= (empty_56_fu_1662_p1 & trunc_ln67_reg_1853_pp0_iter8_reg);
        R_1_1_cast_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_1_fu_430_p3),6));

    R_1_1_fu_430_p3 <= (tmp_fu_420_p4 & tmp_13_cast_fu_384_p4);
        R_1_2_cast_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_2_fu_513_p3),9));

    R_1_2_fu_513_p3 <= (select_ln3450_fu_482_p3 & tmp_2_cast_fu_504_p4);
        R_1_3_cast_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_3_fu_598_p3),12));

    R_1_3_fu_598_p3 <= (select_ln3450_1_fu_567_p3 & tmp_3_cast_fu_589_p4);
        R_1_4_cast_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_4_fu_774_p3),15));

    R_1_4_fu_774_p3 <= (select_ln3450_2_reg_1909 & tmp_4_cast_reg_1920);
        R_1_5_cast_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_5_fu_848_p3),18));

    R_1_5_fu_848_p3 <= (select_ln3450_3_fu_827_p3 & tmp_5_cast_reg_1925);
        R_1_6_cast_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_6_fu_926_p3),21));

    R_1_6_fu_926_p3 <= (select_ln3450_4_fu_904_p3 & tmp_6_cast_reg_1930);
        R_1_7_cast_fu_1013_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_7_fu_1006_p3),24));

    R_1_7_fu_1006_p3 <= (select_ln3450_5_fu_984_p3 & tmp_7_cast_reg_1935);
        R_1_8_cast_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_8_fu_1087_p3),27));

    R_1_8_fu_1087_p3 <= (select_ln3450_6_reg_2027 & tmp_8_cast_reg_1940_pp0_iter6_reg);
        R_1_9_cast_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(R_1_9_fu_1165_p3),30));

    R_1_9_fu_1165_p3 <= (select_ln3450_7_fu_1144_p3 & tmp_9_cast_reg_1945_pp0_iter6_reg);
    R_1_s_fu_1247_p3 <= (select_ln3450_8_fu_1225_p3 & tmp_10_cast_reg_1950_pp0_iter6_reg);
    R_2_0_cast_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(R_2_fu_402_p3),5));
    R_2_fu_402_p3 <= (tmp_2_fu_393_p4 & ap_const_lv2_0);
    add_ln3469_10_fu_1380_p2 <= std_logic_vector(unsigned(zext_ln3469_10_fu_1376_p1) + unsigned(R_1_10_fu_1330_p3));
    add_ln3469_11_fu_1464_p2 <= std_logic_vector(unsigned(zext_ln3469_11_fu_1460_p1) + unsigned(R_1_11_fu_1411_p3));
    add_ln3469_12_fu_1551_p2 <= std_logic_vector(unsigned(zext_ln3469_12_fu_1547_p1) + unsigned(R_1_12_fu_1496_p3));
    add_ln3469_13_fu_1635_p2 <= std_logic_vector(unsigned(zext_ln3469_13_fu_1631_p1) + unsigned(R_1_13_fu_1582_p3));
    add_ln3469_14_fu_1722_p2 <= std_logic_vector(unsigned(zext_ln3469_14_fu_1718_p1) + unsigned(R_1_14_fu_1666_p3));
    add_ln3469_1_fu_561_p2 <= std_logic_vector(unsigned(zext_ln3469_1_fu_557_p1) + unsigned(R_1_2_cast_fu_521_p1));
    add_ln3469_2_fu_648_p2 <= std_logic_vector(unsigned(zext_ln3469_2_fu_644_p1) + unsigned(R_1_3_cast_fu_606_p1));
    add_ln3469_3_fu_821_p2 <= std_logic_vector(unsigned(zext_ln3469_3_fu_817_p1) + unsigned(R_1_4_cast_fu_780_p1));
    add_ln3469_4_fu_898_p2 <= std_logic_vector(unsigned(zext_ln3469_4_fu_894_p1) + unsigned(R_1_5_cast_fu_855_p1));
    add_ln3469_5_fu_978_p2 <= std_logic_vector(unsigned(zext_ln3469_5_fu_974_p1) + unsigned(R_1_6_cast_fu_933_p1));
    add_ln3469_6_fu_1060_p2 <= std_logic_vector(unsigned(zext_ln3469_6_fu_1056_p1) + unsigned(R_1_7_cast_fu_1013_p1));
    add_ln3469_7_fu_1138_p2 <= std_logic_vector(unsigned(zext_ln3469_7_fu_1134_p1) + unsigned(R_1_8_cast_fu_1093_p1));
    add_ln3469_8_fu_1219_p2 <= std_logic_vector(unsigned(zext_ln3469_8_fu_1215_p1) + unsigned(R_1_9_cast_fu_1172_p1));
    add_ln3469_9_fu_1299_p2 <= std_logic_vector(unsigned(zext_ln3469_9_fu_1295_p1) + unsigned(R_1_s_fu_1247_p3));
    add_ln3469_fu_476_p2 <= std_logic_vector(unsigned(zext_ln3469_fu_472_p1) + unsigned(R_1_1_cast_fu_438_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(gradx1_mat_4366_empty_n, grady1_mat_4369_empty_n, magnitude_mat_4371_full_n, ap_enable_reg_pp0_iter1, icmp_ln79_reg_1822, ap_enable_reg_pp0_iter9, icmp_ln79_reg_1822_pp0_iter8_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln79_reg_1822_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (magnitude_mat_4371_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln79_reg_1822 = ap_const_lv1_0) and (grady1_mat_4369_empty_n = ap_const_logic_0)) or ((icmp_ln79_reg_1822 = ap_const_lv1_0) and (gradx1_mat_4366_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(gradx1_mat_4366_empty_n, grady1_mat_4369_empty_n, magnitude_mat_4371_full_n, ap_enable_reg_pp0_iter1, icmp_ln79_reg_1822, ap_enable_reg_pp0_iter9, icmp_ln79_reg_1822_pp0_iter8_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln79_reg_1822_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (magnitude_mat_4371_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln79_reg_1822 = ap_const_lv1_0) and (grady1_mat_4369_empty_n = ap_const_logic_0)) or ((icmp_ln79_reg_1822 = ap_const_lv1_0) and (gradx1_mat_4366_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(gradx1_mat_4366_empty_n, grady1_mat_4369_empty_n, magnitude_mat_4371_full_n, ap_enable_reg_pp0_iter1, icmp_ln79_reg_1822, ap_enable_reg_pp0_iter9, icmp_ln79_reg_1822_pp0_iter8_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln79_reg_1822_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (magnitude_mat_4371_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln79_reg_1822 = ap_const_lv1_0) and (grady1_mat_4369_empty_n = ap_const_logic_0)) or ((icmp_ln79_reg_1822 = ap_const_lv1_0) and (gradx1_mat_4366_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_pp0_stage0_iter9_assign_proc : process(magnitude_mat_4371_full_n, icmp_ln79_reg_1822_pp0_iter8_reg)
    begin
                ap_block_state12_pp0_stage0_iter9 <= ((icmp_ln79_reg_1822_pp0_iter8_reg = ap_const_lv1_0) and (magnitude_mat_4371_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(gradx1_mat_4366_empty_n, grady1_mat_4369_empty_n, icmp_ln79_reg_1822)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((icmp_ln79_reg_1822 = ap_const_lv1_0) and (grady1_mat_4369_empty_n = ap_const_logic_0)) or ((icmp_ln79_reg_1822 = ap_const_lv1_0) and (gradx1_mat_4366_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln79_fu_303_p2)
    begin
        if ((icmp_ln79_fu_303_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln72_fu_291_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln72_fu_291_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln72_fu_291_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln72_fu_291_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_53_fu_1407_p1 <= select_ln3450_10_fu_1386_p3(30 - 1 downto 0);
    empty_54_fu_1492_p1 <= select_ln3450_11_fu_1470_p3(30 - 1 downto 0);
    empty_55_fu_1573_p1 <= select_ln3450_12_fu_1557_p3(30 - 1 downto 0);
    empty_56_fu_1662_p1 <= select_ln3450_13_fu_1641_p3(30 - 1 downto 0);
    empty_fu_1321_p1 <= select_ln3450_9_fu_1305_p3(30 - 1 downto 0);

    gradx1_mat_4366_blk_n_assign_proc : process(gradx1_mat_4366_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln79_reg_1822)
    begin
        if (((icmp_ln79_reg_1822 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gradx1_mat_4366_blk_n <= gradx1_mat_4366_empty_n;
        else 
            gradx1_mat_4366_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradx1_mat_4366_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln79_reg_1822, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln79_reg_1822 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gradx1_mat_4366_read <= ap_const_logic_1;
        else 
            gradx1_mat_4366_read <= ap_const_logic_0;
        end if; 
    end process;


    grady1_mat_4369_blk_n_assign_proc : process(grady1_mat_4369_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln79_reg_1822)
    begin
        if (((icmp_ln79_reg_1822 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grady1_mat_4369_blk_n <= grady1_mat_4369_empty_n;
        else 
            grady1_mat_4369_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    grady1_mat_4369_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln79_reg_1822, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln79_reg_1822 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grady1_mat_4369_read <= ap_const_logic_1;
        else 
            grady1_mat_4369_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1782_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1782_ce <= ap_const_logic_1;
        else 
            grp_fu_1782_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1782_p0 <= sext_ln105_fu_359_p1(16 - 1 downto 0);
    grp_fu_1782_p1 <= sext_ln105_fu_359_p1(16 - 1 downto 0);

    grp_fu_1788_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1788_ce <= ap_const_logic_1;
        else 
            grp_fu_1788_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1788_p0 <= sext_ln106_fu_363_p1(16 - 1 downto 0);
    grp_fu_1788_p1 <= sext_ln106_fu_363_p1(16 - 1 downto 0);
    i_1_fu_297_p2 <= std_logic_vector(unsigned(i_reg_269) + unsigned(ap_const_lv11_1));
    icmp_ln3471_fu_378_p2 <= "0" when (tmp_4_fu_369_p4 = ap_const_lv2_0) else "1";
    icmp_ln72_fu_291_p2 <= "1" when (i_reg_269 = ap_const_lv11_438) else "0";
    icmp_ln79_fu_303_p2 <= "1" when (j_reg_280 = ap_const_lv11_780) else "0";
    j_1_fu_309_p2 <= std_logic_vector(unsigned(j_reg_280) + unsigned(ap_const_lv11_1));

    magnitude_mat_4371_blk_n_assign_proc : process(magnitude_mat_4371_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter9, icmp_ln79_reg_1822_pp0_iter8_reg)
    begin
        if (((icmp_ln79_reg_1822_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            magnitude_mat_4371_blk_n <= magnitude_mat_4371_full_n;
        else 
            magnitude_mat_4371_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    magnitude_mat_4371_din <= (((((((((((((((icmp_ln3471_reg_1858_pp0_iter8_reg & xor_ln3471_reg_1875_pp0_iter8_reg) & xor_ln3471_1_reg_1892_pp0_iter8_reg) & xor_ln3471_2_reg_1975_pp0_iter8_reg) & xor_ln3471_3_reg_1988_pp0_iter8_reg) & xor_ln3471_4_reg_2001_pp0_iter8_reg) & xor_ln3471_5_reg_2014_pp0_iter8_reg) & xor_ln3471_6_reg_2038_pp0_iter8_reg) & xor_ln3471_7_reg_2048_pp0_iter8_reg) & xor_ln3471_8_reg_2058_pp0_iter8_reg) & xor_ln3471_9_reg_2079) & xor_ln3471_10_reg_2086) & xor_ln3471_11_reg_2093) & xor_ln3471_12_fu_1577_p2) & xor_ln3471_13_fu_1656_p2) & xor_ln3471_14_fu_1752_p2);

    magnitude_mat_4371_write_assign_proc : process(ap_enable_reg_pp0_iter9, icmp_ln79_reg_1822_pp0_iter8_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln79_reg_1822_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            magnitude_mat_4371_write <= ap_const_logic_1;
        else 
            magnitude_mat_4371_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln3457_10_fu_1354_p2 <= (tmpQ_10_fu_1336_p13 or ap_const_lv13_1);
    or_ln3457_11_fu_1438_p2 <= (tmpQ_11_fu_1418_p14 or ap_const_lv14_1);
    or_ln3457_12_fu_1525_p2 <= (tmpQ_12_fu_1503_p15 or ap_const_lv15_1);
    or_ln3457_13_fu_1609_p2 <= (tmpQ_13_fu_1588_p16 or ap_const_lv16_1);
    or_ln3457_14_fu_1696_p2 <= (tmpQ_14_fu_1673_p17 or ap_const_lv17_1);
    or_ln3457_1_fu_535_p2 <= (tmpQ_1_fu_525_p4 or ap_const_lv4_1);
    or_ln3457_2_fu_622_p2 <= (tmpQ_3_fu_610_p5 or ap_const_lv5_1);
    or_ln3457_3_fu_795_p2 <= (tmpQ_4_fu_784_p6 or ap_const_lv6_1);
    or_ln3457_4_fu_872_p2 <= (tmpQ_5_fu_859_p7 or ap_const_lv7_1);
    or_ln3457_5_fu_952_p2 <= (tmpQ_6_fu_937_p8 or ap_const_lv8_1);
    or_ln3457_6_fu_1034_p2 <= (tmpQ_7_fu_1017_p9 or ap_const_lv9_1);
    or_ln3457_7_fu_1112_p2 <= (tmpQ_8_fu_1097_p10 or ap_const_lv10_1);
    or_ln3457_8_fu_1193_p2 <= (tmpQ_9_fu_1176_p11 or ap_const_lv11_1);
    or_ln3457_9_fu_1273_p2 <= (tmpQ_2_fu_1254_p12 or ap_const_lv12_1);
    or_ln3457_fu_450_p2 <= (tmpQ_s_fu_442_p3 or ap_const_lv3_1);
    or_ln3467_10_fu_1370_p2 <= (tmpQ_10_fu_1336_p13 or ap_const_lv13_3);
    or_ln3467_11_fu_1454_p2 <= (tmpQ_11_fu_1418_p14 or ap_const_lv14_3);
    or_ln3467_12_fu_1541_p2 <= (tmpQ_12_fu_1503_p15 or ap_const_lv15_3);
    or_ln3467_13_fu_1625_p2 <= (tmpQ_13_fu_1588_p16 or ap_const_lv16_3);
    or_ln3467_14_fu_1712_p2 <= (tmpQ_14_fu_1673_p17 or ap_const_lv17_3);
    or_ln3467_1_fu_551_p2 <= (tmpQ_1_fu_525_p4 or ap_const_lv4_3);
    or_ln3467_2_fu_638_p2 <= (tmpQ_3_fu_610_p5 or ap_const_lv5_3);
    or_ln3467_3_fu_811_p2 <= (tmpQ_4_fu_784_p6 or ap_const_lv6_3);
    or_ln3467_4_fu_888_p2 <= (tmpQ_5_fu_859_p7 or ap_const_lv7_3);
    or_ln3467_5_fu_968_p2 <= (tmpQ_6_fu_937_p8 or ap_const_lv8_3);
    or_ln3467_6_fu_1050_p2 <= (tmpQ_7_fu_1017_p9 or ap_const_lv9_3);
    or_ln3467_7_fu_1128_p2 <= (tmpQ_8_fu_1097_p10 or ap_const_lv10_3);
    or_ln3467_8_fu_1209_p2 <= (tmpQ_9_fu_1176_p11 or ap_const_lv11_3);
    or_ln3467_9_fu_1289_p2 <= (tmpQ_2_fu_1254_p12 or ap_const_lv12_3);
    or_ln3467_fu_466_p2 <= (tmpQ_s_fu_442_p3 or ap_const_lv3_3);
    p_1_fu_329_p3 <= 
        sub_ln98_fu_323_p2 when (tmp_1_fu_315_p3(0) = '1') else 
        gradx1_mat_4366_dout;
    q_1_fu_351_p3 <= 
        sub_ln99_fu_345_p2 when (tmp_3_fu_337_p3(0) = '1') else 
        grady1_mat_4369_dout;
    select_ln3450_10_fu_1386_p3 <= 
        add_ln3469_10_fu_1380_p2 when (tmp_14_reg_2068(0) = '1') else 
        sub_ln3459_10_fu_1364_p2;
    select_ln3450_11_fu_1470_p3 <= 
        add_ln3469_11_fu_1464_p2 when (tmp_15_fu_1393_p3(0) = '1') else 
        sub_ln3459_11_fu_1448_p2;
    select_ln3450_12_fu_1557_p3 <= 
        add_ln3469_12_fu_1551_p2 when (tmp_16_fu_1478_p3(0) = '1') else 
        sub_ln3459_12_fu_1535_p2;
    select_ln3450_13_fu_1641_p3 <= 
        add_ln3469_13_fu_1635_p2 when (tmp_17_reg_2100(0) = '1') else 
        sub_ln3459_13_fu_1619_p2;
    select_ln3450_14_fu_1744_p3 <= 
        tmp_19_fu_1728_p3 when (tmp_18_fu_1648_p3(0) = '1') else 
        tmp_20_fu_1736_p3;
    select_ln3450_1_fu_567_p3 <= 
        add_ln3469_1_fu_561_p2 when (tmp_5_fu_490_p3(0) = '1') else 
        sub_ln3459_1_fu_545_p2;
    select_ln3450_2_fu_654_p3 <= 
        add_ln3469_2_fu_648_p2 when (tmp_6_fu_575_p3(0) = '1') else 
        sub_ln3459_2_fu_632_p2;
    select_ln3450_3_fu_827_p3 <= 
        add_ln3469_3_fu_821_p2 when (tmp_7_reg_1914(0) = '1') else 
        sub_ln3459_3_fu_805_p2;
    select_ln3450_4_fu_904_p3 <= 
        add_ln3469_4_fu_898_p2 when (tmp_8_fu_834_p3(0) = '1') else 
        sub_ln3459_4_fu_882_p2;
    select_ln3450_5_fu_984_p3 <= 
        add_ln3469_5_fu_978_p2 when (tmp_9_fu_912_p3(0) = '1') else 
        sub_ln3459_5_fu_962_p2;
    select_ln3450_6_fu_1066_p3 <= 
        add_ln3469_6_fu_1060_p2 when (tmp_10_fu_992_p3(0) = '1') else 
        sub_ln3459_6_fu_1044_p2;
    select_ln3450_7_fu_1144_p3 <= 
        add_ln3469_7_fu_1138_p2 when (tmp_11_reg_2032(0) = '1') else 
        sub_ln3459_7_fu_1122_p2;
    select_ln3450_8_fu_1225_p3 <= 
        add_ln3469_8_fu_1219_p2 when (tmp_12_fu_1151_p3(0) = '1') else 
        sub_ln3459_8_fu_1203_p2;
    select_ln3450_9_fu_1305_p3 <= 
        add_ln3469_9_fu_1299_p2 when (tmp_13_fu_1233_p3(0) = '1') else 
        sub_ln3459_9_fu_1283_p2;
    select_ln3450_fu_482_p3 <= 
        sub_ln3459_fu_460_p2 when (icmp_ln3471_fu_378_p2(0) = '1') else 
        add_ln3469_fu_476_p2;
        sext_ln105_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_fu_329_p3),32));

        sext_ln106_fu_363_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(q_1_reg_1831),32));

    sub_ln3459_10_fu_1364_p2 <= std_logic_vector(unsigned(R_1_10_fu_1330_p3) - unsigned(zext_ln3459_10_fu_1360_p1));
    sub_ln3459_11_fu_1448_p2 <= std_logic_vector(unsigned(R_1_11_fu_1411_p3) - unsigned(zext_ln3459_11_fu_1444_p1));
    sub_ln3459_12_fu_1535_p2 <= std_logic_vector(unsigned(R_1_12_fu_1496_p3) - unsigned(zext_ln3459_12_fu_1531_p1));
    sub_ln3459_13_fu_1619_p2 <= std_logic_vector(unsigned(R_1_13_fu_1582_p3) - unsigned(zext_ln3459_13_fu_1615_p1));
    sub_ln3459_14_fu_1706_p2 <= std_logic_vector(unsigned(R_1_14_fu_1666_p3) - unsigned(zext_ln3459_14_fu_1702_p1));
    sub_ln3459_1_fu_545_p2 <= std_logic_vector(signed(R_1_2_cast_fu_521_p1) - signed(zext_ln3459_1_fu_541_p1));
    sub_ln3459_2_fu_632_p2 <= std_logic_vector(signed(R_1_3_cast_fu_606_p1) - signed(zext_ln3459_2_fu_628_p1));
    sub_ln3459_3_fu_805_p2 <= std_logic_vector(signed(R_1_4_cast_fu_780_p1) - signed(zext_ln3459_3_fu_801_p1));
    sub_ln3459_4_fu_882_p2 <= std_logic_vector(signed(R_1_5_cast_fu_855_p1) - signed(zext_ln3459_4_fu_878_p1));
    sub_ln3459_5_fu_962_p2 <= std_logic_vector(signed(R_1_6_cast_fu_933_p1) - signed(zext_ln3459_5_fu_958_p1));
    sub_ln3459_6_fu_1044_p2 <= std_logic_vector(signed(R_1_7_cast_fu_1013_p1) - signed(zext_ln3459_6_fu_1040_p1));
    sub_ln3459_7_fu_1122_p2 <= std_logic_vector(signed(R_1_8_cast_fu_1093_p1) - signed(zext_ln3459_7_fu_1118_p1));
    sub_ln3459_8_fu_1203_p2 <= std_logic_vector(signed(R_1_9_cast_fu_1172_p1) - signed(zext_ln3459_8_fu_1199_p1));
    sub_ln3459_9_fu_1283_p2 <= std_logic_vector(unsigned(R_1_s_fu_1247_p3) - unsigned(zext_ln3459_9_fu_1279_p1));
    sub_ln3459_fu_460_p2 <= std_logic_vector(signed(R_1_1_cast_fu_438_p1) - signed(zext_ln3459_fu_456_p1));
    sub_ln98_fu_323_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(gradx1_mat_4366_dout));
    sub_ln99_fu_345_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(grady1_mat_4369_dout));
    tmpQ_10_fu_1336_p13 <= (((((((((((icmp_ln3471_reg_1858_pp0_iter7_reg & xor_ln3471_reg_1875_pp0_iter7_reg) & xor_ln3471_1_reg_1892_pp0_iter7_reg) & xor_ln3471_2_reg_1975_pp0_iter7_reg) & xor_ln3471_3_reg_1988_pp0_iter7_reg) & xor_ln3471_4_reg_2001_pp0_iter7_reg) & xor_ln3471_5_reg_2014_pp0_iter7_reg) & xor_ln3471_6_reg_2038) & xor_ln3471_7_reg_2048) & xor_ln3471_8_reg_2058) & xor_ln3471_9_fu_1325_p2) & ap_const_lv2_0);
    tmpQ_11_fu_1418_p14 <= ((((((((((((icmp_ln3471_reg_1858_pp0_iter7_reg & xor_ln3471_reg_1875_pp0_iter7_reg) & xor_ln3471_1_reg_1892_pp0_iter7_reg) & xor_ln3471_2_reg_1975_pp0_iter7_reg) & xor_ln3471_3_reg_1988_pp0_iter7_reg) & xor_ln3471_4_reg_2001_pp0_iter7_reg) & xor_ln3471_5_reg_2014_pp0_iter7_reg) & xor_ln3471_6_reg_2038) & xor_ln3471_7_reg_2048) & xor_ln3471_8_reg_2058) & xor_ln3471_9_fu_1325_p2) & xor_ln3471_10_fu_1401_p2) & ap_const_lv2_0);
    tmpQ_12_fu_1503_p15 <= (((((((((((((icmp_ln3471_reg_1858_pp0_iter7_reg & xor_ln3471_reg_1875_pp0_iter7_reg) & xor_ln3471_1_reg_1892_pp0_iter7_reg) & xor_ln3471_2_reg_1975_pp0_iter7_reg) & xor_ln3471_3_reg_1988_pp0_iter7_reg) & xor_ln3471_4_reg_2001_pp0_iter7_reg) & xor_ln3471_5_reg_2014_pp0_iter7_reg) & xor_ln3471_6_reg_2038) & xor_ln3471_7_reg_2048) & xor_ln3471_8_reg_2058) & xor_ln3471_9_fu_1325_p2) & xor_ln3471_10_fu_1401_p2) & xor_ln3471_11_fu_1486_p2) & ap_const_lv2_0);
    tmpQ_13_fu_1588_p16 <= ((((((((((((((icmp_ln3471_reg_1858_pp0_iter8_reg & xor_ln3471_reg_1875_pp0_iter8_reg) & xor_ln3471_1_reg_1892_pp0_iter8_reg) & xor_ln3471_2_reg_1975_pp0_iter8_reg) & xor_ln3471_3_reg_1988_pp0_iter8_reg) & xor_ln3471_4_reg_2001_pp0_iter8_reg) & xor_ln3471_5_reg_2014_pp0_iter8_reg) & xor_ln3471_6_reg_2038_pp0_iter8_reg) & xor_ln3471_7_reg_2048_pp0_iter8_reg) & xor_ln3471_8_reg_2058_pp0_iter8_reg) & xor_ln3471_9_reg_2079) & xor_ln3471_10_reg_2086) & xor_ln3471_11_reg_2093) & xor_ln3471_12_fu_1577_p2) & ap_const_lv2_0);
    tmpQ_14_fu_1673_p17 <= (((((((((((((((icmp_ln3471_reg_1858_pp0_iter8_reg & xor_ln3471_reg_1875_pp0_iter8_reg) & xor_ln3471_1_reg_1892_pp0_iter8_reg) & xor_ln3471_2_reg_1975_pp0_iter8_reg) & xor_ln3471_3_reg_1988_pp0_iter8_reg) & xor_ln3471_4_reg_2001_pp0_iter8_reg) & xor_ln3471_5_reg_2014_pp0_iter8_reg) & xor_ln3471_6_reg_2038_pp0_iter8_reg) & xor_ln3471_7_reg_2048_pp0_iter8_reg) & xor_ln3471_8_reg_2058_pp0_iter8_reg) & xor_ln3471_9_reg_2079) & xor_ln3471_10_reg_2086) & xor_ln3471_11_reg_2093) & xor_ln3471_12_fu_1577_p2) & xor_ln3471_13_fu_1656_p2) & ap_const_lv2_0);
    tmpQ_1_fu_525_p4 <= ((icmp_ln3471_fu_378_p2 & xor_ln3471_fu_498_p2) & ap_const_lv2_0);
    tmpQ_2_fu_1254_p12 <= ((((((((((icmp_ln3471_reg_1858_pp0_iter6_reg & xor_ln3471_reg_1875_pp0_iter6_reg) & xor_ln3471_1_reg_1892_pp0_iter6_reg) & xor_ln3471_2_reg_1975) & xor_ln3471_3_reg_1988) & xor_ln3471_4_reg_2001) & xor_ln3471_5_reg_2014) & xor_ln3471_6_fu_1082_p2) & xor_ln3471_7_fu_1159_p2) & xor_ln3471_8_fu_1241_p2) & ap_const_lv2_0);
    tmpQ_3_fu_610_p5 <= (((icmp_ln3471_fu_378_p2 & xor_ln3471_fu_498_p2) & xor_ln3471_1_fu_583_p2) & ap_const_lv2_0);
    tmpQ_4_fu_784_p6 <= ((((icmp_ln3471_reg_1858 & xor_ln3471_reg_1875) & xor_ln3471_1_reg_1892) & xor_ln3471_2_fu_769_p2) & ap_const_lv2_0);
    tmpQ_5_fu_859_p7 <= (((((icmp_ln3471_reg_1858 & xor_ln3471_reg_1875) & xor_ln3471_1_reg_1892) & xor_ln3471_2_fu_769_p2) & xor_ln3471_3_fu_842_p2) & ap_const_lv2_0);
    tmpQ_6_fu_937_p8 <= ((((((icmp_ln3471_reg_1858 & xor_ln3471_reg_1875) & xor_ln3471_1_reg_1892) & xor_ln3471_2_fu_769_p2) & xor_ln3471_3_fu_842_p2) & xor_ln3471_4_fu_920_p2) & ap_const_lv2_0);
    tmpQ_7_fu_1017_p9 <= (((((((icmp_ln3471_reg_1858 & xor_ln3471_reg_1875) & xor_ln3471_1_reg_1892) & xor_ln3471_2_fu_769_p2) & xor_ln3471_3_fu_842_p2) & xor_ln3471_4_fu_920_p2) & xor_ln3471_5_fu_1000_p2) & ap_const_lv2_0);
    tmpQ_8_fu_1097_p10 <= ((((((((icmp_ln3471_reg_1858_pp0_iter6_reg & xor_ln3471_reg_1875_pp0_iter6_reg) & xor_ln3471_1_reg_1892_pp0_iter6_reg) & xor_ln3471_2_reg_1975) & xor_ln3471_3_reg_1988) & xor_ln3471_4_reg_2001) & xor_ln3471_5_reg_2014) & xor_ln3471_6_fu_1082_p2) & ap_const_lv2_0);
    tmpQ_9_fu_1176_p11 <= (((((((((icmp_ln3471_reg_1858_pp0_iter6_reg & xor_ln3471_reg_1875_pp0_iter6_reg) & xor_ln3471_1_reg_1892_pp0_iter6_reg) & xor_ln3471_2_reg_1975) & xor_ln3471_3_reg_1988) & xor_ln3471_4_reg_2001) & xor_ln3471_5_reg_2014) & xor_ln3471_6_fu_1082_p2) & xor_ln3471_7_fu_1159_p2) & ap_const_lv2_0);
    tmpQ_s_fu_442_p3 <= (icmp_ln3471_fu_378_p2 & ap_const_lv2_0);
    tmpR_1_fu_414_p2 <= std_logic_vector(signed(ap_const_lv5_1C) + signed(R_2_0_cast_fu_410_p1));
    tmp_10_fu_992_p3 <= select_ln3450_5_fu_984_p3(20 downto 20);
    tmp_12_fu_1151_p3 <= select_ln3450_7_fu_1144_p3(26 downto 26);
    tmp_13_cast_fu_384_p4 <= grp_fu_1788_p3(29 downto 28);
    tmp_13_fu_1233_p3 <= select_ln3450_8_fu_1225_p3(29 downto 29);
    tmp_15_fu_1393_p3 <= select_ln3450_10_fu_1386_p3(31 downto 31);
    tmp_16_fu_1478_p3 <= select_ln3450_11_fu_1470_p3(31 downto 31);
    tmp_18_fu_1648_p3 <= select_ln3450_13_fu_1641_p3(31 downto 31);
    tmp_19_fu_1728_p3 <= add_ln3469_14_fu_1722_p2(31 downto 31);
    tmp_1_fu_315_p3 <= gradx1_mat_4366_dout(15 downto 15);
    tmp_20_fu_1736_p3 <= sub_ln3459_14_fu_1706_p2(31 downto 31);
    tmp_2_cast_fu_504_p4 <= grp_fu_1788_p3(27 downto 26);
    tmp_2_fu_393_p4 <= grp_fu_1788_p3(31 downto 30);
    tmp_3_cast_fu_589_p4 <= grp_fu_1788_p3(25 downto 24);
    tmp_3_fu_337_p3 <= grady1_mat_4369_dout(15 downto 15);
    tmp_4_fu_369_p4 <= grp_fu_1788_p3(31 downto 30);
    tmp_5_fu_490_p3 <= select_ln3450_fu_482_p3(5 downto 5);
    tmp_6_fu_575_p3 <= select_ln3450_1_fu_567_p3(8 downto 8);
    tmp_8_fu_834_p3 <= select_ln3450_3_fu_827_p3(14 downto 14);
    tmp_9_fu_912_p3 <= select_ln3450_4_fu_904_p3(17 downto 17);
    tmp_fu_420_p4 <= tmpR_1_fu_414_p2(4 downto 2);
    trunc_ln67_fu_366_p1 <= grp_fu_1788_p3(2 - 1 downto 0);
    xor_ln3471_10_fu_1401_p2 <= (tmp_15_fu_1393_p3 xor ap_const_lv1_1);
    xor_ln3471_11_fu_1486_p2 <= (tmp_16_fu_1478_p3 xor ap_const_lv1_1);
    xor_ln3471_12_fu_1577_p2 <= (tmp_17_reg_2100 xor ap_const_lv1_1);
    xor_ln3471_13_fu_1656_p2 <= (tmp_18_fu_1648_p3 xor ap_const_lv1_1);
    xor_ln3471_14_fu_1752_p2 <= (select_ln3450_14_fu_1744_p3 xor ap_const_lv1_1);
    xor_ln3471_1_fu_583_p2 <= (tmp_6_fu_575_p3 xor ap_const_lv1_1);
    xor_ln3471_2_fu_769_p2 <= (tmp_7_reg_1914 xor ap_const_lv1_1);
    xor_ln3471_3_fu_842_p2 <= (tmp_8_fu_834_p3 xor ap_const_lv1_1);
    xor_ln3471_4_fu_920_p2 <= (tmp_9_fu_912_p3 xor ap_const_lv1_1);
    xor_ln3471_5_fu_1000_p2 <= (tmp_10_fu_992_p3 xor ap_const_lv1_1);
    xor_ln3471_6_fu_1082_p2 <= (tmp_11_reg_2032 xor ap_const_lv1_1);
    xor_ln3471_7_fu_1159_p2 <= (tmp_12_fu_1151_p3 xor ap_const_lv1_1);
    xor_ln3471_8_fu_1241_p2 <= (tmp_13_fu_1233_p3 xor ap_const_lv1_1);
    xor_ln3471_9_fu_1325_p2 <= (tmp_14_reg_2068 xor ap_const_lv1_1);
    xor_ln3471_fu_498_p2 <= (tmp_5_fu_490_p3 xor ap_const_lv1_1);
    zext_ln3459_10_fu_1360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_10_fu_1354_p2),32));
    zext_ln3459_11_fu_1444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_11_fu_1438_p2),32));
    zext_ln3459_12_fu_1531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_12_fu_1525_p2),32));
    zext_ln3459_13_fu_1615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_13_fu_1609_p2),32));
    zext_ln3459_14_fu_1702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_14_fu_1696_p2),32));
    zext_ln3459_1_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_1_fu_535_p2),9));
    zext_ln3459_2_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_2_fu_622_p2),12));
    zext_ln3459_3_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_3_fu_795_p2),15));
    zext_ln3459_4_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_4_fu_872_p2),18));
    zext_ln3459_5_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_5_fu_952_p2),21));
    zext_ln3459_6_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_6_fu_1034_p2),24));
    zext_ln3459_7_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_7_fu_1112_p2),27));
    zext_ln3459_8_fu_1199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_8_fu_1193_p2),30));
    zext_ln3459_9_fu_1279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_9_fu_1273_p2),32));
    zext_ln3459_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3457_fu_450_p2),6));
    zext_ln3469_10_fu_1376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_10_fu_1370_p2),32));
    zext_ln3469_11_fu_1460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_11_fu_1454_p2),32));
    zext_ln3469_12_fu_1547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_12_fu_1541_p2),32));
    zext_ln3469_13_fu_1631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_13_fu_1625_p2),32));
    zext_ln3469_14_fu_1718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_14_fu_1712_p2),32));
    zext_ln3469_1_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_1_fu_551_p2),9));
    zext_ln3469_2_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_2_fu_638_p2),12));
    zext_ln3469_3_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_3_fu_811_p2),15));
    zext_ln3469_4_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_4_fu_888_p2),18));
    zext_ln3469_5_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_5_fu_968_p2),21));
    zext_ln3469_6_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_6_fu_1050_p2),24));
    zext_ln3469_7_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_7_fu_1128_p2),27));
    zext_ln3469_8_fu_1215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_8_fu_1209_p2),30));
    zext_ln3469_9_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_9_fu_1289_p2),32));
    zext_ln3469_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln3467_fu_466_p2),6));
end behav;
