// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module edge_detector_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        grayImg_4230_dout,
        grayImg_4230_empty_n,
        grayImg_4230_read,
        sobelImg_x_4231_din,
        sobelImg_x_4231_full_n,
        sobelImg_x_4231_write,
        sobelImg_y_4232_din,
        sobelImg_y_4232_full_n,
        sobelImg_y_4232_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_state4 = 6'd4;
parameter    ap_ST_fsm_state5 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state10 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] grayImg_4230_dout;
input   grayImg_4230_empty_n;
output   grayImg_4230_read;
output  [7:0] sobelImg_x_4231_din;
input   sobelImg_x_4231_full_n;
output   sobelImg_x_4231_write;
output  [7:0] sobelImg_y_4232_din;
input   sobelImg_y_4232_full_n;
output   sobelImg_y_4232_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg grayImg_4230_read;
reg[7:0] sobelImg_x_4231_din;
reg sobelImg_x_4231_write;
reg[7:0] sobelImg_y_4232_din;
reg sobelImg_y_4232_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    grayImg_4230_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln882_reg_589;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln882_1_reg_640;
reg   [0:0] cmp_i_i533_i_reg_632;
reg    sobelImg_x_4231_blk_n;
reg    ap_enable_reg_pp1_iter3;
reg   [0:0] icmp_ln882_1_reg_640_pp1_iter2_reg;
reg   [0:0] icmp_ln874_2_reg_668;
reg   [0:0] icmp_ln874_2_reg_668_pp1_iter2_reg;
wire    ap_CS_fsm_state10;
reg    sobelImg_y_4232_blk_n;
reg   [10:0] empty_reg_196;
reg   [10:0] empty_35_reg_231;
reg   [7:0] p_Result_3_reg_243;
reg   [7:0] src_buf2_0_V_reg_255;
reg   [7:0] p_Result_2_reg_267;
reg   [7:0] src_buf3_0_V_reg_280;
reg   [7:0] src_buf1_0_V_reg_293;
reg   [7:0] p_Result_s_reg_305;
wire   [0:0] icmp_ln882_fu_378_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] add_ln695_fu_384_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln538_fu_390_p1;
reg   [63:0] zext_ln538_reg_598;
wire   [0:0] icmp_ln352_fu_395_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] cmp_i_i533_i_fu_476_p2;
wire   [1:0] trunc_ln324_fu_482_p1;
reg   [1:0] trunc_ln324_reg_636;
wire   [0:0] icmp_ln882_1_fu_486_p2;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_predicate_op91_read_state7;
reg    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
reg    ap_predicate_op121_write_state9;
reg    ap_predicate_op122_write_state9;
reg    ap_block_state9_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln882_1_reg_640_pp1_iter1_reg;
wire   [10:0] add_ln695_3_fu_492_p2;
reg   [10:0] add_ln695_3_reg_644;
reg    ap_enable_reg_pp1_iter0;
reg   [1:0] p_load36_reg_649;
reg   [10:0] buf_0_V_addr_1_reg_653;
reg   [10:0] buf_1_V_addr_1_reg_658;
reg   [10:0] buf_2_V_addr_reg_663;
wire   [0:0] icmp_ln874_2_fu_505_p2;
wire   [7:0] src_buf1_2_V_fu_514_p5;
wire   [7:0] src_buf2_2_V_fu_527_p5;
wire   [7:0] src_buf3_2_V_fu_540_p5;
wire   [12:0] select_ln425_fu_575_p3;
reg    ap_block_state10;
wire   [10:0] add_ln695_2_fu_583_p2;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter2;
reg    buf_0_V_ce0;
wire   [7:0] buf_0_V_q0;
reg   [10:0] buf_0_V_address1;
reg    buf_0_V_ce1;
reg    buf_0_V_we1;
reg   [7:0] buf_0_V_d1;
reg    buf_1_V_ce0;
wire   [7:0] buf_1_V_q0;
reg   [10:0] buf_1_V_address1;
reg    buf_1_V_ce1;
reg    buf_1_V_we1;
reg   [7:0] buf_1_V_d1;
reg    buf_2_V_ce0;
wire   [7:0] buf_2_V_q0;
wire   [10:0] buf_2_V_address1;
reg    buf_2_V_ce1;
reg    buf_2_V_we1;
reg   [7:0] buf_2_V_d1;
wire    call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_ready;
wire   [7:0] call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_0;
wire   [7:0] call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_1;
wire    p_Repl2_s_xFGradientX3x3_0_0_s_fu_335_ap_ready;
wire   [7:0] p_Repl2_s_xFGradientX3x3_0_0_s_fu_335_ap_return;
wire    p_Repl2_2_xFGradientY3x3_0_0_s_fu_352_ap_ready;
wire   [7:0] p_Repl2_2_xFGradientY3x3_0_0_s_fu_352_ap_return;
reg   [10:0] empty_33_reg_207;
wire    ap_CS_fsm_state4;
wire   [12:0] ap_phi_mux_empty_34_phi_fu_223_p4;
reg   [12:0] empty_34_reg_219;
reg   [10:0] ap_phi_mux_empty_35_phi_fu_235_p4;
wire   [63:0] zext_ln538_1_fu_498_p1;
reg   [1:0] empty_30_fu_96;
wire   [1:0] select_ln365_fu_437_p3;
reg   [1:0] empty_31_fu_100;
wire   [1:0] select_ln365_1_fu_445_p3;
reg   [1:0] empty_32_fu_104;
wire   [1:0] select_ln365_2_fu_453_p3;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln874_fu_431_p2;
wire   [12:0] add_ln695_1_fu_563_p2;
wire   [0:0] icmp_ln874_1_fu_569_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_580;
reg    ap_condition_584;
reg    ap_condition_343;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

edge_detector_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_V_addr_1_reg_653),
    .ce0(buf_0_V_ce0),
    .q0(buf_0_V_q0),
    .address1(buf_0_V_address1),
    .ce1(buf_0_V_ce1),
    .we1(buf_0_V_we1),
    .d1(buf_0_V_d1)
);

edge_detector_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_V_addr_1_reg_658),
    .ce0(buf_1_V_ce0),
    .q0(buf_1_V_q0),
    .address1(buf_1_V_address1),
    .ce1(buf_1_V_ce1),
    .we1(buf_1_V_we1),
    .d1(buf_1_V_d1)
);

edge_detector_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_V_addr_reg_663),
    .ce0(buf_2_V_ce0),
    .q0(buf_2_V_q0),
    .address1(buf_2_V_address1),
    .ce1(buf_2_V_ce1),
    .we1(buf_2_V_we1),
    .d1(buf_2_V_d1)
);

edge_detector_xFSobel3x3_1_1_0_0_s call_ret_xFSobel3x3_1_1_0_0_s_fu_318(
    .ap_ready(call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_ready),
    .p_read2(p_Result_s_reg_305),
    .p_read5(src_buf1_0_V_reg_293),
    .p_read6(src_buf1_2_V_fu_514_p5),
    .p_read7(p_Result_2_reg_267),
    .p_read8(src_buf2_2_V_fu_527_p5),
    .p_read9(p_Result_3_reg_243),
    .p_read10(src_buf3_0_V_reg_280),
    .p_read11(src_buf3_2_V_fu_540_p5),
    .ap_return_0(call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_0),
    .ap_return_1(call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_1)
);

edge_detector_xFGradientX3x3_0_0_s p_Repl2_s_xFGradientX3x3_0_0_s_fu_335(
    .ap_ready(p_Repl2_s_xFGradientX3x3_0_0_s_fu_335_ap_ready),
    .t0(p_Result_s_reg_305),
    .t2(8'd0),
    .m0(p_Result_2_reg_267),
    .m2(8'd0),
    .b0(p_Result_3_reg_243),
    .b2(8'd0),
    .ap_return(p_Repl2_s_xFGradientX3x3_0_0_s_fu_335_ap_return)
);

edge_detector_xFGradientY3x3_0_0_s p_Repl2_2_xFGradientY3x3_0_0_s_fu_352(
    .ap_ready(p_Repl2_2_xFGradientY3x3_0_0_s_fu_352_ap_ready),
    .t0(p_Result_s_reg_305),
    .t1(src_buf1_0_V_reg_293),
    .t2(8'd0),
    .b0(p_Result_3_reg_243),
    .b1(src_buf3_0_V_reg_280),
    .b2(8'd0),
    .ap_return(p_Repl2_2_xFGradientY3x3_0_0_s_fu_352_ap_return)
);

edge_detector_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U44(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(empty_32_fu_104),
    .dout(src_buf1_2_V_fu_514_p5)
);

edge_detector_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U45(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(empty_31_fu_100),
    .dout(src_buf2_2_V_fu_527_p5)
);

edge_detector_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U46(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(empty_30_fu_96),
    .dout(src_buf3_2_V_fu_540_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
        if ((~(ap_phi_mux_empty_34_phi_fu_223_p4 == 13'd2) & ~(ap_phi_mux_empty_34_phi_fu_223_p4 == 13'd0))) begin
            empty_30_fu_96 <= select_ln365_fu_437_p3;
        end else if ((ap_phi_mux_empty_34_phi_fu_223_p4 == 13'd2)) begin
            empty_30_fu_96 <= 2'd2;
        end else if ((ap_phi_mux_empty_34_phi_fu_223_p4 == 13'd0)) begin
            empty_30_fu_96 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
        if ((~(ap_phi_mux_empty_34_phi_fu_223_p4 == 13'd2) & ~(ap_phi_mux_empty_34_phi_fu_223_p4 == 13'd0))) begin
            empty_31_fu_100 <= select_ln365_1_fu_445_p3;
        end else if ((ap_phi_mux_empty_34_phi_fu_223_p4 == 13'd2)) begin
            empty_31_fu_100 <= 2'd1;
        end else if ((ap_phi_mux_empty_34_phi_fu_223_p4 == 13'd0)) begin
            empty_31_fu_100 <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
        if ((~(ap_phi_mux_empty_34_phi_fu_223_p4 == 13'd2) & ~(ap_phi_mux_empty_34_phi_fu_223_p4 == 13'd0))) begin
            empty_32_fu_104 <= select_ln365_2_fu_453_p3;
        end else if ((ap_phi_mux_empty_34_phi_fu_223_p4 == 13'd2)) begin
            empty_32_fu_104 <= 2'd0;
        end else if ((ap_phi_mux_empty_34_phi_fu_223_p4 == 13'd0)) begin
            empty_32_fu_104 <= 2'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_33_reg_207 <= 11'd1;
    end else if ((~((sobelImg_y_4232_full_n == 1'b0) | (sobelImg_x_4231_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        empty_33_reg_207 <= add_ln695_2_fu_583_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_34_reg_219 <= 13'd2;
    end else if ((~((sobelImg_y_4232_full_n == 1'b0) | (sobelImg_x_4231_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        empty_34_reg_219 <= select_ln425_fu_575_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_35_reg_231 <= add_ln695_3_reg_644;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
        empty_35_reg_231 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln882_fu_378_p2 == 1'd0))) begin
        empty_reg_196 <= add_ln695_fu_384_p2;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_196 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_1_reg_640_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_Result_2_reg_267 <= src_buf2_0_V_reg_255;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
        p_Result_2_reg_267 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_1_reg_640_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_Result_3_reg_243 <= src_buf3_0_V_reg_280;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
        p_Result_3_reg_243 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_1_reg_640_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_Result_s_reg_305 <= src_buf1_0_V_reg_293;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
        p_Result_s_reg_305 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_1_reg_640_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf1_0_V_reg_293 <= src_buf1_2_V_fu_514_p5;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
        src_buf1_0_V_reg_293 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_1_reg_640_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf2_0_V_reg_255 <= src_buf2_2_V_fu_527_p5;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
        src_buf2_0_V_reg_255 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_1_reg_640_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_buf3_0_V_reg_280 <= src_buf3_2_V_fu_540_p5;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
        src_buf3_0_V_reg_280 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln695_3_reg_644 <= add_ln695_3_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_1_reg_640 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_0_V_addr_1_reg_653 <= zext_ln538_1_fu_498_p1;
        buf_1_V_addr_1_reg_658 <= zext_ln538_1_fu_498_p1;
        buf_2_V_addr_reg_663 <= zext_ln538_1_fu_498_p1;
        icmp_ln874_2_reg_668 <= icmp_ln874_2_fu_505_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd0))) begin
        cmp_i_i533_i_reg_632 <= cmp_i_i533_i_fu_476_p2;
        trunc_ln324_reg_636 <= trunc_ln324_fu_482_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln874_2_reg_668_pp1_iter2_reg <= icmp_ln874_2_reg_668;
        icmp_ln882_1_reg_640_pp1_iter2_reg <= icmp_ln882_1_reg_640_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln882_1_reg_640 <= icmp_ln882_1_fu_486_p2;
        icmp_ln882_1_reg_640_pp1_iter1_reg <= icmp_ln882_1_reg_640;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln882_reg_589 <= icmp_ln882_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp_i_i533_i_reg_632 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln882_1_fu_486_p2 == 1'd0))) begin
        p_load36_reg_649 <= empty_30_fu_96;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln882_fu_378_p2 == 1'd0))) begin
        zext_ln538_reg_598[10 : 0] <= zext_ln538_fu_390_p1[10 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln882_fu_378_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln882_1_fu_486_p2 == 1'd1))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_empty_35_phi_fu_235_p4 = add_ln695_3_reg_644;
    end else begin
        ap_phi_mux_empty_35_phi_fu_235_p4 = empty_35_reg_231;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_632 == 1'd1) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln324_reg_636 == 2'd0)) | ((cmp_i_i533_i_reg_632 == 1'd0) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load36_reg_649 == 2'd0)))) begin
        buf_0_V_address1 = zext_ln538_1_fu_498_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_0_V_address1 = zext_ln538_fu_390_p1;
    end else begin
        buf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_632 == 1'd1) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln324_reg_636 == 2'd0)) | ((cmp_i_i533_i_reg_632 == 1'd0) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load36_reg_649 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        buf_0_V_ce1 = 1'b1;
    end else begin
        buf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i533_i_reg_632 == 1'd1) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln324_reg_636 == 2'd0))) begin
        buf_0_V_d1 = grayImg_4230_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((cmp_i_i533_i_reg_632 == 1'd0) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load36_reg_649 == 2'd0)))) begin
        buf_0_V_d1 = 8'd0;
    end else begin
        buf_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_632 == 1'd1) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln324_reg_636 == 2'd0)) | ((cmp_i_i533_i_reg_632 == 1'd0) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load36_reg_649 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln882_fu_378_p2 == 1'd0)))) begin
        buf_0_V_we1 = 1'b1;
    end else begin
        buf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_632 == 1'd1) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln324_reg_636 == 2'd1)) | ((cmp_i_i533_i_reg_632 == 1'd0) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load36_reg_649 == 2'd1)))) begin
        buf_1_V_address1 = zext_ln538_1_fu_498_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_1_V_address1 = zext_ln538_reg_598;
    end else begin
        buf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_632 == 1'd1) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln324_reg_636 == 2'd1)) | ((cmp_i_i533_i_reg_632 == 1'd0) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load36_reg_649 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_1_V_ce1 = 1'b1;
    end else begin
        buf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i533_i_reg_632 == 1'd0) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load36_reg_649 == 2'd1))) begin
        buf_1_V_d1 = 8'd0;
    end else if ((((cmp_i_i533_i_reg_632 == 1'd1) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln324_reg_636 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_1_V_d1 = grayImg_4230_dout;
    end else begin
        buf_1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_632 == 1'd1) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln324_reg_636 == 2'd1)) | ((icmp_ln882_reg_589 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((cmp_i_i533_i_reg_632 == 1'd0) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (p_load36_reg_649 == 2'd1)))) begin
        buf_1_V_we1 = 1'b1;
    end else begin
        buf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln324_reg_636 == 2'd1) & ~(trunc_ln324_reg_636 == 2'd0) & (cmp_i_i533_i_reg_632 == 1'd1) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(p_load36_reg_649 == 2'd1) & ~(p_load36_reg_649 == 2'd0) & (cmp_i_i533_i_reg_632 == 1'd0) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_2_V_ce1 = 1'b1;
    end else begin
        buf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_343)) begin
        if ((1'b1 == ap_condition_584)) begin
            buf_2_V_d1 = grayImg_4230_dout;
        end else if ((1'b1 == ap_condition_580)) begin
            buf_2_V_d1 = 8'd0;
        end else begin
            buf_2_V_d1 = 'bx;
        end
    end else begin
        buf_2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln324_reg_636 == 2'd1) & ~(trunc_ln324_reg_636 == 2'd0) & (cmp_i_i533_i_reg_632 == 1'd1) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(p_load36_reg_649 == 2'd1) & ~(p_load36_reg_649 == 2'd0) & (cmp_i_i533_i_reg_632 == 1'd0) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_2_V_we1 = 1'b1;
    end else begin
        buf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_632 == 1'd1) & (icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln882_reg_589 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grayImg_4230_blk_n = grayImg_4230_empty_n;
    end else begin
        grayImg_4230_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op91_read_state7 == 1'b1)) | ((icmp_ln882_reg_589 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grayImg_4230_read = 1'b1;
    end else begin
        grayImg_4230_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((icmp_ln874_2_reg_668_pp1_iter2_reg == 1'd0) & (icmp_ln882_1_reg_640_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0)))) begin
        sobelImg_x_4231_blk_n = sobelImg_x_4231_full_n;
    end else begin
        sobelImg_x_4231_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sobelImg_y_4232_full_n == 1'b0) | (sobelImg_x_4231_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        sobelImg_x_4231_din = p_Repl2_s_xFGradientX3x3_0_0_s_fu_335_ap_return;
    end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001) & (ap_predicate_op121_write_state9 == 1'b1))) begin
        sobelImg_x_4231_din = call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_0;
    end else begin
        sobelImg_x_4231_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op121_write_state9 == 1'b1)) | (~((sobelImg_y_4232_full_n == 1'b0) | (sobelImg_x_4231_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)))) begin
        sobelImg_x_4231_write = 1'b1;
    end else begin
        sobelImg_x_4231_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((icmp_ln874_2_reg_668_pp1_iter2_reg == 1'd0) & (icmp_ln882_1_reg_640_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0)))) begin
        sobelImg_y_4232_blk_n = sobelImg_y_4232_full_n;
    end else begin
        sobelImg_y_4232_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sobelImg_y_4232_full_n == 1'b0) | (sobelImg_x_4231_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        sobelImg_y_4232_din = p_Repl2_2_xFGradientY3x3_0_0_s_fu_352_ap_return;
    end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001) & (ap_predicate_op122_write_state9 == 1'b1))) begin
        sobelImg_y_4232_din = call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_1;
    end else begin
        sobelImg_y_4232_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op122_write_state9 == 1'b1)) | (~((sobelImg_y_4232_full_n == 1'b0) | (sobelImg_x_4231_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)))) begin
        sobelImg_y_4232_write = 1'b1;
    end else begin
        sobelImg_y_4232_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln882_fu_378_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln882_fu_378_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln352_fu_395_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~((sobelImg_y_4232_full_n == 1'b0) | (sobelImg_x_4231_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln695_1_fu_563_p2 = (empty_34_reg_219 + 13'd1);

assign add_ln695_2_fu_583_p2 = (empty_33_reg_207 + 11'd1);

assign add_ln695_3_fu_492_p2 = (ap_phi_mux_empty_35_phi_fu_235_p4 + 11'd1);

assign add_ln695_fu_384_p2 = (empty_reg_196 + 11'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln882_reg_589 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (grayImg_4230_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln882_reg_589 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (grayImg_4230_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_enable_reg_pp1_iter3 == 1'b1) & (((sobelImg_y_4232_full_n == 1'b0) & (ap_predicate_op122_write_state9 == 1'b1)) | ((sobelImg_x_4231_full_n == 1'b0) & (ap_predicate_op121_write_state9 == 1'b1)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (grayImg_4230_empty_n == 1'b0) & (ap_predicate_op91_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter3 == 1'b1) & (((sobelImg_y_4232_full_n == 1'b0) & (ap_predicate_op122_write_state9 == 1'b1)) | ((sobelImg_x_4231_full_n == 1'b0) & (ap_predicate_op121_write_state9 == 1'b1)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (grayImg_4230_empty_n == 1'b0) & (ap_predicate_op91_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter3 == 1'b1) & (((sobelImg_y_4232_full_n == 1'b0) & (ap_predicate_op122_write_state9 == 1'b1)) | ((sobelImg_x_4231_full_n == 1'b0) & (ap_predicate_op121_write_state9 == 1'b1)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (grayImg_4230_empty_n == 1'b0) & (ap_predicate_op91_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state10 = ((sobelImg_y_4232_full_n == 1'b0) | (sobelImg_x_4231_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln882_reg_589 == 1'd0) & (grayImg_4230_empty_n == 1'b0));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = ((grayImg_4230_empty_n == 1'b0) & (ap_predicate_op91_read_state7 == 1'b1));
end

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp1_stage0_iter3 = (((sobelImg_y_4232_full_n == 1'b0) & (ap_predicate_op122_write_state9 == 1'b1)) | ((sobelImg_x_4231_full_n == 1'b0) & (ap_predicate_op121_write_state9 == 1'b1)));
end

always @ (*) begin
    ap_condition_343 = ((icmp_ln882_1_reg_640 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_580 = (~(p_load36_reg_649 == 2'd1) & ~(p_load36_reg_649 == 2'd0) & (cmp_i_i533_i_reg_632 == 1'd0));
end

always @ (*) begin
    ap_condition_584 = (~(trunc_ln324_reg_636 == 2'd1) & ~(trunc_ln324_reg_636 == 2'd0) & (cmp_i_i533_i_reg_632 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_empty_34_phi_fu_223_p4 = empty_34_reg_219;

always @ (*) begin
    ap_predicate_op121_write_state9 = ((icmp_ln874_2_reg_668_pp1_iter2_reg == 1'd0) & (icmp_ln882_1_reg_640_pp1_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op122_write_state9 = ((icmp_ln874_2_reg_668_pp1_iter2_reg == 1'd0) & (icmp_ln882_1_reg_640_pp1_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op91_read_state7 = ((cmp_i_i533_i_reg_632 == 1'd1) & (icmp_ln882_1_reg_640 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign buf_2_V_address1 = zext_ln538_1_fu_498_p1;

assign cmp_i_i533_i_fu_476_p2 = ((empty_33_reg_207 < 11'd1080) ? 1'b1 : 1'b0);

assign icmp_ln352_fu_395_p2 = ((empty_33_reg_207 == 11'd1081) ? 1'b1 : 1'b0);

assign icmp_ln874_1_fu_569_p2 = ((add_ln695_1_fu_563_p2 == 13'd3) ? 1'b1 : 1'b0);

assign icmp_ln874_2_fu_505_p2 = ((empty_35_reg_231 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_431_p2 = ((empty_34_reg_219 == 13'd1) ? 1'b1 : 1'b0);

assign icmp_ln882_1_fu_486_p2 = ((ap_phi_mux_empty_35_phi_fu_235_p4 == 11'd1920) ? 1'b1 : 1'b0);

assign icmp_ln882_fu_378_p2 = ((empty_reg_196 == 11'd1920) ? 1'b1 : 1'b0);

assign select_ln365_1_fu_445_p3 = ((icmp_ln874_fu_431_p2[0:0] === 1'b1) ? 2'd0 : empty_31_fu_100);

assign select_ln365_2_fu_453_p3 = ((icmp_ln874_fu_431_p2[0:0] === 1'b1) ? 2'd2 : empty_32_fu_104);

assign select_ln365_fu_437_p3 = ((icmp_ln874_fu_431_p2[0:0] === 1'b1) ? 2'd1 : empty_30_fu_96);

assign select_ln425_fu_575_p3 = ((icmp_ln874_1_fu_569_p2[0:0] === 1'b1) ? 13'd0 : add_ln695_1_fu_563_p2);

assign start_out = real_start;

assign trunc_ln324_fu_482_p1 = empty_34_reg_219[1:0];

assign zext_ln538_1_fu_498_p1 = empty_35_reg_231;

assign zext_ln538_fu_390_p1 = empty_reg_196;

always @ (posedge ap_clk) begin
    zext_ln538_reg_598[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //edge_detector_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s
