-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity edge_detector_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    grayImg_4230_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    grayImg_4230_empty_n : IN STD_LOGIC;
    grayImg_4230_read : OUT STD_LOGIC;
    sobelImg_x_4231_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    sobelImg_x_4231_full_n : IN STD_LOGIC;
    sobelImg_x_4231_write : OUT STD_LOGIC;
    sobelImg_y_4232_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    sobelImg_y_4232_full_n : IN STD_LOGIC;
    sobelImg_y_4232_write : OUT STD_LOGIC );
end;


architecture behav of edge_detector_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv11_439 : STD_LOGIC_VECTOR (10 downto 0) := "10000111001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal grayImg_4230_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln882_reg_589 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln882_1_reg_640 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i533_i_reg_632 : STD_LOGIC_VECTOR (0 downto 0);
    signal sobelImg_x_4231_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal icmp_ln882_1_reg_640_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_2_reg_668 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_2_reg_668_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal sobelImg_y_4232_blk_n : STD_LOGIC;
    signal empty_reg_196 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_35_reg_231 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_3_reg_243 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_0_V_reg_255 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_reg_267 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_0_V_reg_280 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_0_V_reg_293 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_reg_305 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln882_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln695_fu_384_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln538_fu_390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln538_reg_598 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln352_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal cmp_i_i533_i_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln324_fu_482_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln324_reg_636 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln882_1_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op91_read_state7 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2 : BOOLEAN;
    signal ap_predicate_op121_write_state9 : BOOLEAN;
    signal ap_predicate_op122_write_state9 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln882_1_reg_640_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_3_fu_492_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln695_3_reg_644 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal p_load36_reg_649 : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_0_V_addr_1_reg_653 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_addr_1_reg_658 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_addr_reg_663 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln874_2_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf1_2_V_fu_514_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_2_V_fu_527_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_2_V_fu_540_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln425_fu_575_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state10 : BOOLEAN;
    signal add_ln695_2_fu_583_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_1_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal buf_2_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_ready : STD_LOGIC;
    signal call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_s_xFGradientX3x3_0_0_s_fu_335_ap_ready : STD_LOGIC;
    signal p_Repl2_s_xFGradientX3x3_0_0_s_fu_335_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_2_xFGradientY3x3_0_0_s_fu_352_ap_ready : STD_LOGIC;
    signal p_Repl2_2_xFGradientY3x3_0_0_s_fu_352_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_33_reg_207 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_phi_mux_empty_34_phi_fu_223_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_34_reg_219 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_empty_35_phi_fu_235_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln538_1_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_30_fu_96 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln365_fu_437_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_31_fu_100 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln365_1_fu_445_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_32_fu_104 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln365_2_fu_453_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal icmp_ln874_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_1_fu_563_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln874_1_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_580 : BOOLEAN;
    signal ap_condition_584 : BOOLEAN;
    signal ap_condition_343 : BOOLEAN;

    component edge_detector_xFSobel3x3_1_1_0_0_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component edge_detector_xFGradientX3x3_0_0_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        t0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t2 : IN STD_LOGIC_VECTOR (7 downto 0);
        m0 : IN STD_LOGIC_VECTOR (7 downto 0);
        m2 : IN STD_LOGIC_VECTOR (7 downto 0);
        b0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component edge_detector_xFGradientY3x3_0_0_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        t0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t1 : IN STD_LOGIC_VECTOR (7 downto 0);
        t2 : IN STD_LOGIC_VECTOR (7 downto 0);
        b0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b1 : IN STD_LOGIC_VECTOR (7 downto 0);
        b2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component edge_detector_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component edge_detector_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component edge_detector_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_addr_1_reg_653,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component edge_detector_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_addr_1_reg_658,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => buf_1_V_d1);

    buf_2_V_U : component edge_detector_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_addr_reg_663,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => buf_2_V_d1);

    call_ret_xFSobel3x3_1_1_0_0_s_fu_318 : component edge_detector_xFSobel3x3_1_1_0_0_s
    port map (
        ap_ready => call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_ready,
        p_read2 => p_Result_s_reg_305,
        p_read5 => src_buf1_0_V_reg_293,
        p_read6 => src_buf1_2_V_fu_514_p5,
        p_read7 => p_Result_2_reg_267,
        p_read8 => src_buf2_2_V_fu_527_p5,
        p_read9 => p_Result_3_reg_243,
        p_read10 => src_buf3_0_V_reg_280,
        p_read11 => src_buf3_2_V_fu_540_p5,
        ap_return_0 => call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_0,
        ap_return_1 => call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_1);

    p_Repl2_s_xFGradientX3x3_0_0_s_fu_335 : component edge_detector_xFGradientX3x3_0_0_s
    port map (
        ap_ready => p_Repl2_s_xFGradientX3x3_0_0_s_fu_335_ap_ready,
        t0 => p_Result_s_reg_305,
        t2 => ap_const_lv8_0,
        m0 => p_Result_2_reg_267,
        m2 => ap_const_lv8_0,
        b0 => p_Result_3_reg_243,
        b2 => ap_const_lv8_0,
        ap_return => p_Repl2_s_xFGradientX3x3_0_0_s_fu_335_ap_return);

    p_Repl2_2_xFGradientY3x3_0_0_s_fu_352 : component edge_detector_xFGradientY3x3_0_0_s
    port map (
        ap_ready => p_Repl2_2_xFGradientY3x3_0_0_s_fu_352_ap_ready,
        t0 => p_Result_s_reg_305,
        t1 => src_buf1_0_V_reg_293,
        t2 => ap_const_lv8_0,
        b0 => p_Result_3_reg_243,
        b1 => src_buf3_0_V_reg_280,
        b2 => ap_const_lv8_0,
        ap_return => p_Repl2_2_xFGradientY3x3_0_0_s_fu_352_ap_return);

    mux_32_8_1_1_U44 : component edge_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => empty_32_fu_104,
        dout => src_buf1_2_V_fu_514_p5);

    mux_32_8_1_1_U45 : component edge_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => empty_31_fu_100,
        dout => src_buf2_2_V_fu_527_p5);

    mux_32_8_1_1_U46 : component edge_detector_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => empty_30_fu_96,
        dout => src_buf3_2_V_fu_540_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp1_flush_enable)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_30_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then
                if ((not((ap_phi_mux_empty_34_phi_fu_223_p4 = ap_const_lv13_2)) and not((ap_phi_mux_empty_34_phi_fu_223_p4 = ap_const_lv13_0)))) then 
                    empty_30_fu_96 <= select_ln365_fu_437_p3;
                elsif ((ap_phi_mux_empty_34_phi_fu_223_p4 = ap_const_lv13_2)) then 
                    empty_30_fu_96 <= ap_const_lv2_2;
                elsif ((ap_phi_mux_empty_34_phi_fu_223_p4 = ap_const_lv13_0)) then 
                    empty_30_fu_96 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    empty_31_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then
                if ((not((ap_phi_mux_empty_34_phi_fu_223_p4 = ap_const_lv13_2)) and not((ap_phi_mux_empty_34_phi_fu_223_p4 = ap_const_lv13_0)))) then 
                    empty_31_fu_100 <= select_ln365_1_fu_445_p3;
                elsif ((ap_phi_mux_empty_34_phi_fu_223_p4 = ap_const_lv13_2)) then 
                    empty_31_fu_100 <= ap_const_lv2_1;
                elsif ((ap_phi_mux_empty_34_phi_fu_223_p4 = ap_const_lv13_0)) then 
                    empty_31_fu_100 <= ap_const_lv2_2;
                end if;
            end if; 
        end if;
    end process;

    empty_32_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then
                if ((not((ap_phi_mux_empty_34_phi_fu_223_p4 = ap_const_lv13_2)) and not((ap_phi_mux_empty_34_phi_fu_223_p4 = ap_const_lv13_0)))) then 
                    empty_32_fu_104 <= select_ln365_2_fu_453_p3;
                elsif ((ap_phi_mux_empty_34_phi_fu_223_p4 = ap_const_lv13_2)) then 
                    empty_32_fu_104 <= ap_const_lv2_0;
                elsif ((ap_phi_mux_empty_34_phi_fu_223_p4 = ap_const_lv13_0)) then 
                    empty_32_fu_104 <= ap_const_lv2_1;
                end if;
            end if; 
        end if;
    end process;

    empty_33_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                empty_33_reg_207 <= ap_const_lv11_1;
            elsif ((not(((sobelImg_y_4232_full_n = ap_const_logic_0) or (sobelImg_x_4231_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                empty_33_reg_207 <= add_ln695_2_fu_583_p2;
            end if; 
        end if;
    end process;

    empty_34_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                empty_34_reg_219 <= ap_const_lv13_2;
            elsif ((not(((sobelImg_y_4232_full_n = ap_const_logic_0) or (sobelImg_x_4231_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                empty_34_reg_219 <= select_ln425_fu_575_p3;
            end if; 
        end if;
    end process;

    empty_35_reg_231_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                empty_35_reg_231 <= add_ln695_3_reg_644;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then 
                empty_35_reg_231 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    empty_reg_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln882_fu_378_p2 = ap_const_lv1_0))) then 
                empty_reg_196 <= add_ln695_fu_384_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                empty_reg_196 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    p_Result_2_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_1_reg_640_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_Result_2_reg_267 <= src_buf2_0_V_reg_255;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then 
                p_Result_2_reg_267 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    p_Result_3_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_1_reg_640_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_Result_3_reg_243 <= src_buf3_0_V_reg_280;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then 
                p_Result_3_reg_243 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    p_Result_s_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_1_reg_640_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_Result_s_reg_305 <= src_buf1_0_V_reg_293;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then 
                p_Result_s_reg_305 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf1_0_V_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_1_reg_640_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf1_0_V_reg_293 <= src_buf1_2_V_fu_514_p5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then 
                src_buf1_0_V_reg_293 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf2_0_V_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_1_reg_640_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf2_0_V_reg_255 <= src_buf2_2_V_fu_527_p5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then 
                src_buf2_0_V_reg_255 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf3_0_V_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_1_reg_640_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf3_0_V_reg_280 <= src_buf3_2_V_fu_540_p5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then 
                src_buf3_0_V_reg_280 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                add_ln695_3_reg_644 <= add_ln695_3_fu_492_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                buf_0_V_addr_1_reg_653 <= zext_ln538_1_fu_498_p1(11 - 1 downto 0);
                buf_1_V_addr_1_reg_658 <= zext_ln538_1_fu_498_p1(11 - 1 downto 0);
                buf_2_V_addr_reg_663 <= zext_ln538_1_fu_498_p1(11 - 1 downto 0);
                icmp_ln874_2_reg_668 <= icmp_ln874_2_fu_505_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_0))) then
                cmp_i_i533_i_reg_632 <= cmp_i_i533_i_fu_476_p2;
                trunc_ln324_reg_636 <= trunc_ln324_fu_482_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln874_2_reg_668_pp1_iter2_reg <= icmp_ln874_2_reg_668;
                icmp_ln882_1_reg_640_pp1_iter2_reg <= icmp_ln882_1_reg_640_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln882_1_reg_640 <= icmp_ln882_1_fu_486_p2;
                icmp_ln882_1_reg_640_pp1_iter1_reg <= icmp_ln882_1_reg_640;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln882_reg_589 <= icmp_ln882_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp_i_i533_i_reg_632 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln882_1_fu_486_p2 = ap_const_lv1_0))) then
                p_load36_reg_649 <= empty_30_fu_96;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln882_fu_378_p2 = ap_const_lv1_0))) then
                    zext_ln538_reg_598(10 downto 0) <= zext_ln538_fu_390_p1(10 downto 0);
            end if;
        end if;
    end process;
    zext_ln538_reg_598(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, sobelImg_x_4231_full_n, sobelImg_y_4232_full_n, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, icmp_ln882_fu_378_p2, ap_enable_reg_pp0_iter0, icmp_ln352_fu_395_p2, ap_CS_fsm_state5, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln882_fu_378_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln882_fu_378_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                if ((not(((sobelImg_y_4232_full_n = ap_const_logic_0) or (sobelImg_x_4231_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln695_1_fu_563_p2 <= std_logic_vector(unsigned(empty_34_reg_219) + unsigned(ap_const_lv13_1));
    add_ln695_2_fu_583_p2 <= std_logic_vector(unsigned(empty_33_reg_207) + unsigned(ap_const_lv11_1));
    add_ln695_3_fu_492_p2 <= std_logic_vector(unsigned(ap_phi_mux_empty_35_phi_fu_235_p4) + unsigned(ap_const_lv11_1));
    add_ln695_fu_384_p2 <= std_logic_vector(unsigned(empty_reg_196) + unsigned(ap_const_lv11_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(5);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(grayImg_4230_empty_n, ap_enable_reg_pp0_iter1, icmp_ln882_reg_589)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln882_reg_589 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (grayImg_4230_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(grayImg_4230_empty_n, ap_enable_reg_pp0_iter1, icmp_ln882_reg_589)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln882_reg_589 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (grayImg_4230_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(grayImg_4230_empty_n, sobelImg_x_4231_full_n, sobelImg_y_4232_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_predicate_op91_read_state7, ap_predicate_op121_write_state9, ap_predicate_op122_write_state9)
    begin
                ap_block_pp1_stage0_01001 <= (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (((sobelImg_y_4232_full_n = ap_const_logic_0) and (ap_predicate_op122_write_state9 = ap_const_boolean_1)) or ((sobelImg_x_4231_full_n = ap_const_logic_0) and (ap_predicate_op121_write_state9 = ap_const_boolean_1)))) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (grayImg_4230_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(grayImg_4230_empty_n, sobelImg_x_4231_full_n, sobelImg_y_4232_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_predicate_op91_read_state7, ap_predicate_op121_write_state9, ap_predicate_op122_write_state9)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (((sobelImg_y_4232_full_n = ap_const_logic_0) and (ap_predicate_op122_write_state9 = ap_const_boolean_1)) or ((sobelImg_x_4231_full_n = ap_const_logic_0) and (ap_predicate_op121_write_state9 = ap_const_boolean_1)))) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (grayImg_4230_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(grayImg_4230_empty_n, sobelImg_x_4231_full_n, sobelImg_y_4232_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_predicate_op91_read_state7, ap_predicate_op121_write_state9, ap_predicate_op122_write_state9)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (((sobelImg_y_4232_full_n = ap_const_logic_0) and (ap_predicate_op122_write_state9 = ap_const_boolean_1)) or ((sobelImg_x_4231_full_n = ap_const_logic_0) and (ap_predicate_op121_write_state9 = ap_const_boolean_1)))) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (grayImg_4230_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state7 = ap_const_boolean_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state10_assign_proc : process(sobelImg_x_4231_full_n, sobelImg_y_4232_full_n)
    begin
                ap_block_state10 <= ((sobelImg_y_4232_full_n = ap_const_logic_0) or (sobelImg_x_4231_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(grayImg_4230_empty_n, icmp_ln882_reg_589)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln882_reg_589 = ap_const_lv1_0) and (grayImg_4230_empty_n = ap_const_logic_0));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter1_assign_proc : process(grayImg_4230_empty_n, ap_predicate_op91_read_state7)
    begin
                ap_block_state7_pp1_stage0_iter1 <= ((grayImg_4230_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state7 = ap_const_boolean_1));
    end process;

        ap_block_state8_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp1_stage0_iter3_assign_proc : process(sobelImg_x_4231_full_n, sobelImg_y_4232_full_n, ap_predicate_op121_write_state9, ap_predicate_op122_write_state9)
    begin
                ap_block_state9_pp1_stage0_iter3 <= (((sobelImg_y_4232_full_n = ap_const_logic_0) and (ap_predicate_op122_write_state9 = ap_const_boolean_1)) or ((sobelImg_x_4231_full_n = ap_const_logic_0) and (ap_predicate_op121_write_state9 = ap_const_boolean_1)));
    end process;


    ap_condition_343_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln882_1_reg_640)
    begin
                ap_condition_343 <= ((icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_580_assign_proc : process(cmp_i_i533_i_reg_632, p_load36_reg_649)
    begin
                ap_condition_580 <= (not((p_load36_reg_649 = ap_const_lv2_1)) and not((p_load36_reg_649 = ap_const_lv2_0)) and (cmp_i_i533_i_reg_632 = ap_const_lv1_0));
    end process;


    ap_condition_584_assign_proc : process(cmp_i_i533_i_reg_632, trunc_ln324_reg_636)
    begin
                ap_condition_584 <= (not((trunc_ln324_reg_636 = ap_const_lv2_1)) and not((trunc_ln324_reg_636 = ap_const_lv2_0)) and (cmp_i_i533_i_reg_632 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln882_fu_378_p2)
    begin
        if ((icmp_ln882_fu_378_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_flush_enable_assign_proc : process(ap_CS_fsm_pp1_stage0, icmp_ln882_1_fu_486_p2, ap_block_pp1_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln882_1_fu_486_p2 = ap_const_lv1_1))) then 
            ap_condition_pp1_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp1_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln352_fu_395_p2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_empty_34_phi_fu_223_p4 <= empty_34_reg_219;

    ap_phi_mux_empty_35_phi_fu_235_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln882_1_reg_640, empty_35_reg_231, add_ln695_3_reg_644)
    begin
        if (((icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_empty_35_phi_fu_235_p4 <= add_ln695_3_reg_644;
        else 
            ap_phi_mux_empty_35_phi_fu_235_p4 <= empty_35_reg_231;
        end if; 
    end process;


    ap_predicate_op121_write_state9_assign_proc : process(icmp_ln882_1_reg_640_pp1_iter2_reg, icmp_ln874_2_reg_668_pp1_iter2_reg)
    begin
                ap_predicate_op121_write_state9 <= ((icmp_ln874_2_reg_668_pp1_iter2_reg = ap_const_lv1_0) and (icmp_ln882_1_reg_640_pp1_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op122_write_state9_assign_proc : process(icmp_ln882_1_reg_640_pp1_iter2_reg, icmp_ln874_2_reg_668_pp1_iter2_reg)
    begin
                ap_predicate_op122_write_state9 <= ((icmp_ln874_2_reg_668_pp1_iter2_reg = ap_const_lv1_0) and (icmp_ln882_1_reg_640_pp1_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op91_read_state7_assign_proc : process(icmp_ln882_1_reg_640, cmp_i_i533_i_reg_632)
    begin
                ap_predicate_op91_read_state7 <= ((cmp_i_i533_i_reg_632 = ap_const_lv1_1) and (icmp_ln882_1_reg_640 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;

    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln882_1_reg_640, cmp_i_i533_i_reg_632, ap_enable_reg_pp0_iter0, zext_ln538_fu_390_p1, trunc_ln324_reg_636, p_load36_reg_649, zext_ln538_1_fu_498_p1)
    begin
        if ((((cmp_i_i533_i_reg_632 = ap_const_lv1_1) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_636 = ap_const_lv2_0)) or ((cmp_i_i533_i_reg_632 = ap_const_lv1_0) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load36_reg_649 = ap_const_lv2_0)))) then 
            buf_0_V_address1 <= zext_ln538_1_fu_498_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buf_0_V_address1 <= zext_ln538_fu_390_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln882_1_reg_640, cmp_i_i533_i_reg_632, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, trunc_ln324_reg_636, ap_block_pp1_stage0_11001, p_load36_reg_649)
    begin
        if ((((cmp_i_i533_i_reg_632 = ap_const_lv1_1) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_636 = ap_const_lv2_0)) or ((cmp_i_i533_i_reg_632 = ap_const_lv1_0) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load36_reg_649 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(grayImg_4230_dout, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln882_1_reg_640, cmp_i_i533_i_reg_632, ap_enable_reg_pp0_iter0, trunc_ln324_reg_636, p_load36_reg_649)
    begin
        if (((cmp_i_i533_i_reg_632 = ap_const_lv1_1) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_636 = ap_const_lv2_0))) then 
            buf_0_V_d1 <= grayImg_4230_dout;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((cmp_i_i533_i_reg_632 = ap_const_lv1_0) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load36_reg_649 = ap_const_lv2_0)))) then 
            buf_0_V_d1 <= ap_const_lv8_0;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln882_1_reg_640, cmp_i_i533_i_reg_632, icmp_ln882_fu_378_p2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, trunc_ln324_reg_636, ap_block_pp1_stage0_11001, p_load36_reg_649)
    begin
        if ((((cmp_i_i533_i_reg_632 = ap_const_lv1_1) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_636 = ap_const_lv2_0)) or ((cmp_i_i533_i_reg_632 = ap_const_lv1_0) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load36_reg_649 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln882_fu_378_p2 = ap_const_lv1_0)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln882_1_reg_640, cmp_i_i533_i_reg_632, zext_ln538_reg_598, trunc_ln324_reg_636, p_load36_reg_649, zext_ln538_1_fu_498_p1)
    begin
        if ((((cmp_i_i533_i_reg_632 = ap_const_lv1_1) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_636 = ap_const_lv2_1)) or ((cmp_i_i533_i_reg_632 = ap_const_lv1_0) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load36_reg_649 = ap_const_lv2_1)))) then 
            buf_1_V_address1 <= zext_ln538_1_fu_498_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_1_V_address1 <= zext_ln538_reg_598(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln882_1_reg_640, cmp_i_i533_i_reg_632, ap_block_pp0_stage0_11001, trunc_ln324_reg_636, ap_block_pp1_stage0_11001, p_load36_reg_649)
    begin
        if ((((cmp_i_i533_i_reg_632 = ap_const_lv1_1) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_636 = ap_const_lv2_1)) or ((cmp_i_i533_i_reg_632 = ap_const_lv1_0) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load36_reg_649 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d1_assign_proc : process(grayImg_4230_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln882_1_reg_640, cmp_i_i533_i_reg_632, trunc_ln324_reg_636, p_load36_reg_649)
    begin
        if (((cmp_i_i533_i_reg_632 = ap_const_lv1_0) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load36_reg_649 = ap_const_lv2_1))) then 
            buf_1_V_d1 <= ap_const_lv8_0;
        elsif ((((cmp_i_i533_i_reg_632 = ap_const_lv1_1) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_636 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_1_V_d1 <= grayImg_4230_dout;
        else 
            buf_1_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln882_reg_589, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln882_1_reg_640, cmp_i_i533_i_reg_632, ap_block_pp0_stage0_11001, trunc_ln324_reg_636, ap_block_pp1_stage0_11001, p_load36_reg_649)
    begin
        if ((((cmp_i_i533_i_reg_632 = ap_const_lv1_1) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln324_reg_636 = ap_const_lv2_1)) or ((icmp_ln882_reg_589 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((cmp_i_i533_i_reg_632 = ap_const_lv1_0) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_load36_reg_649 = ap_const_lv2_1)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_V_address1 <= zext_ln538_1_fu_498_p1(11 - 1 downto 0);

    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln882_1_reg_640, cmp_i_i533_i_reg_632, trunc_ln324_reg_636, ap_block_pp1_stage0_11001, p_load36_reg_649)
    begin
        if (((not((trunc_ln324_reg_636 = ap_const_lv2_1)) and not((trunc_ln324_reg_636 = ap_const_lv2_0)) and (cmp_i_i533_i_reg_632 = ap_const_lv1_1) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not((p_load36_reg_649 = ap_const_lv2_1)) and not((p_load36_reg_649 = ap_const_lv2_0)) and (cmp_i_i533_i_reg_632 = ap_const_lv1_0) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d1_assign_proc : process(grayImg_4230_dout, ap_condition_580, ap_condition_584, ap_condition_343)
    begin
        if ((ap_const_boolean_1 = ap_condition_343)) then
            if ((ap_const_boolean_1 = ap_condition_584)) then 
                buf_2_V_d1 <= grayImg_4230_dout;
            elsif ((ap_const_boolean_1 = ap_condition_580)) then 
                buf_2_V_d1 <= ap_const_lv8_0;
            else 
                buf_2_V_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_2_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln882_1_reg_640, cmp_i_i533_i_reg_632, trunc_ln324_reg_636, ap_block_pp1_stage0_11001, p_load36_reg_649)
    begin
        if (((not((trunc_ln324_reg_636 = ap_const_lv2_1)) and not((trunc_ln324_reg_636 = ap_const_lv2_0)) and (cmp_i_i533_i_reg_632 = ap_const_lv1_1) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or (not((p_load36_reg_649 = ap_const_lv2_1)) and not((p_load36_reg_649 = ap_const_lv2_0)) and (cmp_i_i533_i_reg_632 = ap_const_lv1_0) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i533_i_fu_476_p2 <= "1" when (unsigned(empty_33_reg_207) < unsigned(ap_const_lv11_438)) else "0";

    grayImg_4230_blk_n_assign_proc : process(grayImg_4230_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln882_reg_589, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln882_1_reg_640, cmp_i_i533_i_reg_632)
    begin
        if ((((cmp_i_i533_i_reg_632 = ap_const_lv1_1) and (icmp_ln882_1_reg_640 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln882_reg_589 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grayImg_4230_blk_n <= grayImg_4230_empty_n;
        else 
            grayImg_4230_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    grayImg_4230_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln882_reg_589, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_11001, ap_predicate_op91_read_state7, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op91_read_state7 = ap_const_boolean_1)) or ((icmp_ln882_reg_589 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grayImg_4230_read <= ap_const_logic_1;
        else 
            grayImg_4230_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln352_fu_395_p2 <= "1" when (empty_33_reg_207 = ap_const_lv11_439) else "0";
    icmp_ln874_1_fu_569_p2 <= "1" when (add_ln695_1_fu_563_p2 = ap_const_lv13_3) else "0";
    icmp_ln874_2_fu_505_p2 <= "1" when (empty_35_reg_231 = ap_const_lv11_0) else "0";
    icmp_ln874_fu_431_p2 <= "1" when (empty_34_reg_219 = ap_const_lv13_1) else "0";
    icmp_ln882_1_fu_486_p2 <= "1" when (ap_phi_mux_empty_35_phi_fu_235_p4 = ap_const_lv11_780) else "0";
    icmp_ln882_fu_378_p2 <= "1" when (empty_reg_196 = ap_const_lv11_780) else "0";

    internal_ap_ready_assign_proc : process(icmp_ln352_fu_395_p2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln352_fu_395_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln365_1_fu_445_p3 <= 
        ap_const_lv2_0 when (icmp_ln874_fu_431_p2(0) = '1') else 
        empty_31_fu_100;
    select_ln365_2_fu_453_p3 <= 
        ap_const_lv2_2 when (icmp_ln874_fu_431_p2(0) = '1') else 
        empty_32_fu_104;
    select_ln365_fu_437_p3 <= 
        ap_const_lv2_1 when (icmp_ln874_fu_431_p2(0) = '1') else 
        empty_30_fu_96;
    select_ln425_fu_575_p3 <= 
        ap_const_lv13_0 when (icmp_ln874_1_fu_569_p2(0) = '1') else 
        add_ln695_1_fu_563_p2;

    sobelImg_x_4231_blk_n_assign_proc : process(sobelImg_x_4231_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln882_1_reg_640_pp1_iter2_reg, icmp_ln874_2_reg_668_pp1_iter2_reg, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((icmp_ln874_2_reg_668_pp1_iter2_reg = ap_const_lv1_0) and (icmp_ln882_1_reg_640_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            sobelImg_x_4231_blk_n <= sobelImg_x_4231_full_n;
        else 
            sobelImg_x_4231_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sobelImg_x_4231_din_assign_proc : process(sobelImg_x_4231_full_n, sobelImg_y_4232_full_n, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, ap_predicate_op121_write_state9, call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_0, p_Repl2_s_xFGradientX3x3_0_0_s_fu_335_ap_return, ap_block_pp1_stage0_01001)
    begin
        if ((not(((sobelImg_y_4232_full_n = ap_const_logic_0) or (sobelImg_x_4231_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sobelImg_x_4231_din <= p_Repl2_s_xFGradientX3x3_0_0_s_fu_335_ap_return;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_predicate_op121_write_state9 = ap_const_boolean_1))) then 
            sobelImg_x_4231_din <= call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_0;
        else 
            sobelImg_x_4231_din <= "XXXXXXXX";
        end if; 
    end process;


    sobelImg_x_4231_write_assign_proc : process(sobelImg_x_4231_full_n, sobelImg_y_4232_full_n, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, ap_predicate_op121_write_state9, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op121_write_state9 = ap_const_boolean_1)) or (not(((sobelImg_y_4232_full_n = ap_const_logic_0) or (sobelImg_x_4231_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sobelImg_x_4231_write <= ap_const_logic_1;
        else 
            sobelImg_x_4231_write <= ap_const_logic_0;
        end if; 
    end process;


    sobelImg_y_4232_blk_n_assign_proc : process(sobelImg_y_4232_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln882_1_reg_640_pp1_iter2_reg, icmp_ln874_2_reg_668_pp1_iter2_reg, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((icmp_ln874_2_reg_668_pp1_iter2_reg = ap_const_lv1_0) and (icmp_ln882_1_reg_640_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            sobelImg_y_4232_blk_n <= sobelImg_y_4232_full_n;
        else 
            sobelImg_y_4232_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sobelImg_y_4232_din_assign_proc : process(sobelImg_x_4231_full_n, sobelImg_y_4232_full_n, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, ap_predicate_op122_write_state9, call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_1, p_Repl2_2_xFGradientY3x3_0_0_s_fu_352_ap_return, ap_block_pp1_stage0_01001)
    begin
        if ((not(((sobelImg_y_4232_full_n = ap_const_logic_0) or (sobelImg_x_4231_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sobelImg_y_4232_din <= p_Repl2_2_xFGradientY3x3_0_0_s_fu_352_ap_return;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_predicate_op122_write_state9 = ap_const_boolean_1))) then 
            sobelImg_y_4232_din <= call_ret_xFSobel3x3_1_1_0_0_s_fu_318_ap_return_1;
        else 
            sobelImg_y_4232_din <= "XXXXXXXX";
        end if; 
    end process;


    sobelImg_y_4232_write_assign_proc : process(sobelImg_x_4231_full_n, sobelImg_y_4232_full_n, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, ap_predicate_op122_write_state9, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op122_write_state9 = ap_const_boolean_1)) or (not(((sobelImg_y_4232_full_n = ap_const_logic_0) or (sobelImg_x_4231_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sobelImg_y_4232_write <= ap_const_logic_1;
        else 
            sobelImg_y_4232_write <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln324_fu_482_p1 <= empty_34_reg_219(2 - 1 downto 0);
    zext_ln538_1_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_35_reg_231),64));
    zext_ln538_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_196),64));
end behav;
