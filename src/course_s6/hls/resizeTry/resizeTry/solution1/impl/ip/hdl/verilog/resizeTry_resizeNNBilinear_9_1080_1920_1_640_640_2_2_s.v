// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module resizeTry_resizeNNBilinear_9_1080_1920_1_640_640_2_2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        img_src_4180_dout,
        img_src_4180_empty_n,
        img_src_4180_read,
        img_dst_4181_din,
        img_dst_4181_full_n,
        img_dst_4181_write
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_pp0_stage0 = 9'd2;
parameter    ap_ST_fsm_state4 = 9'd4;
parameter    ap_ST_fsm_state5 = 9'd8;
parameter    ap_ST_fsm_state6 = 9'd16;
parameter    ap_ST_fsm_state7 = 9'd32;
parameter    ap_ST_fsm_state8 = 9'd64;
parameter    ap_ST_fsm_pp1_stage0 = 9'd128;
parameter    ap_ST_fsm_state18 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [23:0] img_src_4180_dout;
input   img_src_4180_empty_n;
output   img_src_4180_read;
output  [23:0] img_dst_4181_din;
input   img_dst_4181_full_n;
output   img_dst_4181_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg img_src_4180_read;
reg img_dst_4181_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    img_src_4180_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln331_reg_1875;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln388_reg_2020;
reg   [0:0] cmp84_reg_1973;
reg   [0:0] icmp_ln886_reg_2029;
reg    img_dst_4181_blk_n;
reg    ap_enable_reg_pp1_iter8;
reg   [0:0] cmp282_reg_1988;
reg   [0:0] and_ln486_1_reg_2044;
reg   [0:0] and_ln486_1_reg_2044_pp1_iter7_reg;
reg   [11:0] indvar_flatten_reg_359;
reg   [1:0] i_reg_370;
reg   [10:0] j_reg_381;
reg   [10:0] j_1_reg_439;
reg   [10:0] j_1_reg_439_pp1_iter1_reg;
wire    ap_block_state9_pp1_stage0_iter0;
reg    ap_predicate_op115_read_state10;
reg    ap_block_state10_pp1_stage0_iter1;
wire    ap_block_state11_pp1_stage0_iter2;
wire    ap_block_state12_pp1_stage0_iter3;
wire    ap_block_state13_pp1_stage0_iter4;
wire    ap_block_state14_pp1_stage0_iter5;
wire    ap_block_state15_pp1_stage0_iter6;
wire    ap_block_state16_pp1_stage0_iter7;
reg    ap_predicate_op364_write_state17;
reg    ap_block_state17_pp1_stage0_iter8;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] flag_write_reg_451;
wire   [33:0] grp_xfUDivResize_fu_560_ap_return;
reg   [33:0] Xscale64_reg_571;
wire    ap_CS_fsm_state4;
reg   [33:0] Yscale64_reg_577;
wire    ap_CS_fsm_state5;
wire   [41:0] grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;
reg   [41:0] indexx_pre_comp_V_reg_594;
wire   [0:0] icmp_ln331_fu_609_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [11:0] add_ln331_fu_615_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [10:0] select_ln331_fu_627_p3;
reg   [10:0] select_ln331_reg_1884;
wire   [1:0] select_ln331_1_fu_641_p3;
reg   [1:0] select_ln331_1_reg_1889;
wire   [0:0] trunc_ln331_fu_649_p1;
reg   [0:0] trunc_ln331_reg_1894;
wire   [10:0] add_ln336_fu_653_p2;
reg   [21:0] trunc_ln1_reg_1923;
wire   [42:0] zext_ln703_fu_694_p1;
reg   [42:0] zext_ln703_reg_1928;
wire   [0:0] icmp_ln381_fu_698_p2;
reg   [0:0] icmp_ln381_reg_1933;
wire    ap_CS_fsm_state6;
wire   [10:0] i_2_fu_704_p2;
reg   [10:0] i_2_reg_1937;
wire   [32:0] trunc_ln230_fu_715_p1;
reg   [32:0] trunc_ln230_reg_1942;
wire    ap_CS_fsm_state7;
wire   [21:0] trunc_ln230_1_fu_719_p1;
reg   [21:0] trunc_ln230_1_reg_1947;
wire   [42:0] ret_V_fu_727_p2;
reg   [42:0] ret_V_reg_1952;
reg   [0:0] p_Result_s_reg_1957;
reg   [0:0] tmp_5_reg_1962;
wire   [0:0] icmp_ln1494_fu_748_p2;
reg   [0:0] icmp_ln1494_reg_1968;
wire   [0:0] cmp84_fu_754_p2;
wire    ap_CS_fsm_state8;
wire   [31:0] op2_assign_fu_760_p2;
reg   [31:0] op2_assign_reg_1980;
wire   [0:0] cmp282_fu_766_p2;
wire   [0:0] cmp286_fu_772_p2;
reg   [0:0] cmp286_reg_1993;
wire   [31:0] op2_assign_1_fu_778_p2;
reg   [31:0] op2_assign_1_reg_1999;
wire   [0:0] icmp_ln851_3_fu_789_p2;
reg   [0:0] icmp_ln851_3_reg_2005;
wire   [32:0] p_Val2_2_fu_794_p3;
reg   [32:0] p_Val2_2_reg_2010;
wire   [23:0] select_ln1495_fu_804_p3;
reg   [23:0] select_ln1495_reg_2015;
wire   [0:0] icmp_ln388_fu_811_p2;
reg   [0:0] icmp_ln388_reg_2020_pp1_iter1_reg;
reg   [0:0] icmp_ln388_reg_2020_pp1_iter2_reg;
wire   [10:0] add_ln388_fu_817_p2;
reg   [10:0] add_ln388_reg_2024;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln886_fu_856_p2;
wire   [1:0] trunc_ln728_fu_891_p1;
reg   [1:0] trunc_ln728_reg_2033;
wire   [0:0] icmp_ln874_2_fu_904_p2;
reg   [0:0] icmp_ln874_2_reg_2038;
reg   [0:0] icmp_ln874_2_reg_2038_pp1_iter2_reg;
wire   [0:0] and_ln486_1_fu_931_p2;
reg   [0:0] and_ln486_1_reg_2044_pp1_iter2_reg;
reg   [0:0] and_ln486_1_reg_2044_pp1_iter3_reg;
reg   [0:0] and_ln486_1_reg_2044_pp1_iter4_reg;
reg   [0:0] and_ln486_1_reg_2044_pp1_iter5_reg;
reg   [0:0] and_ln486_1_reg_2044_pp1_iter6_reg;
reg   [31:0] first_row_index_5_reg_403;
wire   [10:0] line_buffer_V_1_0_addr_1_gep_fu_303_p3;
wire   [10:0] line_buffer_V_1_0_addr_2_gep_fu_310_p3;
wire   [10:0] line_buffer_V_2_0_addr_gep_fu_324_p3;
wire   [10:0] line_buffer_V_2_0_addr_1_gep_fu_331_p3;
wire   [10:0] line_buffer_V_0_0_addr_1_gep_fu_338_p3;
wire   [10:0] line_buffer_V_0_0_addr_2_gep_fu_345_p3;
wire   [11:0] trunc_ln6_fu_1083_p4;
reg   [11:0] trunc_ln6_reg_2108;
wire   [11:0] tmp_4_fu_1097_p4;
reg   [11:0] tmp_4_reg_2118;
reg   [11:0] tmp_4_reg_2118_pp1_iter3_reg;
wire   [7:0] trunc_ln674_fu_1125_p1;
reg   [7:0] trunc_ln674_reg_2128;
reg   [7:0] trunc_ln674_reg_2128_pp1_iter4_reg;
reg   [7:0] trunc_ln674_reg_2128_pp1_iter5_reg;
reg   [7:0] trunc_ln674_reg_2128_pp1_iter6_reg;
reg   [7:0] trunc_ln674_reg_2128_pp1_iter7_reg;
wire   [9:0] sub_ln1351_fu_1177_p2;
reg   [9:0] sub_ln1351_reg_2133;
reg  signed [9:0] sub_ln1351_reg_2133_pp1_iter4_reg;
wire   [8:0] sub_ln1351_1_fu_1183_p2;
reg  signed [8:0] sub_ln1351_1_reg_2138;
wire   [20:0] zext_ln1118_fu_1199_p1;
wire   [7:0] p_Result_1_fu_1202_p4;
reg   [7:0] p_Result_1_reg_2155;
reg   [7:0] p_Result_1_reg_2155_pp1_iter4_reg;
reg   [7:0] p_Result_1_reg_2155_pp1_iter5_reg;
reg   [7:0] p_Result_1_reg_2155_pp1_iter6_reg;
reg   [7:0] p_Result_1_reg_2155_pp1_iter7_reg;
wire   [9:0] sub_ln1351_3_fu_1278_p2;
reg   [9:0] sub_ln1351_3_reg_2160;
reg  signed [9:0] sub_ln1351_3_reg_2160_pp1_iter4_reg;
wire   [8:0] sub_ln1351_4_fu_1284_p2;
reg  signed [8:0] sub_ln1351_4_reg_2165;
wire   [7:0] p_Result_9_fu_1300_p4;
reg   [7:0] p_Result_9_reg_2175;
reg   [7:0] p_Result_9_reg_2175_pp1_iter4_reg;
reg   [7:0] p_Result_9_reg_2175_pp1_iter5_reg;
reg   [7:0] p_Result_9_reg_2175_pp1_iter6_reg;
reg   [7:0] p_Result_9_reg_2175_pp1_iter7_reg;
wire   [9:0] sub_ln1351_6_fu_1376_p2;
reg   [9:0] sub_ln1351_6_reg_2180;
reg  signed [9:0] sub_ln1351_6_reg_2180_pp1_iter4_reg;
wire   [8:0] sub_ln1351_7_fu_1382_p2;
reg  signed [8:0] sub_ln1351_7_reg_2185;
wire   [20:0] zext_ln1118_1_fu_1401_p1;
wire   [21:0] zext_ln708_2_fu_1419_p1;
wire   [31:0] output_rows_count_1_fu_1716_p3;
wire    ap_CS_fsm_state18;
wire   [31:0] read_rows_count_2_fu_1770_p3;
wire   [31:0] first_row_index_4_fu_1785_p3;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg   [10:0] line_buffer_V_0_0_address0;
reg    line_buffer_V_0_0_ce0;
reg    line_buffer_V_0_0_we0;
reg   [23:0] line_buffer_V_0_0_d0;
wire   [23:0] line_buffer_V_0_0_q0;
reg   [10:0] line_buffer_V_0_0_address1;
reg    line_buffer_V_0_0_ce1;
wire   [23:0] line_buffer_V_0_0_q1;
reg   [10:0] line_buffer_V_1_0_address0;
reg    line_buffer_V_1_0_ce0;
reg    line_buffer_V_1_0_we0;
reg   [23:0] line_buffer_V_1_0_d0;
wire   [23:0] line_buffer_V_1_0_q0;
reg   [10:0] line_buffer_V_1_0_address1;
reg    line_buffer_V_1_0_ce1;
wire   [23:0] line_buffer_V_1_0_q1;
reg   [10:0] line_buffer_V_2_0_address0;
reg    line_buffer_V_2_0_ce0;
reg    line_buffer_V_2_0_we0;
wire   [23:0] line_buffer_V_2_0_q0;
reg   [10:0] line_buffer_V_2_0_address1;
reg    line_buffer_V_2_0_ce1;
wire   [23:0] line_buffer_V_2_0_q1;
wire    grp_xfUDivResize_fu_560_ap_ready;
reg   [42:0] grp_xfUDivResize_fu_560_in_n;
wire    grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_ready;
reg   [19:0] grp_scaleCompute_17_42_20_48_16_2_s_fu_581_currindex;
reg   [33:0] grp_scaleCompute_17_42_20_48_16_2_s_fu_581_inscale;
reg   [1:0] ap_phi_mux_i_phi_fu_374_p4;
reg   [10:0] i_1_reg_392;
reg   [31:0] output_rows_count_reg_415;
reg   [31:0] read_rows_count_reg_427;
reg   [10:0] ap_phi_mux_j_1_phi_fu_443_p4;
wire   [0:0] ap_phi_mux_flag_write_phi_fu_456_p6;
wire   [0:0] ap_phi_reg_pp1_iter0_flag_write_reg_451;
reg   [0:0] ap_phi_reg_pp1_iter1_flag_write_reg_451;
reg   [0:0] ap_phi_reg_pp1_iter2_flag_write_reg_451;
reg   [23:0] ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12;
wire   [23:0] ap_phi_reg_pp1_iter3_P0Buf_0_V_4_reg_468;
reg   [23:0] ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12;
wire   [23:0] ap_phi_reg_pp1_iter3_P0Buf_V_1_0_reg_491;
reg   [23:0] ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12;
wire   [23:0] ap_phi_reg_pp1_iter3_P0Buf_V_0_0_reg_514;
reg   [23:0] ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12;
wire   [23:0] ap_phi_reg_pp1_iter3_P0Buf_1_V_4_reg_537;
wire   [19:0] empty_fu_710_p1;
wire   [19:0] zext_ln394_fu_866_p1;
wire   [63:0] zext_ln336_fu_659_p1;
wire   [63:0] zext_ln429_fu_1063_p1;
wire   [63:0] zext_ln430_fu_1073_p1;
wire   [63:0] zext_ln388_fu_942_p1;
reg   [23:0] tmp_V_fu_186;
reg   [16:0] indexy_V_0_fu_190;
wire   [16:0] zext_ln445_fu_887_p1;
reg   [16:0] nextYScale_V_1_fu_194;
wire   [16:0] nextYScale_V_fu_845_p3;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln336_fu_621_p2;
wire   [1:0] add_ln331_1_fu_635_p2;
wire   [23:0] rhs_V_fu_674_p4;
wire  signed [41:0] trunc_ln230_fu_715_p0;
wire  signed [41:0] trunc_ln230_1_fu_719_p0;
wire  signed [41:0] sext_ln703_6_fu_723_p0;
wire  signed [42:0] sext_ln703_6_fu_723_p1;
wire  signed [41:0] tmp_5_fu_740_p1;
wire  signed [41:0] icmp_ln1494_fu_748_p0;
wire   [21:0] sub_ln851_fu_784_p2;
wire   [23:0] trunc_ln835_fu_800_p1;
wire   [16:0] trunc_ln850_3_i_fu_823_p4;
wire   [16:0] add_ln695_3_fu_832_p2;
wire   [16:0] select_ln850_3_fu_838_p3;
wire   [31:0] zext_ln886_fu_852_p1;
wire   [10:0] tmp_1_fu_871_p4;
wire   [10:0] tmp_V_5_fu_880_p3;
wire   [31:0] zext_ln874_1_fu_900_p1;
wire   [0:0] icmp_ln874_3_fu_914_p2;
wire   [0:0] and_ln486_fu_909_p2;
wire   [0:0] or_ln486_fu_919_p2;
wire   [0:0] icmp_ln488_fu_925_p2;
wire   [23:0] shl_ln728_3_fu_953_p3;
wire   [0:0] tmp_6_fu_979_p3;
wire   [0:0] tmp_fu_965_p3;
wire   [0:0] icmp_ln1494_1_fu_973_p2;
wire   [0:0] or_ln255_fu_995_p2;
wire   [32:0] select_ln255_fu_987_p3;
wire   [32:0] trunc_ln230_2_fu_949_p1;
wire   [32:0] p_Val2_3_fu_1001_p3;
wire   [1:0] tmp_3_fu_1019_p4;
wire   [23:0] trunc_ln397_fu_1037_p1;
wire   [23:0] shl_ln_fu_1029_p3;
wire   [10:0] tmp_2_fu_1009_p4;
wire   [0:0] not_cmp_i_i175_fu_1047_p2;
wire   [10:0] zext_ln427_fu_1053_p1;
wire   [10:0] idx_nxt_fu_1057_p2;
wire   [23:0] sub_ln397_fu_1041_p2;
wire   [23:0] sub_ln728_fu_960_p2;
wire   [23:0] p_Val2_s_fu_1118_p3;
wire   [23:0] p_Val2_4_fu_1111_p3;
wire   [7:0] trunc_ln674_3_fu_1137_p1;
wire   [8:0] zext_ln215_1_fu_1145_p1;
wire   [8:0] zext_ln215_fu_1141_p1;
wire   [7:0] trunc_ln674_1_fu_1129_p1;
wire   [7:0] trunc_ln674_2_fu_1133_p1;
wire   [8:0] zext_ln215_3_fu_1159_p1;
wire   [8:0] zext_ln215_2_fu_1155_p1;
wire   [8:0] add_ln1350_fu_1149_p2;
wire   [8:0] add_ln1350_1_fu_1163_p2;
wire   [9:0] zext_ln215_4_fu_1169_p1;
wire   [9:0] zext_ln215_5_fu_1173_p1;
wire  signed [8:0] sub_ln1351_2_fu_1189_p2;
wire   [7:0] p_Result_4_fu_1232_p4;
wire   [8:0] zext_ln215_6_fu_1242_p1;
wire   [8:0] zext_ln215_7_fu_1246_p1;
wire   [7:0] p_Result_2_fu_1212_p4;
wire   [7:0] p_Result_3_fu_1222_p4;
wire   [8:0] zext_ln215_8_fu_1256_p1;
wire   [8:0] zext_ln215_9_fu_1260_p1;
wire   [8:0] add_ln1350_2_fu_1250_p2;
wire   [8:0] add_ln1350_3_fu_1264_p2;
wire   [9:0] zext_ln215_10_fu_1270_p1;
wire   [9:0] zext_ln215_11_fu_1274_p1;
wire  signed [8:0] sub_ln1351_5_fu_1290_p2;
wire   [7:0] p_Result_11_fu_1330_p4;
wire   [8:0] zext_ln215_12_fu_1340_p1;
wire   [8:0] zext_ln215_13_fu_1344_p1;
wire   [7:0] p_Result_s_31_fu_1310_p4;
wire   [7:0] p_Result_10_fu_1320_p4;
wire   [8:0] zext_ln215_14_fu_1354_p1;
wire   [8:0] zext_ln215_15_fu_1358_p1;
wire   [8:0] add_ln1350_4_fu_1348_p2;
wire   [8:0] add_ln1350_5_fu_1362_p2;
wire   [9:0] zext_ln215_16_fu_1368_p1;
wire   [9:0] zext_ln215_17_fu_1372_p1;
wire  signed [8:0] sub_ln1351_8_fu_1388_p2;
wire   [21:0] grp_fu_1793_p2;
wire   [11:0] lshr_ln708_1_fu_1410_p4;
wire  signed [20:0] grp_fu_1800_p2;
wire  signed [20:0] grp_fu_1807_p2;
wire  signed [20:0] grp_fu_1814_p2;
wire  signed [21:0] grp_fu_1821_p3;
wire  signed [21:0] grp_fu_1830_p3;
wire  signed [21:0] grp_fu_1839_p3;
wire  signed [22:0] grp_fu_1848_p3;
wire   [17:0] shl_ln1_fu_1450_p3;
wire   [23:0] zext_ln1192_fu_1460_p1;
wire  signed [23:0] sext_ln703_1_fu_1457_p1;
wire   [23:0] add_ln1192_2_fu_1464_p2;
wire   [9:0] trunc_ln851_fu_1488_p1;
wire   [7:0] trunc_ln_fu_1470_p4;
wire   [0:0] icmp_ln851_fu_1492_p2;
wire   [7:0] add_ln695_fu_1498_p2;
wire   [0:0] p_Result_13_fu_1480_p3;
wire   [7:0] select_ln850_fu_1504_p3;
wire  signed [22:0] grp_fu_1857_p3;
wire   [17:0] shl_ln728_1_fu_1520_p3;
wire   [23:0] zext_ln1192_1_fu_1530_p1;
wire  signed [23:0] sext_ln703_3_fu_1527_p1;
wire   [23:0] add_ln1192_5_fu_1534_p2;
wire   [9:0] trunc_ln851_1_fu_1558_p1;
wire   [7:0] trunc_ln850_1_fu_1540_p4;
wire   [0:0] icmp_ln851_1_fu_1562_p2;
wire   [7:0] add_ln695_1_fu_1568_p2;
wire   [0:0] p_Result_14_fu_1550_p3;
wire   [7:0] select_ln850_1_fu_1574_p3;
wire  signed [22:0] grp_fu_1866_p3;
wire   [17:0] shl_ln728_2_fu_1590_p3;
wire   [23:0] zext_ln1192_2_fu_1600_p1;
wire  signed [23:0] sext_ln703_5_fu_1597_p1;
wire   [23:0] add_ln1192_8_fu_1604_p2;
wire   [9:0] trunc_ln851_2_fu_1628_p1;
wire   [7:0] trunc_ln850_2_fu_1610_p4;
wire   [0:0] icmp_ln851_2_fu_1632_p2;
wire   [7:0] add_ln695_2_fu_1638_p2;
wire   [0:0] p_Result_15_fu_1620_p3;
wire   [7:0] select_ln850_2_fu_1644_p3;
wire   [7:0] select_ln850_8_fu_1652_p3;
wire   [7:0] select_ln850_7_fu_1582_p3;
wire   [7:0] select_ln850_6_fu_1512_p3;
wire   [31:0] zext_ln874_fu_1677_p1;
wire   [0:0] icmp_ln874_fu_1681_p2;
wire   [0:0] and_ln508_fu_1686_p2;
wire   [0:0] icmp_ln874_1_fu_1691_p2;
wire   [0:0] or_ln508_fu_1696_p2;
wire   [31:0] add_ln510_fu_1702_p2;
wire   [31:0] select_ln508_fu_1708_p3;
wire   [31:0] zext_ln886_1_fu_1723_p1;
wire   [31:0] first_row_index_fu_1732_p2;
wire   [0:0] icmp_ln521_fu_1738_p2;
wire   [31:0] read_rows_count_1_fu_1752_p2;
wire   [0:0] icmp_ln886_1_fu_1727_p2;
wire   [0:0] and_ln886_fu_1765_p2;
wire   [31:0] sel_tmp1_fu_1758_p3;
wire   [31:0] first_row_index_2_fu_1744_p3;
wire   [31:0] first_row_index_3_fu_1778_p3;
wire   [11:0] grp_fu_1793_p0;
wire   [11:0] grp_fu_1793_p1;
wire   [11:0] grp_fu_1800_p1;
wire   [11:0] grp_fu_1807_p1;
wire   [11:0] grp_fu_1814_p1;
wire   [11:0] grp_fu_1821_p1;
wire   [11:0] grp_fu_1830_p1;
wire   [11:0] grp_fu_1839_p1;
wire   [11:0] grp_fu_1848_p1;
wire   [11:0] grp_fu_1857_p1;
wire   [11:0] grp_fu_1866_p1;
reg    grp_fu_1793_ce;
reg    grp_fu_1800_ce;
reg    grp_fu_1807_ce;
reg    grp_fu_1814_ce;
reg    grp_fu_1821_ce;
reg    grp_fu_1830_ce;
reg    grp_fu_1839_ce;
reg    grp_fu_1848_ce;
reg    grp_fu_1857_ce;
reg    grp_fu_1866_ce;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [21:0] grp_fu_1793_p00;
wire   [21:0] grp_fu_1793_p10;
reg    ap_condition_91;
reg    ap_condition_168;
reg    ap_condition_1691;
reg    ap_condition_1698;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
end

resizeTry_resizeNNBilinear_9_1080_1920_1_640_640_2_2_s_line_buffer_V_0_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
line_buffer_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_V_0_0_address0),
    .ce0(line_buffer_V_0_0_ce0),
    .we0(line_buffer_V_0_0_we0),
    .d0(line_buffer_V_0_0_d0),
    .q0(line_buffer_V_0_0_q0),
    .address1(line_buffer_V_0_0_address1),
    .ce1(line_buffer_V_0_0_ce1),
    .q1(line_buffer_V_0_0_q1)
);

resizeTry_resizeNNBilinear_9_1080_1920_1_640_640_2_2_s_line_buffer_V_0_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
line_buffer_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_V_1_0_address0),
    .ce0(line_buffer_V_1_0_ce0),
    .we0(line_buffer_V_1_0_we0),
    .d0(line_buffer_V_1_0_d0),
    .q0(line_buffer_V_1_0_q0),
    .address1(line_buffer_V_1_0_address1),
    .ce1(line_buffer_V_1_0_ce1),
    .q1(line_buffer_V_1_0_q1)
);

resizeTry_resizeNNBilinear_9_1080_1920_1_640_640_2_2_s_line_buffer_V_0_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
line_buffer_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_V_2_0_address0),
    .ce0(line_buffer_V_2_0_ce0),
    .we0(line_buffer_V_2_0_we0),
    .d0(tmp_V_fu_186),
    .q0(line_buffer_V_2_0_q0),
    .address1(line_buffer_V_2_0_address1),
    .ce1(line_buffer_V_2_0_ce1),
    .q1(line_buffer_V_2_0_q1)
);

resizeTry_xfUDivResize grp_xfUDivResize_fu_560(
    .ap_ready(grp_xfUDivResize_fu_560_ap_ready),
    .in_n(grp_xfUDivResize_fu_560_in_n),
    .ap_return(grp_xfUDivResize_fu_560_ap_return)
);

resizeTry_scaleCompute_17_42_20_48_16_2_s grp_scaleCompute_17_42_20_48_16_2_s_fu_581(
    .ap_ready(grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_ready),
    .currindex(grp_scaleCompute_17_42_20_48_16_2_s_fu_581_currindex),
    .inscale(grp_scaleCompute_17_42_20_48_16_2_s_fu_581_inscale),
    .ap_return(grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return)
);

resizeTry_mul_mul_12ns_12ns_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 22 ))
mul_mul_12ns_12ns_22_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1793_p0),
    .din1(grp_fu_1793_p1),
    .ce(grp_fu_1793_ce),
    .dout(grp_fu_1793_p2)
);

resizeTry_mul_mul_9s_12ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 21 ))
mul_mul_9s_12ns_21_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1351_2_fu_1189_p2),
    .din1(grp_fu_1800_p1),
    .ce(grp_fu_1800_ce),
    .dout(grp_fu_1800_p2)
);

resizeTry_mul_mul_9s_12ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 21 ))
mul_mul_9s_12ns_21_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1351_5_fu_1290_p2),
    .din1(grp_fu_1807_p1),
    .ce(grp_fu_1807_ce),
    .dout(grp_fu_1807_p2)
);

resizeTry_mul_mul_9s_12ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 21 ))
mul_mul_9s_12ns_21_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1351_8_fu_1388_p2),
    .din1(grp_fu_1814_p1),
    .ce(grp_fu_1814_ce),
    .dout(grp_fu_1814_p2)
);

resizeTry_mac_muladd_9s_12ns_21s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 22 ))
mac_muladd_9s_12ns_21s_22_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1351_1_reg_2138),
    .din1(grp_fu_1821_p1),
    .din2(grp_fu_1800_p2),
    .ce(grp_fu_1821_ce),
    .dout(grp_fu_1821_p3)
);

resizeTry_mac_muladd_9s_12ns_21s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 22 ))
mac_muladd_9s_12ns_21s_22_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1351_4_reg_2165),
    .din1(grp_fu_1830_p1),
    .din2(grp_fu_1807_p2),
    .ce(grp_fu_1830_ce),
    .dout(grp_fu_1830_p3)
);

resizeTry_mac_muladd_9s_12ns_21s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 22 ))
mac_muladd_9s_12ns_21s_22_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1351_7_reg_2185),
    .din1(grp_fu_1839_p1),
    .din2(grp_fu_1814_p2),
    .ce(grp_fu_1839_ce),
    .dout(grp_fu_1839_p3)
);

resizeTry_mac_muladd_10s_12ns_22s_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
mac_muladd_10s_12ns_22s_23_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1351_reg_2133_pp1_iter4_reg),
    .din1(grp_fu_1848_p1),
    .din2(grp_fu_1821_p3),
    .ce(grp_fu_1848_ce),
    .dout(grp_fu_1848_p3)
);

resizeTry_mac_muladd_10s_12ns_22s_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
mac_muladd_10s_12ns_22s_23_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1351_3_reg_2160_pp1_iter4_reg),
    .din1(grp_fu_1857_p1),
    .din2(grp_fu_1830_p3),
    .ce(grp_fu_1857_ce),
    .dout(grp_fu_1857_p3)
);

resizeTry_mac_muladd_10s_12ns_22s_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
mac_muladd_10s_12ns_22s_23_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1351_6_reg_2180_pp1_iter4_reg),
    .din1(grp_fu_1866_p1),
    .din2(grp_fu_1839_p3),
    .ce(grp_fu_1866_ce),
    .dout(grp_fu_1866_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln381_reg_1933 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state9))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state9)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((cmp84_reg_1973 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln886_fu_856_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln388_fu_811_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((cmp84_reg_1973 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln388_fu_811_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        ap_phi_reg_pp1_iter1_flag_write_reg_451 <= 1'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_reg_pp1_iter1_flag_write_reg_451 <= ap_phi_reg_pp1_iter0_flag_write_reg_451;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_168)) begin
        if ((1'b1 == ap_condition_91)) begin
            ap_phi_reg_pp1_iter2_flag_write_reg_451 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_flag_write_reg_451 <= ap_phi_reg_pp1_iter1_flag_write_reg_451;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        first_row_index_5_reg_403 <= first_row_index_4_fu_1785_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        first_row_index_5_reg_403 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_1_reg_392 <= i_2_reg_1937;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_1_reg_392 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln331_reg_1875 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_370 <= select_ln331_1_reg_1889;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_370 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln388_reg_2020 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
                indexy_V_0_fu_190[10 : 0] <= zext_ln445_fu_887_p1[10 : 0];
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
                indexy_V_0_fu_190[0] <= 1'b0;
        indexy_V_0_fu_190[1] <= 1'b0;
        indexy_V_0_fu_190[2] <= 1'b0;
        indexy_V_0_fu_190[3] <= 1'b0;
        indexy_V_0_fu_190[4] <= 1'b0;
        indexy_V_0_fu_190[5] <= 1'b0;
        indexy_V_0_fu_190[6] <= 1'b0;
        indexy_V_0_fu_190[7] <= 1'b0;
        indexy_V_0_fu_190[8] <= 1'b0;
        indexy_V_0_fu_190[9] <= 1'b0;
        indexy_V_0_fu_190[10] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln331_fu_609_p2 == 1'd0))) begin
        indvar_flatten_reg_359 <= add_ln331_fu_615_p2;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_359 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln388_reg_2020 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_1_reg_439 <= add_ln388_reg_2024;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j_1_reg_439 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln331_fu_609_p2 == 1'd0))) begin
        j_reg_381 <= add_ln336_fu_653_p2;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_381 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln388_fu_811_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        nextYScale_V_1_fu_194 <= nextYScale_V_fu_845_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        nextYScale_V_1_fu_194 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        output_rows_count_reg_415 <= output_rows_count_1_fu_1716_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_rows_count_reg_415 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        read_rows_count_reg_427 <= read_rows_count_2_fu_1770_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        read_rows_count_reg_427 <= 32'd2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Xscale64_reg_571 <= grp_xfUDivResize_fu_560_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Yscale64_reg_577 <= grp_xfUDivResize_fu_560_ap_return;
        trunc_ln1_reg_1923 <= {{grp_xfUDivResize_fu_560_ap_return[31:10]}};
        zext_ln703_reg_1928[23 : 0] <= zext_ln703_fu_694_p1[23 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln388_reg_2024 <= add_ln388_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp282_reg_1988 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        and_ln486_1_reg_2044 <= and_ln486_1_fu_931_p2;
        icmp_ln874_2_reg_2038 <= icmp_ln874_2_fu_904_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        and_ln486_1_reg_2044_pp1_iter2_reg <= and_ln486_1_reg_2044;
        and_ln486_1_reg_2044_pp1_iter3_reg <= and_ln486_1_reg_2044_pp1_iter2_reg;
        and_ln486_1_reg_2044_pp1_iter4_reg <= and_ln486_1_reg_2044_pp1_iter3_reg;
        and_ln486_1_reg_2044_pp1_iter5_reg <= and_ln486_1_reg_2044_pp1_iter4_reg;
        and_ln486_1_reg_2044_pp1_iter6_reg <= and_ln486_1_reg_2044_pp1_iter5_reg;
        and_ln486_1_reg_2044_pp1_iter7_reg <= and_ln486_1_reg_2044_pp1_iter6_reg;
        icmp_ln388_reg_2020_pp1_iter2_reg <= icmp_ln388_reg_2020_pp1_iter1_reg;
        icmp_ln874_2_reg_2038_pp1_iter2_reg <= icmp_ln874_2_reg_2038;
        p_Result_1_reg_2155_pp1_iter4_reg <= p_Result_1_reg_2155;
        p_Result_1_reg_2155_pp1_iter5_reg <= p_Result_1_reg_2155_pp1_iter4_reg;
        p_Result_1_reg_2155_pp1_iter6_reg <= p_Result_1_reg_2155_pp1_iter5_reg;
        p_Result_1_reg_2155_pp1_iter7_reg <= p_Result_1_reg_2155_pp1_iter6_reg;
        p_Result_9_reg_2175_pp1_iter4_reg <= p_Result_9_reg_2175;
        p_Result_9_reg_2175_pp1_iter5_reg <= p_Result_9_reg_2175_pp1_iter4_reg;
        p_Result_9_reg_2175_pp1_iter6_reg <= p_Result_9_reg_2175_pp1_iter5_reg;
        p_Result_9_reg_2175_pp1_iter7_reg <= p_Result_9_reg_2175_pp1_iter6_reg;
        sub_ln1351_3_reg_2160_pp1_iter4_reg <= sub_ln1351_3_reg_2160;
        sub_ln1351_6_reg_2180_pp1_iter4_reg <= sub_ln1351_6_reg_2180;
        sub_ln1351_reg_2133_pp1_iter4_reg <= sub_ln1351_reg_2133;
        tmp_4_reg_2118_pp1_iter3_reg <= tmp_4_reg_2118;
        trunc_ln674_reg_2128_pp1_iter4_reg <= trunc_ln674_reg_2128;
        trunc_ln674_reg_2128_pp1_iter5_reg <= trunc_ln674_reg_2128_pp1_iter4_reg;
        trunc_ln674_reg_2128_pp1_iter6_reg <= trunc_ln674_reg_2128_pp1_iter5_reg;
        trunc_ln674_reg_2128_pp1_iter7_reg <= trunc_ln674_reg_2128_pp1_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        cmp282_reg_1988 <= cmp282_fu_766_p2;
        cmp286_reg_1993 <= cmp286_fu_772_p2;
        cmp84_reg_1973 <= cmp84_fu_754_p2;
        op2_assign_1_reg_1999 <= op2_assign_1_fu_778_p2;
        op2_assign_reg_1980 <= op2_assign_fu_760_p2;
        p_Val2_2_reg_2010 <= p_Val2_2_fu_794_p3;
        select_ln1495_reg_2015 <= select_ln1495_fu_804_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        flag_write_reg_451 <= ap_phi_reg_pp1_iter2_flag_write_reg_451;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_2_reg_1937 <= i_2_fu_704_p2;
        icmp_ln381_reg_1933 <= icmp_ln381_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln381_reg_1933 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        icmp_ln1494_reg_1968 <= icmp_ln1494_fu_748_p2;
        p_Result_s_reg_1957 <= ret_V_fu_727_p2[32'd42];
        ret_V_reg_1952 <= ret_V_fu_727_p2;
        tmp_5_reg_1962 <= tmp_5_fu_740_p1[32'd41];
        trunc_ln230_1_reg_1947 <= trunc_ln230_1_fu_719_p1;
        trunc_ln230_reg_1942 <= trunc_ln230_fu_715_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln331_reg_1875 <= icmp_ln331_fu_609_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln388_reg_2020 <= icmp_ln388_fu_811_p2;
        icmp_ln388_reg_2020_pp1_iter1_reg <= icmp_ln388_reg_2020;
        j_1_reg_439_pp1_iter1_reg <= j_1_reg_439;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_s_reg_1957 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        icmp_ln851_3_reg_2005 <= icmp_ln851_3_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp84_reg_1973 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln388_fu_811_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln886_reg_2029 <= icmp_ln886_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln388_reg_2020 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indexx_pre_comp_V_reg_594 <= grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp282_reg_1988 == 1'd1) & (1'd1 == and_ln486_1_reg_2044_pp1_iter2_reg) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_Result_1_reg_2155 <= {{p_Val2_s_fu_1118_p3[15:8]}};
        p_Result_9_reg_2175 <= {{p_Val2_s_fu_1118_p3[23:16]}};
        sub_ln1351_1_reg_2138 <= sub_ln1351_1_fu_1183_p2;
        sub_ln1351_3_reg_2160 <= sub_ln1351_3_fu_1278_p2;
        sub_ln1351_4_reg_2165 <= sub_ln1351_4_fu_1284_p2;
        sub_ln1351_6_reg_2180 <= sub_ln1351_6_fu_1376_p2;
        sub_ln1351_7_reg_2185 <= sub_ln1351_7_fu_1382_p2;
        sub_ln1351_reg_2133 <= sub_ln1351_fu_1177_p2;
        trunc_ln674_reg_2128 <= trunc_ln674_fu_1125_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln331_fu_609_p2 == 1'd0))) begin
        select_ln331_1_reg_1889 <= select_ln331_1_fu_641_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln331_fu_609_p2 == 1'd0))) begin
        select_ln331_reg_1884 <= select_ln331_fu_627_p3;
        trunc_ln331_reg_1894 <= trunc_ln331_fu_649_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp282_reg_1988 == 1'd1) & (1'd1 == and_ln486_1_reg_2044) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_4_reg_2118 <= {{sub_ln728_fu_960_p2[23:12]}};
        trunc_ln6_reg_2108 <= {{sub_ln397_fu_1041_p2[23:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_reg_2029 == 1'd0) & (cmp84_reg_1973 == 1'd1) & (icmp_ln388_reg_2020 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_V_fu_186 <= img_src_4180_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln388_reg_2020 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln728_reg_2033 <= trunc_ln728_fu_891_p1;
    end
end

always @ (*) begin
    if ((icmp_ln331_fu_609_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln388_fu_811_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln381_reg_1933 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((((first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd0)) | ((first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd1)))) begin
        ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12 = line_buffer_V_1_0_q1;
    end else if ((((first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd0)) | ((first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd1)))) begin
        ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12 = line_buffer_V_2_0_q1;
    end else if (((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd0)) | (~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd1)))) begin
        ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12 = line_buffer_V_0_0_q1;
    end else begin
        ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12 = ap_phi_reg_pp1_iter3_P0Buf_0_V_4_reg_468;
    end
end

always @ (*) begin
    if ((((first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd0)) | ((first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd1)))) begin
        ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12 = line_buffer_V_1_0_q0;
    end else if ((((first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd0)) | ((first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd1)))) begin
        ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12 = line_buffer_V_2_0_q0;
    end else if (((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd0)) | (~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd1)))) begin
        ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12 = line_buffer_V_0_0_q0;
    end else begin
        ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12 = ap_phi_reg_pp1_iter3_P0Buf_1_V_4_reg_537;
    end
end

always @ (*) begin
    if ((((first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd0)) | ((first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd1)))) begin
        ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12 = line_buffer_V_0_0_q1;
    end else if ((((first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd0)) | ((first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd1)))) begin
        ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12 = line_buffer_V_1_0_q1;
    end else if (((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd0)) | (~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd1)))) begin
        ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12 = line_buffer_V_2_0_q1;
    end else begin
        ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12 = ap_phi_reg_pp1_iter3_P0Buf_V_0_0_reg_514;
    end
end

always @ (*) begin
    if ((((first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd0)) | ((first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd1)))) begin
        ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12 = line_buffer_V_0_0_q0;
    end else if ((((first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd0)) | ((first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd1)))) begin
        ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12 = line_buffer_V_1_0_q0;
    end else if (((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd0)) | (~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter2_reg == 1'd0) & (flag_write_reg_451 == 1'd1)))) begin
        ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12 = line_buffer_V_2_0_q0;
    end else begin
        ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12 = ap_phi_reg_pp1_iter3_P0Buf_V_1_0_reg_491;
    end
end

always @ (*) begin
    if (((icmp_ln331_reg_1875 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_374_p4 = select_ln331_1_reg_1889;
    end else begin
        ap_phi_mux_i_phi_fu_374_p4 = i_reg_370;
    end
end

always @ (*) begin
    if (((icmp_ln388_reg_2020 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_j_1_phi_fu_443_p4 = add_ln388_reg_2024;
    end else begin
        ap_phi_mux_j_1_phi_fu_443_p4 = j_1_reg_439;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1793_ce = 1'b1;
    end else begin
        grp_fu_1793_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1800_ce = 1'b1;
    end else begin
        grp_fu_1800_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1807_ce = 1'b1;
    end else begin
        grp_fu_1807_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1814_ce = 1'b1;
    end else begin
        grp_fu_1814_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1821_ce = 1'b1;
    end else begin
        grp_fu_1821_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1830_ce = 1'b1;
    end else begin
        grp_fu_1830_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1839_ce = 1'b1;
    end else begin
        grp_fu_1839_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1848_ce = 1'b1;
    end else begin
        grp_fu_1848_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1857_ce = 1'b1;
    end else begin
        grp_fu_1857_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1866_ce = 1'b1;
    end else begin
        grp_fu_1866_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln388_reg_2020 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_scaleCompute_17_42_20_48_16_2_s_fu_581_currindex = zext_ln394_fu_866_p1;
    end else if (((icmp_ln381_reg_1933 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        grp_scaleCompute_17_42_20_48_16_2_s_fu_581_currindex = empty_fu_710_p1;
    end else begin
        grp_scaleCompute_17_42_20_48_16_2_s_fu_581_currindex = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln388_reg_2020 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_scaleCompute_17_42_20_48_16_2_s_fu_581_inscale = Xscale64_reg_571;
    end else if (((icmp_ln381_reg_1933 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        grp_scaleCompute_17_42_20_48_16_2_s_fu_581_inscale = Yscale64_reg_577;
    end else begin
        grp_scaleCompute_17_42_20_48_16_2_s_fu_581_inscale = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_xfUDivResize_fu_560_in_n = 43'd4638564679680;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_xfUDivResize_fu_560_in_n = 43'd8246337208320;
    end else begin
        grp_xfUDivResize_fu_560_in_n = 'bx;
    end
end

always @ (*) begin
    if (((cmp282_reg_1988 == 1'd1) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'd1 == and_ln486_1_reg_2044_pp1_iter7_reg) & (1'b0 == ap_block_pp1_stage0))) begin
        img_dst_4181_blk_n = img_dst_4181_full_n;
    end else begin
        img_dst_4181_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op364_write_state17 == 1'b1))) begin
        img_dst_4181_write = 1'b1;
    end else begin
        img_dst_4181_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln886_reg_2029 == 1'd0) & (cmp84_reg_1973 == 1'd1) & (icmp_ln388_reg_2020 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln331_reg_1875 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_src_4180_blk_n = img_src_4180_empty_n;
    end else begin
        img_src_4180_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op115_read_state10 == 1'b1)) | ((icmp_ln331_reg_1875 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_src_4180_read = 1'b1;
    end else begin
        img_src_4180_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln381_reg_1933 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0))) begin
        line_buffer_V_0_0_address0 = line_buffer_V_0_0_addr_2_gep_fu_345_p3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd0) & (icmp_ln874_2_reg_2038 == 1'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0))) begin
        line_buffer_V_0_0_address0 = zext_ln430_fu_1073_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_phi_mux_flag_write_phi_fu_456_p6 == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0))) begin
        line_buffer_V_0_0_address0 = zext_ln388_fu_942_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_0_0_address0 = zext_ln336_fu_659_p1;
    end else begin
        line_buffer_V_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1691)) begin
        if ((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1))) begin
            line_buffer_V_0_0_address1 = line_buffer_V_0_0_addr_1_gep_fu_338_p3;
        end else if (((first_row_index_5_reg_403 == 32'd0) & (icmp_ln874_2_reg_2038 == 1'd0))) begin
            line_buffer_V_0_0_address1 = zext_ln429_fu_1063_p1;
        end else begin
            line_buffer_V_0_0_address1 = 'bx;
        end
    end else begin
        line_buffer_V_0_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_phi_mux_flag_write_phi_fu_456_p6 == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd0) & (icmp_ln874_2_reg_2038 == 1'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)))) begin
        line_buffer_V_0_0_ce0 = 1'b1;
    end else begin
        line_buffer_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd0) & (icmp_ln874_2_reg_2038 == 1'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)))) begin
        line_buffer_V_0_0_ce1 = 1'b1;
    end else begin
        line_buffer_V_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_phi_mux_flag_write_phi_fu_456_p6 == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0))) begin
        line_buffer_V_0_0_d0 = tmp_V_fu_186;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_0_0_d0 = img_src_4180_dout;
    end else begin
        line_buffer_V_0_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln331_reg_1894 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_phi_mux_flag_write_phi_fu_456_p6 == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)))) begin
        line_buffer_V_0_0_we0 = 1'b1;
    end else begin
        line_buffer_V_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_phi_mux_flag_write_phi_fu_456_p6 == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0))) begin
        line_buffer_V_1_0_address0 = zext_ln388_fu_942_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0))) begin
        line_buffer_V_1_0_address0 = line_buffer_V_1_0_addr_2_gep_fu_310_p3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd1) & (icmp_ln874_2_reg_2038 == 1'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0))) begin
        line_buffer_V_1_0_address0 = zext_ln430_fu_1073_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_1_0_address0 = zext_ln336_fu_659_p1;
    end else begin
        line_buffer_V_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1691)) begin
        if ((first_row_index_5_reg_403 == 32'd0)) begin
            line_buffer_V_1_0_address1 = line_buffer_V_1_0_addr_1_gep_fu_303_p3;
        end else if (((first_row_index_5_reg_403 == 32'd1) & (icmp_ln874_2_reg_2038 == 1'd0))) begin
            line_buffer_V_1_0_address1 = zext_ln429_fu_1063_p1;
        end else begin
            line_buffer_V_1_0_address1 = 'bx;
        end
    end else begin
        line_buffer_V_1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_phi_mux_flag_write_phi_fu_456_p6 == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd1) & (icmp_ln874_2_reg_2038 == 1'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)))) begin
        line_buffer_V_1_0_ce0 = 1'b1;
    end else begin
        line_buffer_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd1) & (icmp_ln874_2_reg_2038 == 1'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)))) begin
        line_buffer_V_1_0_ce1 = 1'b1;
    end else begin
        line_buffer_V_1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_phi_mux_flag_write_phi_fu_456_p6 == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0))) begin
        line_buffer_V_1_0_d0 = tmp_V_fu_186;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_V_1_0_d0 = img_src_4180_dout;
    end else begin
        line_buffer_V_1_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_phi_mux_flag_write_phi_fu_456_p6 == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln331_reg_1894 == 1'd1)))) begin
        line_buffer_V_1_0_we0 = 1'b1;
    end else begin
        line_buffer_V_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1691)) begin
        if ((1'b1 == ap_condition_1698)) begin
            line_buffer_V_2_0_address0 = line_buffer_V_2_0_addr_1_gep_fu_331_p3;
        end else if (((ap_phi_mux_flag_write_phi_fu_456_p6 == 1'd1) & (first_row_index_5_reg_403 == 32'd0))) begin
            line_buffer_V_2_0_address0 = zext_ln388_fu_942_p1;
        end else if ((first_row_index_5_reg_403 == 32'd1)) begin
            line_buffer_V_2_0_address0 = zext_ln430_fu_1073_p1;
        end else begin
            line_buffer_V_2_0_address0 = 'bx;
        end
    end else begin
        line_buffer_V_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1691)) begin
        if ((1'b1 == ap_condition_1698)) begin
            line_buffer_V_2_0_address1 = line_buffer_V_2_0_addr_gep_fu_324_p3;
        end else if ((first_row_index_5_reg_403 == 32'd1)) begin
            line_buffer_V_2_0_address1 = zext_ln429_fu_1063_p1;
        end else begin
            line_buffer_V_2_0_address1 = 'bx;
        end
    end else begin
        line_buffer_V_2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln874_2_reg_2038 == 1'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_phi_mux_flag_write_phi_fu_456_p6 == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)))) begin
        line_buffer_V_2_0_ce0 = 1'b1;
    end else begin
        line_buffer_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln874_2_reg_2038 == 1'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0)))) begin
        line_buffer_V_2_0_ce1 = 1'b1;
    end else begin
        line_buffer_V_2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_phi_mux_flag_write_phi_fu_456_p6 == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (first_row_index_5_reg_403 == 32'd0) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0))) begin
        line_buffer_V_2_0_we0 = 1'b1;
    end else begin
        line_buffer_V_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln331_fu_609_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln331_fu_609_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln381_reg_1933 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln388_fu_811_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter7 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter7 == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln388_fu_811_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_2_fu_1464_p2 = ($signed(zext_ln1192_fu_1460_p1) + $signed(sext_ln703_1_fu_1457_p1));

assign add_ln1192_5_fu_1534_p2 = ($signed(zext_ln1192_1_fu_1530_p1) + $signed(sext_ln703_3_fu_1527_p1));

assign add_ln1192_8_fu_1604_p2 = ($signed(zext_ln1192_2_fu_1600_p1) + $signed(sext_ln703_5_fu_1597_p1));

assign add_ln1350_1_fu_1163_p2 = (zext_ln215_3_fu_1159_p1 + zext_ln215_2_fu_1155_p1);

assign add_ln1350_2_fu_1250_p2 = (zext_ln215_6_fu_1242_p1 + zext_ln215_7_fu_1246_p1);

assign add_ln1350_3_fu_1264_p2 = (zext_ln215_8_fu_1256_p1 + zext_ln215_9_fu_1260_p1);

assign add_ln1350_4_fu_1348_p2 = (zext_ln215_12_fu_1340_p1 + zext_ln215_13_fu_1344_p1);

assign add_ln1350_5_fu_1362_p2 = (zext_ln215_14_fu_1354_p1 + zext_ln215_15_fu_1358_p1);

assign add_ln1350_fu_1149_p2 = (zext_ln215_1_fu_1145_p1 + zext_ln215_fu_1141_p1);

assign add_ln331_1_fu_635_p2 = (2'd1 + ap_phi_mux_i_phi_fu_374_p4);

assign add_ln331_fu_615_p2 = (indvar_flatten_reg_359 + 12'd1);

assign add_ln336_fu_653_p2 = (select_ln331_fu_627_p3 + 11'd1);

assign add_ln388_fu_817_p2 = (ap_phi_mux_j_1_phi_fu_443_p4 + 11'd1);

assign add_ln510_fu_1702_p2 = (output_rows_count_reg_415 + 32'd1);

assign add_ln695_1_fu_1568_p2 = (8'd1 + trunc_ln850_1_fu_1540_p4);

assign add_ln695_2_fu_1638_p2 = (8'd1 + trunc_ln850_2_fu_1610_p4);

assign add_ln695_3_fu_832_p2 = (17'd1 + trunc_ln850_3_i_fu_823_p4);

assign add_ln695_fu_1498_p2 = (8'd1 + trunc_ln_fu_1470_p4);

assign and_ln486_1_fu_931_p2 = (or_ln486_fu_919_p2 & icmp_ln488_fu_925_p2);

assign and_ln486_fu_909_p2 = (icmp_ln874_2_fu_904_p2 & cmp286_reg_1993);

assign and_ln508_fu_1686_p2 = (icmp_ln874_fu_1681_p2 & cmp286_reg_1993);

assign and_ln886_fu_1765_p2 = (icmp_ln886_1_fu_1727_p2 & cmp84_reg_1973);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln331_reg_1875 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (img_src_4180_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln331_reg_1875 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (img_src_4180_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_enable_reg_pp1_iter8 == 1'b1) & (img_dst_4181_full_n == 1'b0) & (ap_predicate_op364_write_state17 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (img_src_4180_empty_n == 1'b0) & (ap_predicate_op115_read_state10 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter8 == 1'b1) & (img_dst_4181_full_n == 1'b0) & (ap_predicate_op364_write_state17 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (img_src_4180_empty_n == 1'b0) & (ap_predicate_op115_read_state10 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter8 == 1'b1) & (img_dst_4181_full_n == 1'b0) & (ap_predicate_op364_write_state17 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (img_src_4180_empty_n == 1'b0) & (ap_predicate_op115_read_state10 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp1_stage0_iter1 = ((img_src_4180_empty_n == 1'b0) & (ap_predicate_op115_read_state10 == 1'b1));
end

assign ap_block_state11_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp1_stage0_iter8 = ((img_dst_4181_full_n == 1'b0) & (ap_predicate_op364_write_state17 == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln331_reg_1875 == 1'd0) & (img_src_4180_empty_n == 1'b0));
end

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_168 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_1691 = ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln388_reg_2020_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1698 = (~(first_row_index_5_reg_403 == 32'd0) & ~(first_row_index_5_reg_403 == 32'd1) & (icmp_ln874_2_reg_2038 == 1'd0));
end

always @ (*) begin
    ap_condition_91 = ((icmp_ln886_reg_2029 == 1'd0) & (cmp84_reg_1973 == 1'd1) & (icmp_ln388_reg_2020 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_flag_write_phi_fu_456_p6 = ap_phi_reg_pp1_iter2_flag_write_reg_451;

assign ap_phi_reg_pp1_iter0_flag_write_reg_451 = 'bx;

assign ap_phi_reg_pp1_iter3_P0Buf_0_V_4_reg_468 = 'bx;

assign ap_phi_reg_pp1_iter3_P0Buf_1_V_4_reg_537 = 'bx;

assign ap_phi_reg_pp1_iter3_P0Buf_V_0_0_reg_514 = 'bx;

assign ap_phi_reg_pp1_iter3_P0Buf_V_1_0_reg_491 = 'bx;

always @ (*) begin
    ap_predicate_op115_read_state10 = ((icmp_ln886_reg_2029 == 1'd0) & (cmp84_reg_1973 == 1'd1) & (icmp_ln388_reg_2020 == 1'd0));
end

always @ (*) begin
    ap_predicate_op364_write_state17 = ((cmp282_reg_1988 == 1'd1) & (1'd1 == and_ln486_1_reg_2044_pp1_iter7_reg));
end

assign ap_ready = internal_ap_ready;

assign cmp282_fu_766_p2 = (($signed(output_rows_count_reg_415) < $signed(32'd640)) ? 1'b1 : 1'b0);

assign cmp286_fu_772_p2 = ((read_rows_count_reg_427 == 32'd1080) ? 1'b1 : 1'b0);

assign cmp84_fu_754_p2 = ((read_rows_count_reg_427 != 32'd1080) ? 1'b1 : 1'b0);

assign empty_fu_710_p1 = output_rows_count_reg_415[19:0];

assign first_row_index_2_fu_1744_p3 = ((icmp_ln521_fu_1738_p2[0:0] === 1'b1) ? 32'd0 : first_row_index_fu_1732_p2);

assign first_row_index_3_fu_1778_p3 = ((cmp84_reg_1973[0:0] === 1'b1) ? first_row_index_2_fu_1744_p3 : first_row_index_5_reg_403);

assign first_row_index_4_fu_1785_p3 = ((and_ln886_fu_1765_p2[0:0] === 1'b1) ? first_row_index_5_reg_403 : first_row_index_3_fu_1778_p3);

assign first_row_index_fu_1732_p2 = (first_row_index_5_reg_403 + 32'd1);

assign grp_fu_1793_p0 = grp_fu_1793_p00;

assign grp_fu_1793_p00 = tmp_4_fu_1097_p4;

assign grp_fu_1793_p1 = grp_fu_1793_p10;

assign grp_fu_1793_p10 = trunc_ln6_fu_1083_p4;

assign grp_fu_1800_p1 = zext_ln1118_fu_1199_p1;

assign grp_fu_1807_p1 = zext_ln1118_fu_1199_p1;

assign grp_fu_1814_p1 = zext_ln1118_fu_1199_p1;

assign grp_fu_1821_p1 = zext_ln1118_1_fu_1401_p1;

assign grp_fu_1830_p1 = zext_ln1118_1_fu_1401_p1;

assign grp_fu_1839_p1 = zext_ln1118_1_fu_1401_p1;

assign grp_fu_1848_p1 = zext_ln708_2_fu_1419_p1;

assign grp_fu_1857_p1 = zext_ln708_2_fu_1419_p1;

assign grp_fu_1866_p1 = zext_ln708_2_fu_1419_p1;

assign i_2_fu_704_p2 = (i_1_reg_392 + 11'd1);

assign icmp_ln1494_1_fu_973_p2 = (($signed(indexx_pre_comp_V_reg_594) > $signed(42'd8048869376)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_748_p0 = grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;

assign icmp_ln1494_fu_748_p2 = (($signed(icmp_ln1494_fu_748_p0) > $signed(42'd4525654016)) ? 1'b1 : 1'b0);

assign icmp_ln331_fu_609_p2 = ((indvar_flatten_reg_359 == 12'd3840) ? 1'b1 : 1'b0);

assign icmp_ln336_fu_621_p2 = ((j_reg_381 == 11'd1920) ? 1'b1 : 1'b0);

assign icmp_ln381_fu_698_p2 = ((i_1_reg_392 == 11'd1080) ? 1'b1 : 1'b0);

assign icmp_ln388_fu_811_p2 = ((ap_phi_mux_j_1_phi_fu_443_p4 == 11'd1920) ? 1'b1 : 1'b0);

assign icmp_ln488_fu_925_p2 = ((j_1_reg_439 < 11'd640) ? 1'b1 : 1'b0);

assign icmp_ln521_fu_1738_p2 = ((first_row_index_fu_1732_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln851_1_fu_1562_p2 = ((trunc_ln851_1_fu_1558_p1 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_2_fu_1632_p2 = ((trunc_ln851_2_fu_1628_p1 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_3_fu_789_p2 = ((trunc_ln1_reg_1923 == sub_ln851_fu_784_p2) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_1492_p2 = ((trunc_ln851_fu_1488_p1 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln874_1_fu_1691_p2 = ((zext_ln874_fu_1677_p1 == op2_assign_1_reg_1999) ? 1'b1 : 1'b0);

assign icmp_ln874_2_fu_904_p2 = ((zext_ln874_1_fu_900_p1 == op2_assign_reg_1980) ? 1'b1 : 1'b0);

assign icmp_ln874_3_fu_914_p2 = ((zext_ln874_1_fu_900_p1 == op2_assign_1_reg_1999) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_1681_p2 = ((zext_ln874_fu_1677_p1 == op2_assign_reg_1980) ? 1'b1 : 1'b0);

assign icmp_ln886_1_fu_1727_p2 = (($signed(zext_ln886_1_fu_1723_p1) < $signed(op2_assign_reg_1980)) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_856_p2 = (($signed(zext_ln886_fu_852_p1) < $signed(op2_assign_reg_1980)) ? 1'b1 : 1'b0);

assign idx_nxt_fu_1057_p2 = (tmp_2_fu_1009_p4 + zext_ln427_fu_1053_p1);

assign img_dst_4181_din = {{{select_ln850_8_fu_1652_p3}, {select_ln850_7_fu_1582_p3}}, {select_ln850_6_fu_1512_p3}};

assign line_buffer_V_0_0_addr_1_gep_fu_338_p3 = zext_ln429_fu_1063_p1;

assign line_buffer_V_0_0_addr_2_gep_fu_345_p3 = zext_ln430_fu_1073_p1;

assign line_buffer_V_1_0_addr_1_gep_fu_303_p3 = zext_ln429_fu_1063_p1;

assign line_buffer_V_1_0_addr_2_gep_fu_310_p3 = zext_ln430_fu_1073_p1;

assign line_buffer_V_2_0_addr_1_gep_fu_331_p3 = zext_ln430_fu_1073_p1;

assign line_buffer_V_2_0_addr_gep_fu_324_p3 = zext_ln429_fu_1063_p1;

assign lshr_ln708_1_fu_1410_p4 = {{grp_fu_1793_p2[21:10]}};

assign nextYScale_V_fu_845_p3 = ((p_Result_s_reg_1957[0:0] === 1'b1) ? select_ln850_3_fu_838_p3 : trunc_ln850_3_i_fu_823_p4);

assign not_cmp_i_i175_fu_1047_p2 = ((tmp_2_fu_1009_p4 != 11'd1919) ? 1'b1 : 1'b0);

assign op2_assign_1_fu_778_p2 = ($signed(32'd4294967294) + $signed(read_rows_count_reg_427));

assign op2_assign_fu_760_p2 = ($signed(32'd4294967295) + $signed(read_rows_count_reg_427));

assign or_ln255_fu_995_p2 = (tmp_fu_965_p3 | icmp_ln1494_1_fu_973_p2);

assign or_ln486_fu_919_p2 = (icmp_ln874_3_fu_914_p2 | and_ln486_fu_909_p2);

assign or_ln508_fu_1696_p2 = (icmp_ln874_1_fu_1691_p2 | and_ln508_fu_1686_p2);

assign output_rows_count_1_fu_1716_p3 = ((cmp282_reg_1988[0:0] === 1'b1) ? select_ln508_fu_1708_p3 : output_rows_count_reg_415);

assign p_Result_10_fu_1320_p4 = {{p_Val2_4_fu_1111_p3[23:16]}};

assign p_Result_11_fu_1330_p4 = {{ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12[23:16]}};

assign p_Result_13_fu_1480_p3 = add_ln1192_2_fu_1464_p2[32'd23];

assign p_Result_14_fu_1550_p3 = add_ln1192_5_fu_1534_p2[32'd23];

assign p_Result_15_fu_1620_p3 = add_ln1192_8_fu_1604_p2[32'd23];

assign p_Result_1_fu_1202_p4 = {{p_Val2_s_fu_1118_p3[15:8]}};

assign p_Result_2_fu_1212_p4 = {{ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12[15:8]}};

assign p_Result_3_fu_1222_p4 = {{p_Val2_4_fu_1111_p3[15:8]}};

assign p_Result_4_fu_1232_p4 = {{ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12[15:8]}};

assign p_Result_9_fu_1300_p4 = {{p_Val2_s_fu_1118_p3[23:16]}};

assign p_Result_s_31_fu_1310_p4 = {{ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12[23:16]}};

assign p_Val2_2_fu_794_p3 = ((icmp_ln1494_reg_1968[0:0] === 1'b1) ? 33'd4525654016 : trunc_ln230_reg_1942);

assign p_Val2_3_fu_1001_p3 = ((or_ln255_fu_995_p2[0:0] === 1'b1) ? select_ln255_fu_987_p3 : trunc_ln230_2_fu_949_p1);

assign p_Val2_4_fu_1111_p3 = ((icmp_ln874_2_reg_2038_pp1_iter2_reg[0:0] === 1'b1) ? ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12 : ap_phi_mux_P0Buf_V_1_0_phi_fu_494_p12);

assign p_Val2_s_fu_1118_p3 = ((icmp_ln874_2_reg_2038_pp1_iter2_reg[0:0] === 1'b1) ? ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12 : ap_phi_mux_P0Buf_V_0_0_phi_fu_517_p12);

assign read_rows_count_1_fu_1752_p2 = (read_rows_count_reg_427 + 32'd1);

assign read_rows_count_2_fu_1770_p3 = ((and_ln886_fu_1765_p2[0:0] === 1'b1) ? read_rows_count_reg_427 : sel_tmp1_fu_1758_p3);

assign ret_V_fu_727_p2 = ($signed(sext_ln703_6_fu_723_p1) + $signed(zext_ln703_reg_1928));

assign rhs_V_fu_674_p4 = {{grp_xfUDivResize_fu_560_ap_return[33:10]}};

assign sel_tmp1_fu_1758_p3 = ((cmp84_reg_1973[0:0] === 1'b1) ? read_rows_count_1_fu_1752_p2 : 32'd1080);

assign select_ln1495_fu_804_p3 = ((tmp_5_reg_1962[0:0] === 1'b1) ? 24'd0 : trunc_ln835_fu_800_p1);

assign select_ln255_fu_987_p3 = ((tmp_6_fu_979_p3[0:0] === 1'b1) ? 33'd0 : 33'd8048869376);

assign select_ln331_1_fu_641_p3 = ((icmp_ln336_fu_621_p2[0:0] === 1'b1) ? add_ln331_1_fu_635_p2 : ap_phi_mux_i_phi_fu_374_p4);

assign select_ln331_fu_627_p3 = ((icmp_ln336_fu_621_p2[0:0] === 1'b1) ? 11'd0 : j_reg_381);

assign select_ln508_fu_1708_p3 = ((or_ln508_fu_1696_p2[0:0] === 1'b1) ? add_ln510_fu_1702_p2 : output_rows_count_reg_415);

assign select_ln850_1_fu_1574_p3 = ((icmp_ln851_1_fu_1562_p2[0:0] === 1'b1) ? trunc_ln850_1_fu_1540_p4 : add_ln695_1_fu_1568_p2);

assign select_ln850_2_fu_1644_p3 = ((icmp_ln851_2_fu_1632_p2[0:0] === 1'b1) ? trunc_ln850_2_fu_1610_p4 : add_ln695_2_fu_1638_p2);

assign select_ln850_3_fu_838_p3 = ((icmp_ln851_3_reg_2005[0:0] === 1'b1) ? trunc_ln850_3_i_fu_823_p4 : add_ln695_3_fu_832_p2);

assign select_ln850_6_fu_1512_p3 = ((p_Result_13_fu_1480_p3[0:0] === 1'b1) ? select_ln850_fu_1504_p3 : trunc_ln_fu_1470_p4);

assign select_ln850_7_fu_1582_p3 = ((p_Result_14_fu_1550_p3[0:0] === 1'b1) ? select_ln850_1_fu_1574_p3 : trunc_ln850_1_fu_1540_p4);

assign select_ln850_8_fu_1652_p3 = ((p_Result_15_fu_1620_p3[0:0] === 1'b1) ? select_ln850_2_fu_1644_p3 : trunc_ln850_2_fu_1610_p4);

assign select_ln850_fu_1504_p3 = ((icmp_ln851_fu_1492_p2[0:0] === 1'b1) ? trunc_ln_fu_1470_p4 : add_ln695_fu_1498_p2);

assign sext_ln703_1_fu_1457_p1 = grp_fu_1848_p3;

assign sext_ln703_3_fu_1527_p1 = grp_fu_1857_p3;

assign sext_ln703_5_fu_1597_p1 = grp_fu_1866_p3;

assign sext_ln703_6_fu_723_p0 = grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;

assign sext_ln703_6_fu_723_p1 = sext_ln703_6_fu_723_p0;

assign shl_ln1_fu_1450_p3 = {{trunc_ln674_reg_2128_pp1_iter7_reg}, {10'd0}};

assign shl_ln728_1_fu_1520_p3 = {{p_Result_1_reg_2155_pp1_iter7_reg}, {10'd0}};

assign shl_ln728_2_fu_1590_p3 = {{p_Result_9_reg_2175_pp1_iter7_reg}, {10'd0}};

assign shl_ln728_3_fu_953_p3 = {{trunc_ln728_reg_2033}, {22'd0}};

assign shl_ln_fu_1029_p3 = {{tmp_3_fu_1019_p4}, {22'd0}};

assign start_out = real_start;

assign sub_ln1351_1_fu_1183_p2 = (zext_ln215_2_fu_1155_p1 - zext_ln215_fu_1141_p1);

assign sub_ln1351_2_fu_1189_p2 = (zext_ln215_3_fu_1159_p1 - zext_ln215_fu_1141_p1);

assign sub_ln1351_3_fu_1278_p2 = (zext_ln215_10_fu_1270_p1 - zext_ln215_11_fu_1274_p1);

assign sub_ln1351_4_fu_1284_p2 = (zext_ln215_8_fu_1256_p1 - zext_ln215_6_fu_1242_p1);

assign sub_ln1351_5_fu_1290_p2 = (zext_ln215_9_fu_1260_p1 - zext_ln215_6_fu_1242_p1);

assign sub_ln1351_6_fu_1376_p2 = (zext_ln215_16_fu_1368_p1 - zext_ln215_17_fu_1372_p1);

assign sub_ln1351_7_fu_1382_p2 = (zext_ln215_14_fu_1354_p1 - zext_ln215_12_fu_1340_p1);

assign sub_ln1351_8_fu_1388_p2 = (zext_ln215_15_fu_1358_p1 - zext_ln215_12_fu_1340_p1);

assign sub_ln1351_fu_1177_p2 = (zext_ln215_4_fu_1169_p1 - zext_ln215_5_fu_1173_p1);

assign sub_ln397_fu_1041_p2 = (trunc_ln397_fu_1037_p1 - shl_ln_fu_1029_p3);

assign sub_ln728_fu_960_p2 = (select_ln1495_reg_2015 - shl_ln728_3_fu_953_p3);

assign sub_ln851_fu_784_p2 = (22'd0 - trunc_ln230_1_reg_1947);

assign tmp_1_fu_871_p4 = {{p_Val2_2_reg_2010[32:22]}};

assign tmp_2_fu_1009_p4 = {{p_Val2_3_fu_1001_p3[32:22]}};

assign tmp_3_fu_1019_p4 = {{p_Val2_3_fu_1001_p3[23:22]}};

assign tmp_4_fu_1097_p4 = {{sub_ln728_fu_960_p2[23:12]}};

assign tmp_5_fu_740_p1 = grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;

assign tmp_6_fu_979_p3 = indexx_pre_comp_V_reg_594[32'd41];

assign tmp_V_5_fu_880_p3 = ((tmp_5_reg_1962[0:0] === 1'b1) ? 11'd0 : tmp_1_fu_871_p4);

assign tmp_fu_965_p3 = indexx_pre_comp_V_reg_594[32'd41];

assign trunc_ln230_1_fu_719_p0 = grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;

assign trunc_ln230_1_fu_719_p1 = trunc_ln230_1_fu_719_p0[21:0];

assign trunc_ln230_2_fu_949_p1 = indexx_pre_comp_V_reg_594[32:0];

assign trunc_ln230_fu_715_p0 = grp_scaleCompute_17_42_20_48_16_2_s_fu_581_ap_return;

assign trunc_ln230_fu_715_p1 = trunc_ln230_fu_715_p0[32:0];

assign trunc_ln331_fu_649_p1 = select_ln331_1_fu_641_p3[0:0];

assign trunc_ln397_fu_1037_p1 = p_Val2_3_fu_1001_p3[23:0];

assign trunc_ln674_1_fu_1129_p1 = ap_phi_mux_P0Buf_0_V_4_phi_fu_471_p12[7:0];

assign trunc_ln674_2_fu_1133_p1 = p_Val2_4_fu_1111_p3[7:0];

assign trunc_ln674_3_fu_1137_p1 = ap_phi_mux_P0Buf_1_V_4_phi_fu_540_p12[7:0];

assign trunc_ln674_fu_1125_p1 = p_Val2_s_fu_1118_p3[7:0];

assign trunc_ln6_fu_1083_p4 = {{sub_ln397_fu_1041_p2[23:12]}};

assign trunc_ln728_fu_891_p1 = tmp_V_5_fu_880_p3[1:0];

assign trunc_ln835_fu_800_p1 = p_Val2_2_fu_794_p3[23:0];

assign trunc_ln850_1_fu_1540_p4 = {{add_ln1192_5_fu_1534_p2[17:10]}};

assign trunc_ln850_2_fu_1610_p4 = {{add_ln1192_8_fu_1604_p2[17:10]}};

assign trunc_ln850_3_i_fu_823_p4 = {{ret_V_reg_1952[38:22]}};

assign trunc_ln851_1_fu_1558_p1 = add_ln1192_5_fu_1534_p2[9:0];

assign trunc_ln851_2_fu_1628_p1 = add_ln1192_8_fu_1604_p2[9:0];

assign trunc_ln851_fu_1488_p1 = add_ln1192_2_fu_1464_p2[9:0];

assign trunc_ln_fu_1470_p4 = {{add_ln1192_2_fu_1464_p2[17:10]}};

assign zext_ln1118_1_fu_1401_p1 = tmp_4_reg_2118_pp1_iter3_reg;

assign zext_ln1118_fu_1199_p1 = trunc_ln6_reg_2108;

assign zext_ln1192_1_fu_1530_p1 = shl_ln728_1_fu_1520_p3;

assign zext_ln1192_2_fu_1600_p1 = shl_ln728_2_fu_1590_p3;

assign zext_ln1192_fu_1460_p1 = shl_ln1_fu_1450_p3;

assign zext_ln215_10_fu_1270_p1 = add_ln1350_2_fu_1250_p2;

assign zext_ln215_11_fu_1274_p1 = add_ln1350_3_fu_1264_p2;

assign zext_ln215_12_fu_1340_p1 = p_Result_9_fu_1300_p4;

assign zext_ln215_13_fu_1344_p1 = p_Result_11_fu_1330_p4;

assign zext_ln215_14_fu_1354_p1 = p_Result_s_31_fu_1310_p4;

assign zext_ln215_15_fu_1358_p1 = p_Result_10_fu_1320_p4;

assign zext_ln215_16_fu_1368_p1 = add_ln1350_4_fu_1348_p2;

assign zext_ln215_17_fu_1372_p1 = add_ln1350_5_fu_1362_p2;

assign zext_ln215_1_fu_1145_p1 = trunc_ln674_3_fu_1137_p1;

assign zext_ln215_2_fu_1155_p1 = trunc_ln674_1_fu_1129_p1;

assign zext_ln215_3_fu_1159_p1 = trunc_ln674_2_fu_1133_p1;

assign zext_ln215_4_fu_1169_p1 = add_ln1350_fu_1149_p2;

assign zext_ln215_5_fu_1173_p1 = add_ln1350_1_fu_1163_p2;

assign zext_ln215_6_fu_1242_p1 = p_Result_1_fu_1202_p4;

assign zext_ln215_7_fu_1246_p1 = p_Result_4_fu_1232_p4;

assign zext_ln215_8_fu_1256_p1 = p_Result_2_fu_1212_p4;

assign zext_ln215_9_fu_1260_p1 = p_Result_3_fu_1222_p4;

assign zext_ln215_fu_1141_p1 = trunc_ln674_fu_1125_p1;

assign zext_ln336_fu_659_p1 = select_ln331_reg_1884;

assign zext_ln388_fu_942_p1 = j_1_reg_439_pp1_iter1_reg;

assign zext_ln394_fu_866_p1 = j_1_reg_439;

assign zext_ln427_fu_1053_p1 = not_cmp_i_i175_fu_1047_p2;

assign zext_ln429_fu_1063_p1 = tmp_2_fu_1009_p4;

assign zext_ln430_fu_1073_p1 = idx_nxt_fu_1057_p2;

assign zext_ln445_fu_887_p1 = tmp_V_5_fu_880_p3;

assign zext_ln703_fu_694_p1 = rhs_V_fu_674_p4;

assign zext_ln708_2_fu_1419_p1 = lshr_ln708_1_fu_1410_p4;

assign zext_ln874_1_fu_900_p1 = tmp_V_5_fu_880_p3;

assign zext_ln874_fu_1677_p1 = indexy_V_0_fu_190;

assign zext_ln886_1_fu_1723_p1 = nextYScale_V_1_fu_194;

assign zext_ln886_fu_852_p1 = nextYScale_V_fu_845_p3;

always @ (posedge ap_clk) begin
    zext_ln703_reg_1928[42:24] <= 19'b0000000000000000000;
    indexy_V_0_fu_190[16:11] <= 6'b000000;
end

endmodule //resizeTry_resizeNNBilinear_9_1080_1920_1_640_640_2_2_s
